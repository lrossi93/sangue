{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/add-forecast/add-forecast.component.ts","./src/app/add-forecast/add-forecast.component.html","./src/app/add-loan-dialog/add-loan-dialog.component.ts","./src/app/add-loan-dialog/add-loan-dialog.component.html","./src/app/add-order-dialog/add-order-dialog.component.ts","./src/app/add-order-dialog/add-order-dialog.component.html","./src/app/add-order-row/add-order-row.component.ts","./src/app/add-order-row/add-order-row.component.html","./src/app/add-product/add-product.component.ts","./src/app/add-product/add-product.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/are-you-sure-forecast/are-you-sure-forecast.component.ts","./src/app/are-you-sure-forecast/are-you-sure-forecast.component.html","./src/app/are-you-sure-order-row/are-you-sure-order-row.component.ts","./src/app/are-you-sure-order-row/are-you-sure-order-row.component.html","./src/app/are-you-sure-order/are-you-sure-order.component.ts","./src/app/are-you-sure-order/are-you-sure-order.component.html","./src/app/are-you-sure-product/are-you-sure-product.component.ts","./src/app/are-you-sure-product/are-you-sure-product.component.html","./src/app/button-delete-forecast/button-delete-forecast.component.ts","./src/app/button-delete-order/button-delete-order.component.ts","./src/app/button-delete-product/button-delete-product.component.ts","./src/app/button-edit-order/button-edit-order.component.ts","./src/app/button-edit-order/button-edit-order.component.html","./src/app/button-loan-details/button-loan-details.component.ts","./src/app/button-loan-details/button-loan-details.component.html","./src/app/button-order-report/button-order-report.component.ts","./src/app/button-order-report/button-order-report.component.html","./src/app/button-supply-details/button-supply-details.component.ts","./src/app/button-supply-details/button-supply-details.component.html","./src/app/button-supply-report/button-supply-report.component.ts","./src/app/button-supply-report/button-supply-report.component.html","./src/app/cell-checkbox/cell-checkbox.component.ts","./src/app/cell-checkbox/cell-checkbox.component.html","./src/app/datepicker-products-dialog/datepicker-products-dialog.component.ts","./src/app/datepicker-products-dialog/datepicker-products-dialog.component.html","./src/app/ddt-order-actions/ddt-order-actions.component.ts","./src/app/ddt-order-actions/ddt-order-actions.component.html","./src/app/drag-n-drop.directive.ts","./src/app/dropdown-products-forecast/dropdown-products-forecast.component.ts","./src/app/dropdown-products-forecast/dropdown-products-forecast.component.html","./src/app/dropdown-users-forecast/dropdown-users-forecast.component.ts","./src/app/dropdown-users-forecast/dropdown-users-forecast.component.html","./src/app/dropdown-users-orders-component/dropdown-users-orders-component.component.ts","./src/app/dropdown-users-orders-component/dropdown-users-orders-component.component.html","./src/app/dropdown-users-orders/dropdown-users-orders.component.ts","./src/app/dropdown-users-orders/dropdown-users-orders.component.html","./src/app/edit-order-dialog/edit-order-dialog.component.ts","./src/app/edit-order-dialog/edit-order-dialog.component.html","./src/app/edit-order-row/edit-order-row.component.ts","./src/app/edit-order-row/edit-order-row.component.html","./src/app/edit-order/edit-order.component.ts","./src/app/edit-order/edit-order.component.html","./src/app/file-download.service.ts","./src/app/forecast-report/forecast-report.component.ts","./src/app/forecast-report/forecast-report.component.html","./src/app/forecast.service.ts","./src/app/forecast/forecast.component.ts","./src/app/forecast/forecast.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/loading-cell-renderer/loading-cell-renderer.component.ts","./src/app/loading-cell-renderer/loading-cell-renderer.component.html","./src/app/loan-details-dialog/loan-details-dialog.component.ts","./src/app/loan-details-dialog/loan-details-dialog.component.html","./src/app/loans/loans.component.ts","./src/app/loans/loans.component.html","./src/app/logged/logged.component.ts","./src/app/logged/logged.component.html","./src/app/login-gateway/login-gateway.component.ts","./src/app/login-gateway/login-gateway.component.html","./src/app/login.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/mark-as-received-dialog/mark-as-received-dialog.component.ts","./src/app/mark-as-received-dialog/mark-as-received-dialog.component.html","./src/app/mat-input/mat-input.component.ts","./src/app/order-ddt-upload-dialog/order-ddt-upload-dialog.component.ts","./src/app/order-ddt-upload-dialog/order-ddt-upload-dialog.component.html","./src/app/order-ddt.service.ts","./src/app/order-resume/order-resume.component.ts","./src/app/order-resume/order-resume.component.html","./src/app/orderable-period.service.ts","./src/app/orderable-period/orderable-period.component.ts","./src/app/orderable-period/orderable-period.component.html","./src/app/orders-extra-checkbox/orders-extra-checkbox.component.ts","./src/app/orders-extra-checkbox/orders-extra-checkbox.component.html","./src/app/orders-received-checkbox/orders-received-checkbox.component.ts","./src/app/orders-received-checkbox/orders-received-checkbox.component.html","./src/app/orders-sent-checkbox/orders-sent-checkbox.component.ts","./src/app/orders-sent-checkbox/orders-sent-checkbox.component.html","./src/app/orders-to-customer-checkbox/orders-to-customer-checkbox.component.ts","./src/app/orders-to-customer-checkbox/orders-to-customer-checkbox.component.html","./src/app/orders-to-customer/orders-to-customer.component.ts","./src/app/orders-to-customer/orders-to-customer.component.html","./src/app/orders-urgent-checkbox/orders-urgent-checkbox.component.ts","./src/app/orders-urgent-checkbox/orders-urgent-checkbox.component.html","./src/app/orders-validated-checkbox/orders-validated-checkbox.component.ts","./src/app/orders-validated-checkbox/orders-validated-checkbox.component.html","./src/app/orders-validated-dialog/orders-validated-dialog.component.ts","./src/app/orders-validated-dialog/orders-validated-dialog.component.html","./src/app/orders.service.ts","./src/app/orders/orders.component.ts","./src/app/orders/orders.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/pharma-registry-active-checkbox/pharma-registry-active-checkbox.component.ts","./src/app/pharma-registry-active-checkbox/pharma-registry-active-checkbox.component.html","./src/app/pharma-registry-extra-checkbox/pharma-registry-extra-checkbox.component.ts","./src/app/pharma-registry-extra-checkbox/pharma-registry-extra-checkbox.component.html","./src/app/pharma-registry.service.ts","./src/app/pharma-registry/pharma-registry.component.ts","./src/app/pharma-registry/pharma-registry.component.html","./src/app/send-to-customer-dialog/send-to-customer-dialog.component.ts","./src/app/send-to-customer-dialog/send-to-customer-dialog.component.html","./src/app/send-to-supplier-dialog/send-to-supplier-dialog.component.ts","./src/app/send-to-supplier-dialog/send-to-supplier-dialog.component.html","./src/app/snackbar.service.ts","./src/app/supplies/supplies.component.ts","./src/app/supplies/supplies.component.html","./src/app/users.service.ts","./src/app/version.service.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/environments/grid-configs.ts","./src/main.ts"],"sourcesContent":["import { Component, Inject, Injectable, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { map, Observable, startWith } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-add-forecast',\n  templateUrl: './add-forecast.component.html',\n  styleUrls: ['./add-forecast.component.css']\n})\n@Injectable({providedIn: 'root'})\nexport class AddForecastComponent implements OnInit{\n\n  url = environment.basePath + 'anag.php';\n  username: string | null = \"\";\n  id_prd: string = \"\";\n  isSubmitted: boolean = false;\n  loginService!: LoginService; \n\n  //fields to return to caller\n  anno!: UntypedFormControl;  \n  qta!: UntypedFormControl;\n  note!: UntypedFormControl;\n  qta_approvata!: UntypedFormControl;\n  costo_unitario!: UntypedFormControl;\n  \n  //BEGIN: autocomplete - users\n  users: any = [];\n  filteredUsers!: Observable<string[]>;\n  userFormControl!: UntypedFormControl;\n  userNames: any = [];\n  //END: autocomplete - users\n\n  //BEGIN: autocomplete - products\n  products: any = [];\n  filteredProducts!: Observable<string[]>;\n  productFormControl!: UntypedFormControl;\n  productNames: any = [];\n  //END: autocomplete - products\n\n  isBadForecast: boolean = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      id: number,\n      anno: string,\n      username: string,\n      id_prd: string,\n      qta: number,\n      note: string,\n      users: any,\n      products: any\n    },\n    loginService: LoginService,\n    private dialogRef: MatDialogRef<AddForecastComponent>,\n    private _builder: UntypedFormBuilder,\n  ) {\n      this.loginService = loginService;\n      this.anno = _builder.control(new Date().getFullYear(), Validators.required);\n      \n      //if ASL Cliente, set values of qta_approvata and costo_unitario\n      if(loginService.getUserCode() == \"210\"){\n        this.userFormControl = _builder.control(loginService.getUsername(), Validators.required);\n        this.qta_approvata = _builder.control(\"in attesa\", Validators.required);\n        this.costo_unitario = _builder.control(\"in attesa\", Validators.required);\n        this.username = loginService.getUsername();\n      }\n      //else, if ASL Novara, set those values to 0 and pick list of users\n      else if(loginService.getUserCode() == \"220\"){\n        this.userFormControl = _builder.control(this.userNames[0], Validators.required);\n        this.qta_approvata = _builder.control(0, Validators.required);\n        this.costo_unitario = _builder.control(0, Validators.required);        \n      }      \n\n      this.productFormControl = _builder.control('', Validators.required);\n      this.qta = _builder.control(0, Validators.required);\n      this.note = _builder.control('');\n  }\n\n  ngOnInit(): void {\n    //general onInit settings\n    this.getProductNames();\n    this.products = this.data.products;\n\n    //specific user settings\n    //if(this.loginService.getUserCode() == \"210\"){\n    this.getUserNames();\n    this.users = this.data.users;\n    console.log(this.userFormControl.value);\n    console.log(this.users);\n    //}\n    //else if(this.loginService.getUserCode() == \"220\"){\n    //  this.getUserNames();\n    //  this.users = this.data.users;\n    //}\n\n    //filter input for users\n    this.filteredUsers = this.userFormControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterUsers(value || ''))\n    );\n    //filter input for products\n    this.filteredProducts = this.productFormControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterProducts(value || ''))\n    );\n  }\n\n  onSubmit() {\n    if(!this.invalidFields()){\n      this.isSubmitted = true;\n      this.dialogRef.close(\n        {\n          anno: this.anno.value,\n          username: this.username,\n          id_prd: this.id_prd,\n          qta: this.qta.value,\n          note: this.note.value,\n          qta_approvata: this.qta_approvata.value,\n          costo_unitario: this.costo_unitario.value,\n          isSubmitted: this.isSubmitted\n        }\n      );\n      this.isBadForecast = true;\n      return;\n    }\n    this.isBadForecast = true;\n  }\n\n  invalidFields(): boolean {\n    //sangueaslno\n    if(this.loginService.getUserCode() == \"220\"){\n      if(this.anno.value == \"\" ){\n        console.log(1);\n        return true;\n      }\n      if(this.username == \"\"){\n        console.log(2);\n        return true;\n      }\n      if(this.id_prd == \"\"){\n        console.log(3);\n        return true;\n      }\n      if(this.qta.value == 0){\n        console.log(4);\n        return true;\n      }\n      if(this.qta.value < 0){\n        console.log(5);\n        return true;\n      }\n      if(this.qta.value == null){\n        console.log(5.1);\n        return true;\n      }\n      if(this.qta.value == \"\"){\n        console.log(6);\n        return true;\n      } \n      if(this.qta_approvata.value == \"\"){\n        console.log(7);\n        return true;\n      }\n      if(this.qta_approvata.value < 0){\n        console.log(8);\n        return true;\n      }\n      if(this.qta_approvata.value == null){\n        console.log(8.1);\n        return true;\n      }\n      if(this.costo_unitario.value == \"\"){\n        console.log(9);\n        return true;\n      } \n      if(this.costo_unitario.value < 0){\n        console.log(10);\n        return true;\n      }\n      if(this.costo_unitario.value == null){\n        console.log(10.1);\n        return true;\n      }\n      if(!this.isAmongUsers(this.userFormControl.value)){\n        console.log(11);\n        return true;\n      }\n      if(!this.isAmongProducts(this.productFormControl.value)){\n        console.log(12);\n        return true;\n      }\n    }\n    //sangueasl\n    if(this.loginService.getUserCode() == \"210\"){\n      if(this.anno.value == \"\" ){\n        console.log(1);\n        return true;\n      }\n      if(this.id_prd == \"\"){\n        console.log(3);\n        return true;\n      }\n      if(this.qta.value == 0){\n        console.log(4);\n        return true;\n      }\n      if(this.qta.value < 0){\n        console.log(5);\n        return true;\n      }\n      if(this.qta.value == \"\"){\n        console.log(6);\n        return true;\n      } \n      if(this.qta.value == null){\n        console.log(6.1);\n        return true;\n      } \n      if(!this.isAmongProducts(this.productFormControl.value)){\n        console.log(12);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  //BEGIN functions for autocomplete - USERS\n  private _filterUsers(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.userNames.filter((option: string) => option.toLowerCase().includes(filterValue));\n  }\n\n  getUserId(event: any){\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.users[i].client == event.source.value){\n        return this.users[i].id;\n      }\n    }\n  }\n  \n  getUserName(id: string): string | null {\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.users[i].id == id){\n        return this.users[i].client;\n      }\n    }\n    return null;\n  }\n\n  getUserNames(): void {\n    for(let i = 0; i < this.data.users.length; ++i){\n      this.userNames.push(this.data.users[i].client);\n    }\n  }\n\n  onUserSelected(event: any) {\n    if(event.source._selected){\n      this.username = this.getUserId(event);\n    }\n  }\n\n  isAmongUsers(inputValue: string): boolean {\n    console.log(this.userFormControl.value);\n    for(var i = 0; i < this.userNames.length; ++i) {\n      if(inputValue == this.userNames[i]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  //END functions for autocomplete - USERS\n\n  //BEGIN functions for autocomplete - PRODUCTS\n  private _filterProducts(value: string): string[]{\n    const filterValue = value.toLowerCase();\n    return this.productNames.filter((option: string) => option.toLowerCase().includes(filterValue));\n  }\n\n  getProductId(event: any){\n    for(let i = 0; i < this.products.length; ++i){\n      if(this.products[i].des == event.source.value){\n        return this.products[i].id;\n      }\n    }\n  }\n\n  getProductNames(): void {\n    for(let i = 0; i < this.data.products.length; ++i){      \n      this.productNames.push(this.data.products[i].des);\n    }\n  }\n\n  onProductSelected(event: any) {\n    if(event.source._selected){\n      this.id_prd = this.getProductId(event);\n    }\n  }\n\n  isAmongProducts(inputValue: string): boolean {\n    for(var i = 0; i < this.productNames.length; ++i) {\n      if(inputValue == this.productNames[i]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  //END functions for autocomplete - PRODUCTS\n}\n","<div>\n\t<h2 mat-dialog-title>{{ 'Add a new forecast' | translate }}</h2>\n\n\t<div mat-dialog-content>\n\t\t<mat-form-field>\n\t\t\t<input\n\t\t\tplaceholder=\"{{ 'Year' | translate }}\"\n\t\t\t[formControl]=\"anno\"\n\t\t\ttype=\"number\"\n\t\t\tmatInput>\n\t\t</mat-form-field>\n\t\t<br>\n\t\t\n\t\t<!--autocomplete dropdown for USERS-->\n\t\t<mat-form-field\n\t\t*ngIf=\"loginService.getUserCode()=='220'\">\n\t\t\t<input \n\t\t\ttype=\"text\"\n\t\t\tplaceholder=\"{{ 'User' | translate }}\"\n\t\t\tmatInput\n\t\t\t[formControl]=\"userFormControl\"\n\t\t\t[matAutocomplete]=\"auto\">\n\t\t\t<mat-autocomplete #auto=\"matAutocomplete\">\n\t\t\t\t<mat-option *ngFor=\"let optionU of filteredUsers | async\" [value]=\"optionU\" (onSelectionChange)='onUserSelected($event)'>\n\t\t\t\t\t{{ optionU }}\n\t\t\t\t</mat-option>\n\t\t\t</mat-autocomplete>\n\t\t</mat-form-field>\n\n\t\t<!--autocomplete dropdown for PRODUCTS-->\n\t\t<mat-form-field>\n\t\t\t<input \n\t\t\ttype=\"text\"\n\t\t\tplaceholder=\"{{ 'Product' | translate }}\"\n\t\t\tmatInput\n\t\t\t[formControl]=\"productFormControl\"\n\t\t\t[matAutocomplete]=\"auto\">\n\t\t\t<mat-autocomplete #auto=\"matAutocomplete\">\n\t\t\t<mat-option *ngFor=\"let optionP of filteredProducts | async\" [value]=\"optionP\" (onSelectionChange)='onProductSelected($event)'>\n\t\t\t\t{{ optionP }}\n\t\t\t</mat-option>\n\t\t\t</mat-autocomplete>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field>\n\t\t\t<input\n\t\t\ttype=\"number\"\n\t\t\tplaceholder=\"{{ 'Quantity' | translate }}\"\n\t\t\t[formControl]=\"qta\"\n\t\t\tmatInput>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field *ngIf=\"loginService.getUserCode() == '220'\">\n\t\t\t<input\n\t\t\ttype=\"number\"\n\t\t\tplaceholder=\"{{ 'Approved quantity' | translate }}\"\n\t\t\t[formControl]=\"qta_approvata\"\n\t\t\tmatInput>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field *ngIf=\"loginService.getUserCode() == '220'\">\n\t\t\t<input\n\t\t\ttype=\"number\"\n\t\t\tplaceholder=\"{{ 'Cost per unit' | translate }}\"\n\t\t\t[formControl]=\"costo_unitario\"\n\t\t\tmatInput>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field>\n\t\t\t<textarea\n\t\t\tplaceholder=\"{{ 'Notes' | translate }}\"\n\t\t\t[formControl]=\"note\"\n\t\t\tmatInput></textarea>\n\t\t</mat-form-field>\n\t</div>\n\n\t<p align=\"center\"\n\t*ngIf=\"isBadForecast\"\n\tstyle=\"color: red;\">\n\t\t{{ 'Some compulsory fields are either empty or invalid' | translate }}!\n\t</p>\n\n\t<div mat-dialog-actions align=\"center\">\n\t\t<br>\n\t\t<button \n\t\tmat-mini-fab \n\t\tcolor=\"primary\"\n\t\tmatTooltip=\"{{ 'Submit' | translate }}\"\n\t\t(click)=\"onSubmit()\">\n\t\t\t<i class=\"material-icons\">check</i>\n\t\t</button>\n\t\t<button \n\t\tmat-mini-fab \n\t\tmat-dialog-close\n\t\tmatTooltip=\"{{ 'Cancel' | translate }}\" \n\t\tcolor=\"accent\">\n\t\t\t<i class=\"material-icons\">close</i>\n\t\t</button>\n\t</div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, UntypedFormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { map, Observable, startWith } from 'rxjs';\nimport { Forecast, Order, OrderRow, Product, User } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-add-loan-dialog',\n  templateUrl: './add-loan-dialog.component.html',\n  styleUrls: ['./add-loan-dialog.component.css']\n})\nexport class AddLoanDialogComponent implements OnInit {\n  anno!: UntypedFormControl;\n  username!: string;\n  productId!: string;\n  d_ordine!: UntypedFormControl;\n  n_ordine!: UntypedFormControl;\n  b_urgente!: UntypedFormControl;\n  b_extra!: UntypedFormControl;\n  b_validato!: UntypedFormControl;\n  d_validato!: UntypedFormControl;\n  n_ddt!: UntypedFormControl;\n  d_ddt!: UntypedFormControl;\n  note!: UntypedFormControl;\n  d_consegna_prevista!: UntypedFormControl;\n  note_consegna!: UntypedFormControl;\n  b_prestito!: UntypedFormControl;\n  id_ordine_prestito!: UntypedFormControl;\n  qta!: UntypedFormControl;\n\n  newLoanReq!: Order;\n  newLoanRes!: Order;\n  newLoanRowReq!: OrderRow;\n  newLoanRowRes!: OrderRow;\n\n  yearFormControl!: UntypedFormControl;\n  selectedYear!: number;\n  monthFormControl!: UntypedFormControl;\n  selectedMonth!: number;\n\n  yearsArray: number[] = [];\n  monthsArray: number[] = [];\n\n  //BEGIN: autocomplete - users\n  users: any = [];\n  filteredUsers!: Observable<string[]>;\n  userFormControl!: UntypedFormControl;\n  userNames: any = [];\n  //END: autocomplete - users\n\n  //BEGIN: autocomplete - products\n  id_prd!: string;\n  products: any = [];\n  filteredProducts!: Observable<string[]>;\n  productsFormControl!: UntypedFormControl;\n  productNames: any = [];\n  //END: autocomplete - products\n  \n  forecasts: Forecast[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      users: User[],\n      products: Product[],\n      forecasts: Forecast[],\n    },\n    private _builder: FormBuilder,\n    private thisDialogRef: MatDialogRef<AddLoanDialogComponent>,\n  ) { \n    this.users = this.data.users;\n    this.getUserNames();\n    this.products = this.data.products;\n    this.getProductNames();\n    this.forecasts = this.data.forecasts;\n\n    let date = new Date();\n\n    this.anno = _builder.control(new Date().getFullYear().toString(), Validators.required);\n    this.userFormControl = _builder.control(this.userNames[0], Validators.required);\n    this.productsFormControl = _builder.control(this.productNames[0], Validators.required);\n    this.username = localStorage.getItem('sangue_username')!; //colui che ha effettuato la richiesta di prestito\n    this.d_ordine = _builder.control(new Date(), Validators.required);\n    this.n_ordine = _builder.control(0);\n    this.b_urgente = _builder.control(false);\n    this.b_extra = _builder.control(false);\n    this.b_validato = _builder.control(false);\n    this.d_validato = _builder.control(\"\");\n    this.n_ddt = _builder.control(0);\n    this.d_ddt = _builder.control(new Date());\n    this.note = _builder.control(\"\");\n    this.n_ddt = _builder.control(0);\n    this.d_ddt = _builder.control(\"\");\n    this.d_consegna_prevista = _builder.control(\"\");\n    this.note_consegna = _builder.control(\"\");\n    this.b_prestito = _builder.control(true);\n    this.id_ordine_prestito = _builder.control(\"\");\n    this.qta = _builder.control(0);\n\n    this.initMonthsArray(date.getMonth() + 1);//+1 because months are counted from 0\n    \n    this.initYearsArray(date.getFullYear(), date.getMonth());\n    \n    if(this.yearsArray.length == 2) {\n      this.yearFormControl = _builder.control(this.yearsArray[1], Validators.required);\n      this.monthFormControl = _builder.control(this.monthsArray[1], Validators.required);\n    }\n    else {\n      this.yearFormControl = _builder.control(this.yearsArray[0], Validators.required);\n      this.monthFormControl = _builder.control(this.monthsArray[1], Validators.required);\n    }\n  }\n\n  ngOnInit(): void {\n    //filter input for users\n    //this.getUserNames();\n    this.filteredUsers = this.userFormControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterUsers(value || ''))\n    );\n\n    this.filteredProducts = this.productsFormControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterProducts(value || '')),\n    );\n  }\n\n  onLoanDateChange() {\n    console.log(\"onLoadDateChange\");\n  }\n\n  initYearsArray(year: number, month: number) {\n    this.yearsArray = [];\n    this.yearsArray.push(year);\n    //this.yearsArray.push(year + 1);\n    if(month == 12) {\n      this.yearsArray.push(year + 1);\n    }\n  }\n\n  initMonthsArray(month: number) {\n    this.monthsArray = [];\n    this.monthsArray.push(month)\n    if(month == 12) {\n      this.monthsArray.push(1);\n    }\n    else{\n      this.monthsArray.push(month + 1);\n    }\n    console.log(this.monthsArray);\n  }\n\n  onYearValueChanged(event: Event) {\n    console.log(event);\n    console.log(this.yearFormControl.value);\n    //se viene scelto l'anno successivo, impostare il mese successivo (gennaio anno successivo)\n    if(this.yearsArray.length == 2 && this.yearsArray[1].toString() == event.toString()) {\n      this.monthFormControl.setValue(this.monthsArray[1]);\n    }\n    //se viene scelto l'anno precedente, impostare il primo mese (dicembre anno precedente)\n    if(this.yearsArray.length == 2 && this.yearsArray[0].toString() == event.toString()) {\n      this.monthFormControl.setValue(this.monthsArray[0]);\n    }\n  }\n\n  onMonthValueChanged(event: Event) {\n    console.log(event);\n    console.log(this.monthFormControl.value);\n    if(this.yearsArray.length == 2) {\n      if(parseInt(event.toString()) == 12 && this.monthsArray[0] == 12) {\n        this.yearFormControl.setValue(this.yearsArray[0])\n      }\n      if(parseInt(event.toString()) == 1 && this.monthsArray[1] == 1) {\n        this.yearFormControl.setValue(this.yearsArray[1]);\n      }\n    }\n  }\n\n  assignNewLoanValues() {\n    //console.log(\"this.username: \" + this.username);\n    \n    this.newLoanReq = {\n      id: \"\", //to be assigned\n      anno: new Date(this.d_ordine.value).getFullYear(),\n      mese: new Date(this.d_ordine.value).getMonth(),\n      b_extra: false,\n      b_urgente: false,\n      b_validato: false,\n      d_ordine: this.getFormattedDate(this.d_ordine.value.toLocaleString('it-IT').split(\",\", 2)[0]),\n      d_validato: \"\",//this.getFormattedDate(this.d_validato.value.toLocaleString('it-IT').split(\",\", 2)[0]),\n      n_ordine: this.n_ordine.value, //to be assigned?\n      note: this.note.value,\n      status: \"prestito\",\n      username: localStorage.getItem(\"sangue_username\")!, //the person who requested the loan, i.e. the logged user\n      d_consegna_prevista: \"\",\n      n_ddt: \"\",\n      d_ddt: \"\",\n      note_consegna: \"\",\n      b_prestito: true,\n      id_ordine_prestito: \"\", //to be assigned\n      username_prestito_da: localStorage.getItem(\"sangue_username\")!,//loan performer\n      username_prestito_a: this.username,//loan recipient\n    }\n\n    this.newLoanRes = {\n      id: \"\", //to be assigned\n      anno: new Date(this.d_ordine.value).getFullYear(),\n      mese: new Date(this.d_ordine.value).getMonth(),\n      b_extra: false,\n      b_urgente: false,\n      b_validato: false,\n      d_ordine: this.getFormattedDate(this.d_ordine.value.toLocaleString('it-IT').split(\",\", 2)[0]),\n      d_validato: \"\",//this.getFormattedDate(this.d_validato.value.toLocaleString('it-IT').split(\",\", 2)[0]),\n      n_ordine: this.n_ordine.value, //to be assigned?\n      note: this.note.value,\n      status: \"prestito\",\n      username: this.username, //loan recipient\n      d_consegna_prevista: \"\",\n      n_ddt: \"\",\n      d_ddt: \"\",\n      note_consegna: \"\",\n      b_prestito: true,\n      id_ordine_prestito: \"\", //to be assigned\n      username_prestito_da: localStorage.getItem(\"sangue_username\")!,//loan performer\n      username_prestito_a: this.username,//loan recipient\n    }\n\n    this.newLoanRowReq = {\n      id: \"\",\n      id_ordine: \"\",\n      n_riga: 1,\n      id_prd: this.getProductIdByDes(this.productsFormControl.value),\n      username: localStorage.getItem(\"sangue_username\")!,\n      qta: this.qta.value * (-1),\n      motivazione: \"\",\n      qta_validata: 0,\n      qta_ricevuta: 0,\n      note: \"\"\n    }\n\n    this.newLoanRowRes = {\n      id: \"\",\n      id_ordine: \"\",\n      n_riga: 1,\n      id_prd: this.getProductIdByDes(this.productsFormControl.value),\n      username: this.username,\n      qta: this.qta.value,\n      motivazione: \"\",\n      qta_validata: 0,\n      qta_ricevuta: 0,\n      note: \"\"\n    }\n  }\n\n  onSubmit(event: Event) {\n    this.assignNewLoanValues();\n    this.logData();\n\n    this.thisDialogRef.close({\n      newLoanReq: this.newLoanReq,\n      newLoanRes: this.newLoanRes,\n      newLoanRowReq: this.newLoanRowReq,\n      newLoanRowRes: this.newLoanRowRes,\n      isSubmitted: true\n    });\n  }\n\n  //BEGIN functions for autocomplete - USERS\n  private _filterUsers(value: string): string[] {\n    const filterValue = value.toLowerCase();    \n    return this.userNames.filter((option: string) => option.toLowerCase().includes(filterValue));\n  }\n\n  getUserId(event: any){\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.users[i].client == event.source.value){\n        console.log(this.users[i].id);\n        return this.users[i].id;\n      }\n    }\n  }\n\n  getUserNames(): void {  \n    this.userNames = [];  \n    for(let i = 0; i < this.users.length; ++i){\n      this.userNames.push(this.users[i].client);\n    }\n  }\n\n  onUserSelected(event: any) {\n    if(event.source._selected){\n      this.username = this.getUserId(event);//loan recipient\n    }\n  }\n  //END functions for autocomplete - USERS\n\n//===============================================================================================================\n  //BEGIN functions for autocomplete - PRODUCTS\n  private _filterProducts(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.productNames.filter((option: string) => option.toLowerCase().includes(filterValue));\n  }\n\n  getProductId(event: any){\n    for(let i = 0; i < this.products.length; ++i){\n      if(this.products[i].des == event.source.value){\n        return this.products[i].id;\n      }\n    }\n  }\n\n  getProductIdByDes(des: string){\n    for(let i = 0; i < this.products.length; ++i){\n      if(this.products[i].des == des){\n        return this.products[i].id;\n      }\n    }\n  }\n\n  getProductNames(): void {  \n    this.productNames = [];  \n    for(let i = 0; i < this.products.length; ++i){\n      this.productNames.push(this.products[i].des);\n    }\n  }\n\n  onProductSelected(event: any) {\n    if(event.source.selected){    \n      this.productId = this.getProductId(event);\n    }\n  }\n\n  //END functions for autocomplete - PRODUCTS\n\n\n\n\n  logData() {\n    console.log(this.newLoanReq);\n    console.log(this.newLoanRowReq);\n    console.log(this.newLoanRes);\n    console.log(this.newLoanRowRes);\n\n    console.log(\"product: \" + this.productsFormControl.value);\n    console.log(\"quantity: \" + this.qta.value);\n  }\n\n  getFormattedDate(date: Date): string {\n    let splitDate = date.toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 3);\n    \n    let day = splitDate[0];\n    let month = splitDate[1];\n    let year = splitDate[2];\n\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    return year + \"-\" + month + \"-\" + day;  \n  }\n}\n","<div>\n    <h1 align=\"center\">{{ 'New loan request'| translate }}</h1>\n    <h2 mat-dialog-title>{{ 'Details' | translate }}</h2>\n\n    <!--autocomplete dropdown for USERS-->\n    <mat-form-field\n    style=\"width: 100%;\">\n        <input \n        type=\"text\"\n        style=\"width: 100%;\"\n        placeholder=\"{{ 'Recipient' | translate }}\"\n        matInput\n        [formControl]=\"userFormControl\"\n        [matAutocomplete]=\"autoUsers\">\n        <mat-autocomplete #autoUsers=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredUsers | async\" [value]=\"option\" (onSelectionChange)='onUserSelected($event)' onchange=\"\">\n            {{ option }}\n        </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n   \n    <mat-form-field\n    style=\"width: 100%;\">\n        <input \n        matInput \n        placeholder=\"{{'Request date' | translate }}\"\n        [matDatepicker]=\"pickerOrderDate\" \n        [value]=\"d_ordine.value\"\n        [formControl]=\"d_ordine\"\n        (dateChange)=\"onLoanDateChange()\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerOrderDate\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerOrderDate></mat-datepicker>\n    </mat-form-field>\n\n    <!--Reference year-->\n    <mat-form-field\n    style=\"width: 100%;\">\n        <mat-label>{{'Reference year' | translate}}</mat-label>\n        <mat-select\n        [value]=\"yearsArray[0]\"\n        [formControl]=\"yearFormControl\"\n        (valueChange)=\"onYearValueChanged($event)\">\n            <mat-option \n            *ngFor=\"let year of yearsArray\" \n            [value]=\"year\">{{year}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <!--Reference month-->\n    <mat-form-field\n    style=\"width: 100%;\">\n        <mat-label>{{'Reference month' | translate}}</mat-label>\n        <mat-select\n        [value]=\"monthsArray[1]\" \n        [formControl]=\"monthFormControl\"\n        (valueChange)=\"onMonthValueChanged($event)\">\n            <mat-option \n            *ngFor=\"let month of monthsArray\" \n            [value]=\"month\">{{month}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field \n    style=\"width: 100%;\">\n\t\t<mat-label>{{ 'Product' | translate }}</mat-label>\n\t\t<input type=\"text\"\n\t\tplaceholder=\"{{'Choose a product' | translate}}\"\n\t\tmatInput\n\t\t[formControl]=\"productsFormControl\"\n\t\t[matAutocomplete]=\"autoProducts\">\n\t\t<mat-autocomplete \n\t\tautoActiveFirstOption\n\t\t#autoProducts=\"matAutocomplete\">\n\t\t\t<mat-option \n\t\t\t*ngFor=\"let optionP of filteredProducts | async\" \n\t\t\t[value]=\"optionP\" \n\t\t\t(onSelectionChange)='onProductSelected($event)'>\n\t\t\t\t{{optionP}}\n\t\t\t</mat-option>\n\t\t</mat-autocomplete>\n\t</mat-form-field>\n\n    <mat-form-field\n    style=\"width: 100%;\">\n        <input \n        matInput\n        type=\"number\"\n        placeholder=\"{{ 'Quantity' | translate }}\"\n        [formControl]=\"qta\">\n    </mat-form-field>\n\n    <!--mat-form-field>\n        <input\n        placeholder=\"{{'Order number' | translate }}\"\n        type=\"number\"\n        [formControl]=\"n_ordine\"\n        (keyup)=\"enableAddRowAndSubmit(userFormControl.value)\"\n        matInput>\n    </mat-form-field-->\n\n    <!--p>\n        <mat-checkbox \n            labelPosition=\"before\"\n            (click)=\"toggleUrgente()\">\n            {{ 'Urgent' | translate }}\n        </mat-checkbox>\n    </p-->\n\n    <!--p>\n        <mat-checkbox \n            labelPosition=\"before\"\n            (click)=\"toggleExtra()\">\n            {{ 'Extra' | translate }}\n        </mat-checkbox>\n    </p-->\n\n    <!--sangueaslno only-->\n    <!--p>\n        <mat-checkbox *ngIf=\"loginService.getUserCode() == '220'\"\n            labelPosition=\"before\"\n            (click)=\"toggleValidato()\">\n            {{ 'Validated' | translate }}\n        </mat-checkbox>\n    </p-->\n\n    <!--sangueaslno only-->\n    <!--mat-form-field *ngIf=\"loginService.getUserCode() == '220' && b_validato.value\">\n        <input \n        matInput \n        placeholder=\"{{ 'Validation date' | translate }}\"\n        [matDatepicker]=\"picker\" \n        [value]=\"d_validato.value\"\n        [formControl]=\"d_validato\"\n        (dateChange)=\"onValidationDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field-->\n\n    <!--mat-form-field>\n        <input\n        placeholder=\"{{'DDT number' | translate }}\"\n        type=\"number\"\n        [formControl]=\"n_ddt\"\n        matInput>\n    </mat-form-field-->\n\n    <!--mat-form-field>\n        <input \n        matInput \n        placeholder=\"{{'DDT date' | translate }}\"\n        [matDatepicker]=\"pickerDDTDate\" \n        [value]=\"d_ddt.value\"\n        [min]=\"minDate\"\n        [max]=\"maxDate\"\n        [formControl]=\"d_ddt\"\n        (dateChange)=\"onOrderDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerDDTDate\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerDDTDate></mat-datepicker>\n    </mat-form-field-->\n    \n    <mat-form-field\n    style=\"width: 100%;\">\n        <input \n        matInput\n        type=\"text\"\n        placeholder=\"{{ 'Notes' | translate }}\"\n        [formControl]=\"note\">\n    </mat-form-field>\n</div>\n\n<!--ORDERROWS-->\n<!--mat-card *ngFor=\"let orderRow of newOrderRows; let i = index\" style=\"margin-bottom: 20px;\">\n    <h5><b>{{ 'Product' | translate }}:</b> {{ productIdToDes(orderRow.id_prd) }}</h5>\n    <h5><b>{{ 'Row number' | translate }}:</b> {{ orderRow.n_riga }}</h5>\n    <h5><b>{{ 'Quantity' | translate }}:</b> {{ orderRow.qta }}</h5>\n    <h5\n    *ngIf=\"orderRow.motivazione != null\">\n        <b>{{ 'Reason' | translate }}:</b> {{ orderRow.motivazione }}\n    </h5>\n    <h5><b>{{ 'Approved quantity' | translate }}:</b> {{ orderRow.qta_validata }}</h5>\n    <h5><b>{{ 'Notes' | translate }}:</b> {{ orderRow.note }}</h5>\n    <div mat-dialog-actions align=\"center\">\n        <button \n        mat-mini-fab\n        matTooltip=\"{{ 'Edit' | translate }}\" \n        color=\"primary\" \n        style=\"margin: 5px;\"\n        (click)=\"openEditOrderRowDialog(orderRow.id, false)\">\n            <i class=\"material-icons\">edit</i>\n        </button>\n\n        <button \n        mat-mini-fab\n        matTooltip=\"{{ 'Delete' | translate }}\"\n        style=\"margin: 5px;\" \n        color=\"warn\" \n        (click)=\"openAreYouSureOrderRowDialog(i)\">\n            <i class=\"material-icons\">delete</i>\n        </button>\n    </div>\n</mat-card-->\n\n<div mat-dialog-actions align=\"center\">\n    <!--button \n    mat-mini-fab \n    color=\"basic\" \n    matTooltip=\"{{ 'Add row' | translate }}\">\n        <i class=\"material-icons\">add</i>\n    </button-->\n    \n    <button \n    [disabled]=\"qta.value <= 0\"\n    mat-mini-fab\n    matTooltip=\"{{ 'Submit' | translate }}\"\n    color=\"primary\" \n    (click)=\"onSubmit($event)\">\n        <i class=\"material-icons\">check</i>\n    </button>\n    \n    <button \n    mat-mini-fab\n    color=\"accent\" \n    matTooltip=\"{{ 'Cancel' | translate }}\"\n    mat-dialog-close=\"true\">\n        <i class=\"material-icons\">close</i>\n    </button>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, UntypedFormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { map, Observable, startWith } from 'rxjs';\nimport { environment, Forecast, Order, OrderRow, Product, translations, User } from 'src/environments/environment';\nimport { AreYouSureOrderRowComponent } from '../are-you-sure-order-row/are-you-sure-order-row.component';\nimport { EditOrderRowComponent } from '../edit-order-row/edit-order-row.component';\nimport { LoginService } from '../login.service';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-add-order-dialog',\n  templateUrl: './add-order-dialog.component.html',\n  styleUrls: ['./add-order-dialog.component.css'],\n})\nexport class AddOrderDialogComponent implements OnInit {\n  dialog: any;\n  dialogRef: any;\n  loginService: LoginService;\n  newOrder!: Order;\n  newOrderRows: OrderRow[] = [];\n  auxId = 0;\n  \n  gg_min!: string;\n  minDate!: Date;\n  gg_max!: string;\n  maxDate!: Date;\n\n  isInputAmongUsers: boolean = false;\n  isAddRowEnabled: boolean = false;\n  isSubmitEnabled: boolean = false;\n\n  forecasts: Forecast[] = [];\n  currentUserForecasts: Forecast[] = [];\n  orderRows: OrderRow[] = [];\n\n  //newOrder formControls for fields\n  anno!: UntypedFormControl;\n  username!: string;\n  d_ordine!: UntypedFormControl;\n  n_ordine!: UntypedFormControl;\n  b_urgente!: UntypedFormControl;\n  b_extra!: UntypedFormControl;\n  b_validato!: UntypedFormControl;\n  d_validato!: UntypedFormControl;\n  n_ddt!: UntypedFormControl;\n  d_ddt!: UntypedFormControl;\n  note!: UntypedFormControl;\n  isExtra!: boolean;\n  yearFormControl!: UntypedFormControl;\n  selectedYear!: number;\n  monthFormControl!: UntypedFormControl;\n  selectedMonth!: number;\n\n  yearsArray: number[] = [];\n  monthsArray: number[] = [];\n\n\n  //BEGIN: autocomplete - users\n  users: any = [];\n  filteredUsers!: Observable<string[]>;\n  userFormControl!: UntypedFormControl;\n  userNames: any = [];\n  //END: autocomplete - users\n\n  //BEGIN: autocomplete - products\n  id_prd!: string;\n  products: any = [];\n  filteredProducts!: Observable<string[]>;\n  productFormControl!: UntypedFormControl;\n  productNames: any = [];\n  //END: autocomplete - products\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      users: User[],\n      products: Product[],\n      forecasts: Forecast[],\n      gg_min: string,\n      gg_max: string,\n      isExtra: boolean,\n      year: string,\n      month: string,\n    },\n    private thisDialogRef: MatDialogRef<AddOrderDialogComponent>,\n    dialog: MatDialog,\n    private ordersService: OrdersService,\n    loginService: LoginService,\n    private _builder: FormBuilder,\n  ) { \n    //this.dialogRef = thisDialogRef;\n    this.dialog = dialog;\n    this.loginService = loginService;\n    this.isExtra = data.isExtra == undefined ? false : data.isExtra;\n    let date = new Date();\n    //creation of formControls from _builder\n    this.d_ordine = _builder.control(date, Validators.required);\n    this.n_ordine = _builder.control(0);\n    this.b_urgente = _builder.control(false);\n    this.b_extra = _builder.control(this.isExtra);\n    this.isExtra = this.data.isExtra;\n    this.b_validato = _builder.control(false);\n    this.d_validato = _builder.control(\"\");\n    this.n_ddt = _builder.control(0);\n    this.d_ddt = _builder.control(\"\");\n    this.note = _builder.control(\"\");\n\n    //assign username if not sangueaslno\n    if(loginService.getUserCode() != \"220\") {\n      this.username = loginService.getUsername()!;\n    }\n\n    this.initMonthsArray(date.getMonth() + 1);//+1 because months are counted from 0\n    this.initYearsArray(date.getFullYear(), date.getMonth());\n    \n    if(this.yearsArray.length == 2) {\n      this.yearFormControl = _builder.control(this.yearsArray[1], Validators.required);\n      this.monthFormControl = _builder.control(this.monthsArray[1], Validators.required);\n    }\n    else {\n      this.yearFormControl = _builder.control(this.yearsArray[0], Validators.required);\n      this.monthFormControl = _builder.control(this.monthsArray[1], Validators.required);\n    }\n\n    //this.yearFormControl.setValue(this.yearsArray[0]); \n    this.selectedYear = this.yearsArray[0];\n    this.selectedMonth = this.monthsArray[1];\n\n    if(loginService.getUserCode() == \"210\"){\n      this.userFormControl = _builder.control(loginService.getUsername(), Validators.required);\n    }\n    //else, if sangueaslno, pick list of users\n    else if(loginService.getUserCode() == \"220\"){\n      this.userFormControl = _builder.control('', Validators.required);\n    }\n\n    this.enableSubmit(this.userFormControl.value);\n\n    var auxDate = new Date();\n    this.minDate = new Date(auxDate.getFullYear(), auxDate.getMonth(), parseInt(this.data.gg_min));\n    this.maxDate = new Date(auxDate.getFullYear(), auxDate.getMonth(), parseInt(this.data.gg_max));\n    this.forecasts = data.forecasts;\n  }\n\n  ngOnInit(): void {\n    if(this.loginService.getUserCode() == \"220\") {\n      this.users = this.data.users;\n    }\n    if(this.loginService.getUserCode() == '210') {\n      this.filterForecastsByUsername(this.loginService.getUsername()!);\n    }\n    this.products = this.data.products;\n    //filter input for users\n    this.getUserNames();\n    this.filteredUsers = this.userFormControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterUsers(value || ''))\n    );\n  }\n\n  initYearsArray(year: number, month: number) {\n    this.yearsArray = [];\n    this.yearsArray.push(year);\n    //this.yearsArray.push(year + 1);\n    if(month == 12) {\n      this.yearsArray.push(year + 1);\n    }\n    if(localStorage.getItem(\"id_profile\") && localStorage.getItem(\"id_profile\") == '220') {\n      this.yearsArray.push(year - 1);\n    }\n  }\n\n  initMonthsArray(month: number) {\n    this.monthsArray = [];\n    if(localStorage.getItem(\"id_profile\") && localStorage.getItem(\"id_profile\") == '220') {\n      for(var i = 1; i <= 12; ++i) {\n        this.monthsArray.push(i);\n      }\n    }\n    else {\n      this.monthsArray.push(month)\n      if(month == 12) {\n        this.monthsArray.push(1);\n      }\n      else{\n        this.monthsArray.push(month + 1);\n      }\n    }\n    console.log(this.monthsArray);\n  }\n\n  onYearValueChanged(event: Event) {\n    console.log(event);\n    console.log(this.yearFormControl.value);\n    //se viene scelto l'anno successivo, impostare il mese successivo (gennaio anno successivo)\n    if(this.yearsArray.length == 2 && this.yearsArray[1].toString() == event.toString()) {\n      this.monthFormControl.setValue(this.monthsArray[1]);\n    }\n    //se viene scelto l'anno precedente, impostare il primo mese (dicembre anno precedente)\n    if(this.yearsArray.length == 2 && this.yearsArray[0].toString() == event.toString()) {\n      this.monthFormControl.setValue(this.monthsArray[0]);\n    }\n  }\n\n  onMonthValueChanged(event: Event) {\n    console.log(event);\n    console.log(this.monthFormControl.value);\n    if(this.yearsArray.length == 2) {\n      if(parseInt(event.toString()) == 12 && this.monthsArray[0] == 12) {\n        this.yearFormControl.setValue(this.yearsArray[0])\n      }\n      if(parseInt(event.toString()) == 1 && this.monthsArray[1] == 1) {\n        this.yearFormControl.setValue(this.yearsArray[1]);\n      }\n    }\n  }\n\n  pushOrderRow(newOrderRow: OrderRow){\n    this.newOrderRows.push(newOrderRow);\n  }\n\n  rmOrderRowByIndex(index: number) {\n    this.newOrderRows.splice(index, 1);\n  }\n\n  assignNewOrderValues() {\n    this.newOrder = {\n      id: \"\",\n      anno: this.yearFormControl.value,\n      mese: this.monthFormControl.value,\n      b_extra: this.b_extra.value,\n      b_urgente:this.b_urgente.value,\n      b_validato: this.b_validato.value,\n      d_ordine: this.formatDate(this.d_ordine.value.toLocaleString('it-IT').split(\",\", 2)[0]),\n      d_validato: this.formatDate(this.d_validato.value.toLocaleString('it-IT').split(\",\", 2)[0]),\n      n_ordine: this.n_ordine.value,\n      note: this.note.value,\n      status: \"\",\n      username: this.username,\n      d_consegna_prevista: \"0000-00-00\",\n      n_ddt: this.n_ddt.value,\n      d_ddt: this.formatDate(this.d_ddt.value.toLocaleString('it-IT').split(\",\", 2)[0]),\n      note_consegna: \"\",\n      b_prestito: false,\n      id_ordine_prestito: \"\",\n      username_prestito_da: \"\",\n      username_prestito_a: \"\"\n    }\n    //console.log(this.newOrder);\n  }\n\n  formatDate(date: string): string {\n    if(date == \"\")\n      return \"\";\n\n    let formattedDate!: string;\n    let splittedDate = date.split(\"/\", 3);\n    \n    let day = splittedDate[0];\n    let month = splittedDate[1];\n    let year = splittedDate[2];\n\n    //prepare date to be saved on db\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    formattedDate = year + \"-\" + month + \"-\" + day;\n    return formattedDate;\n  }\n\n  deleteOrderRow(id: string) {\n    for(let i = 0; i < this.newOrderRows.length; ++i) {\n      if(this.newOrderRows[i].id == id) {\n        this.newOrderRows.splice(i, 1);\n      }\n    }\n  }\n\n//===================================================================================================================\n\n  //checkbox toggles\n  toggleUrgente() {\n    this.b_urgente.value ? this.b_urgente = this._builder.control(false) : this.b_urgente = this._builder.control(true);\n    console.log(\"is urgente: \" + this.b_urgente.value);\n  }\n\n  toggleExtra(): void {\n    this.b_extra.value ? this.b_extra = this._builder.control(false) : this.b_extra = this._builder.control(true);\n    console.log(\"is extra: \" + this.b_extra.value);\n  }\n\n  toggleValidato() {\n    if(this.b_validato.value) {\n      this.b_validato = this._builder.control(false);\n      this.d_validato = this._builder.control(\"\");\n    }\n    else {\n      this.b_validato = this._builder.control(true);\n      this.d_validato = this._builder.control(new Date());\n    }\n    console.log(\"is validato: \" + this.b_validato.value);\n  }\n\n//===================================================================================================================\n\n  //if needed...\n  onOrderDateChange(event: any) {\n    console.log(this.d_ordine.value);\n  }\n\n  //if needed...\n  onValidationDateChange(event: any) {\n    console.log(this.d_validato.value);\n  }\n\n  //if needed...\n  onDDTDateChange(event: any) {\n    console.log(this.d_ddt.value);\n  }\n\n  onSubmit(event: any) {\n    //TODO: check fields\n    //console.log(\"newOrder:\");\n    this.assignNewOrderValues();\n    //console.log(this.newOrder);\n    let isSubmitted = true;\n\n    for(var i = 0; i < this.newOrderRows.length; ++i) {\n      this.newOrderRows[i].username = this.newOrder.username;\n    }\n\n    if(this.newOrder.d_validato == \"\") {\n      this.newOrder.d_validato = \"0000-00-00\";\n    }\n\n    if(this.b_urgente.value){\n      alert(environment.currentLanguage == 'it' ? translations.it.UrgentOrderAlert : translations.en.UrgentOrderAlert);\n    }  \n\n    this.thisDialogRef.close({\n      newOrder: this.newOrder,\n      newOrderRows: this.newOrderRows,\n      isSubmitted: isSubmitted\n    });\n\n    return;\n  }\n\n//===================================================================================================================\n\n  //BEGIN functions for autocomplete - USERS\n  private _filterUsers(value: string): string[] {\n    const filterValue = value.toLowerCase();    \n    return this.userNames.filter((option: string) => option.toLowerCase().includes(filterValue));\n  }\n\n  getUserId(event: any){\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.users[i].client == event.source.value){\n        return this.users[i].id;\n      }\n    }\n  }\n\n  getUserNames(): void {\n    for(let i = 0; i < this.data.users.length; ++i){\n      this.userNames.push(this.data.users[i].client);\n    }\n  }\n\n  onUserSelected(event: any) {\n    this.isInputAmongUsers = false;\n    if(event.source._selected){\n      this.username = this.getUserId(event);\n      this.enableSubmit(event.source.value);\n      this.filterForecastsByUsername(this.username);\n    }\n  }\n  //END functions for autocomplete - USERS\n\n  productIdToDes(id: string): string {\n    for(var i = 0; i < this.products.length; ++i){\n      if(id == this.products[i].id) {\n        return this.products[i].des;\n      }\n    }\n    return \"\";\n  }\n\n  usernameToClient(username: string): string {\n    for(var i = 0; i < this.users.length; ++i){\n      if(username == this.users[i].username) {\n        return this.users[i].client;\n      }\n    }\n    return \"\";\n  }\n  \n  getOrderRowById(id: string): OrderRow | undefined {\n    for(let i = 0; i < this.newOrderRows.length; ++i){\n      if(id == this.newOrderRows[i].id){\n        console.log(this.newOrderRows[i]);\n        return this.newOrderRows[i];\n      }\n    }\n    return undefined;\n  }\n\n  deleteOrderRowByIndex(index: number) {\n    this.newOrderRows.splice(index, 1);\n  }\n\n  //works both for adding and for editing an orderRow\n  //here id is not the real id but the index in the newOrderRows array!\n  openEditOrderRowDialog(id: string, isAdding: boolean) {\n    const dialogConfig = new MatDialogConfig();\n    //dialogConfig.autoFocus = true;\n    console.log(\"OpenEditOrderRowDialog: ID = \" + id);\n    \n    //if id is not specified, create a new orderRow\n    if(id == \"\") {\n      let newOrderRow = {\n        id: \"\",\n        id_ordine: \"\",\n        username: \"\",\n        n_riga: 0,\n        id_prd: \"\",\n        qta: 0,\n        motivazione: \"\",\n        qta_validata: 0,\n        qta_ricevuta: -1,\n        note: \"\"\n      }\n\n      console.log(\"OpenEditOrderRowDialog: ID = \" + id);\n\n      dialogConfig.data = {\n        year: this.data.year,\n        orderRow: newOrderRow,\n        products: this.products,\n        forecasts: this.currentUserForecasts,\n        orderRows: this.newOrderRows,\n        isUrgent: this.b_urgente.value\n      }\n      console.log(\"OpenEditOrderRowDialog: ID = \" + id);\n    }\n    //id is specified, so edit existing orderRow\n    else {\n      console.log(\"OpenEditOrderRowDialog: ID = \" + id);\n      let editedOrderRow = this.getOrderRowById(id);\n      console.log(editedOrderRow);\n      dialogConfig.data = {\n        orderRow: editedOrderRow,\n        products: this.products,\n        forecasts: this.currentUserForecasts,\n        isUrgent: this.b_urgente.value\n      }\n    }\n          \n    console.log(\"OpenEditOrderRowDialog: ID = \" + id);\n    this.dialogRef = this.dialog.open(\n      EditOrderRowComponent, \n      dialogConfig\n    );\n    \n    console.log(\"OpenEditOrderRowDialog: ID = \" + id);\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: { orderRow: OrderRow, isSubmitted: boolean }) => {\n      if(result !== undefined && result.isSubmitted){\n        console.log(result);\n        let newOrderRow = result.orderRow;\n        //se l'id della orderRow è vuoto, allora la sto aggiungendo, quindi la devo pushare nell'array\n        if(newOrderRow.id == \"\") {\n          newOrderRow.id = this.newOrderRows.length.toString();\n          console.log(newOrderRow);\n          this.newOrderRows.push(newOrderRow);\n        }\n      }\n    });\n  }\n\n  openAreYouSureOrderRowDialog(id: number) {\n    const dialogConfig = new MatDialogConfig();\n    //dialogConfig.autoFocus = true;\n    dialogConfig.data = { id: id }\n        \n    this.dialogRef = this.dialog.open(\n      AreYouSureOrderRowComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: { isSubmitted: boolean }) => {\n      if(result !== undefined && result.isSubmitted){\n        this.deleteOrderRowByIndex(id);\n      }\n    });\n  }\n\n  isAmongUsers(inputValue: string): boolean {\n    for(var i = 0; i < this.userNames.length; ++i) {\n      if(inputValue == this.userNames[i]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  enableSubmit(selectedUser: string) {\n    if(this.loginService.getUserCode() == '220') {\n      this.isAddRowEnabled = false;\n      this.isSubmitEnabled = false;\n      \n      if(this.isAmongUsers(selectedUser)) {\n        this.isAddRowEnabled = true;\n        this.isSubmitEnabled = true;\n      }\n    }\n    \n    if(this.loginService.getUserCode() == '210') {\n      this.isAddRowEnabled = true;\n      this.isSubmitEnabled = true;\n    } \n  }\n\n  filterForecastsByUsername(username: string) {\n    this.currentUserForecasts = [];\n    for(var i = 0; i < this.forecasts.length; ++i) {\n      if(this.forecasts[i].username == username) {\n        this.currentUserForecasts.push(this.forecasts[i]);\n      }\n    }\n    //console.log(this.currentUserForecasts);\n  }\n}\n","<div>\n    <h1 *ngIf=\"!isExtra\" align=\"center\">{{ 'New order'| translate }}</h1>\n    <h1 *ngIf=\"isExtra\" align=\"center\">{{ 'New order'| translate }} [EXTRA]</h1>\n    <h2 mat-dialog-title>{{ 'Details' | translate }}</h2>\n\n    <!--autocomplete dropdown for USERS-->\n    <mat-form-field \n    *ngIf=\"loginService.getUserCode()=='220'\">\n        <input \n        type=\"text\"\n        placeholder=\"{{ 'User' | translate }}\"\n        matInput\n        [formControl]=\"userFormControl\"\n        [matAutocomplete]=\"auto\"\n        (keyup)=\"enableSubmit(userFormControl.value)\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredUsers | async\" [value]=\"option\" (onSelectionChange)='onUserSelected($event)' onchange=\"\">\n            {{ option }}\n        </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n   \n    <mat-form-field\n    *ngIf=\"loginService.getUserCode() == '210'\">\n        <input \n        matInput \n        placeholder=\"{{'Order date' | translate }}\"\n        [matDatepicker]=\"pickerOrderDate\" \n        [value]=\"d_ordine.value\"\n        [min]=\"minDate\"\n        [max]=\"maxDate\"\n        [formControl]=\"d_ordine\"\n        (dateChange)=\"onOrderDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerOrderDate\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerOrderDate></mat-datepicker>\n    </mat-form-field>\n\n    <!--Reference year-->\n    <mat-form-field>\n        <mat-label>{{'Reference year' | translate}}</mat-label>\n        <mat-select\n        [value]=\"yearsArray[0]\"\n        [formControl]=\"yearFormControl\"\n        (valueChange)=\"onYearValueChanged($event)\">\n            <mat-option \n            *ngFor=\"let year of yearsArray\" \n            [value]=\"year\">{{year}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <!--Reference month-->\n    <mat-form-field>\n        <mat-label>{{'Reference month' | translate}}</mat-label>\n        <mat-select\n        [value]=\"monthsArray[1]\" \n        [formControl]=\"monthFormControl\"\n        (valueChange)=\"onMonthValueChanged($event)\">\n            <mat-option \n            *ngFor=\"let month of monthsArray\" \n            [value]=\"month\">{{month}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    \n    <mat-form-field\n    *ngIf=\"loginService.getUserCode() == '220'\">\n        <input \n        matInput \n        placeholder=\"{{'Order date' | translate }}\"\n        [matDatepicker]=\"pickerOrderDate\" \n        [value]=\"d_ordine.value\"\n        [formControl]=\"d_ordine\"\n        (dateChange)=\"onOrderDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerOrderDate\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerOrderDate></mat-datepicker>\n    </mat-form-field>\n\n    <!--mat-form-field>\n        <input\n        placeholder=\"{{'Order number' | translate }}\"\n        type=\"number\"\n        [formControl]=\"n_ordine\"\n        (keyup)=\"enableAddRowAndSubmit(userFormControl.value)\"\n        matInput>\n    </mat-form-field-->\n\n    <p>\n        <mat-checkbox \n            labelPosition=\"before\"\n            (click)=\"toggleUrgente()\">\n            {{ 'Urgent' | translate }}\n        </mat-checkbox>\n    </p>\n\n    <p\n    *ngIf=\"!isExtra\">\n        <mat-checkbox \n            labelPosition=\"before\"\n            (click)=\"toggleExtra()\">\n            {{ 'Extra' | translate }}\n        </mat-checkbox>\n    </p>\n\n    <!--sangueaslno only-->\n    <p>\n        <mat-checkbox *ngIf=\"loginService.getUserCode() == '220'\"\n            labelPosition=\"before\"\n            (click)=\"toggleValidato()\">\n            {{ 'Validated' | translate }}\n        </mat-checkbox>\n    </p>\n\n    <!--sangueaslno only-->\n    <mat-form-field *ngIf=\"loginService.getUserCode() == '220' && b_validato.value\">\n        <input \n        matInput \n        placeholder=\"{{ 'Validation date' | translate }}\"\n        [matDatepicker]=\"picker\" \n        [value]=\"d_validato.value\"\n        [formControl]=\"d_validato\"\n        (dateChange)=\"onValidationDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <!--mat-form-field>\n        <input\n        placeholder=\"{{'DDT number' | translate }}\"\n        type=\"number\"\n        [formControl]=\"n_ddt\"\n        matInput>\n    </mat-form-field-->\n\n    <!--mat-form-field>\n        <input \n        matInput \n        placeholder=\"{{'DDT date' | translate }}\"\n        [matDatepicker]=\"pickerDDTDate\" \n        [value]=\"d_ddt.value\"\n        [min]=\"minDate\"\n        [max]=\"maxDate\"\n        [formControl]=\"d_ddt\"\n        (dateChange)=\"onOrderDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerDDTDate\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerDDTDate></mat-datepicker>\n    </mat-form-field-->\n    \n    <mat-form-field>\n        <input \n        matInput\n        type=\"text\"\n        placeholder=\"{{ 'Notes' | translate }}\"\n        [formControl]=\"note\">\n    </mat-form-field>\n</div>\n\n<p \n*ngIf=\"(b_urgente.value == true && note.value == '')\"\nstyle=\"color: red;\">\n    {{ 'An urgent order requires valid annotations' | translate }}.\n</p>\n\n<!--ORDERROWS-->\n<mat-card *ngFor=\"let orderRow of newOrderRows; let i = index\" style=\"margin-bottom: 20px;\">\n    <!--mat-card-title>ID: {{ i }}</mat-card-title-->\n    <h5><b>{{ 'Product' | translate }}:</b> {{ productIdToDes(orderRow.id_prd) }}</h5>\n    <h5><b>{{ 'Row number' | translate }}:</b> {{ orderRow.n_riga }}</h5>\n    <h5><b>{{ 'Quantity' | translate }}:</b> {{ orderRow.qta }}</h5>\n    <h5\n    *ngIf=\"orderRow.motivazione != null\">\n        <b>{{ 'Reason' | translate }}:</b> {{ orderRow.motivazione }}\n    </h5>\n    <h5><b>{{ 'Approved quantity' | translate }}:</b> {{ orderRow.qta_validata }}</h5>\n    <h5><b>{{ 'Notes' | translate }}:</b> {{ orderRow.note }}</h5>\n    <div mat-dialog-actions align=\"center\">\n        <button \n        mat-mini-fab\n        matTooltip=\"{{ 'Edit' | translate }}\" \n        color=\"primary\" \n        style=\"margin: 5px;\"\n        (click)=\"openEditOrderRowDialog(orderRow.id, false)\">\n            <i class=\"material-icons\">edit</i>\n        </button>\n\n        <button \n        mat-mini-fab\n        matTooltip=\"{{ 'Delete' | translate }}\"\n        style=\"margin: 5px;\" \n        color=\"warn\" \n        (click)=\"openAreYouSureOrderRowDialog(i)\">\n            <i class=\"material-icons\">delete</i>\n        </button>\n    </div>\n</mat-card>\n\n<div mat-dialog-actions align=\"center\">\n    <button \n    mat-mini-fab \n    color=\"basic\" \n    matTooltip=\"{{ 'Add row' | translate }}\"\n    [disabled]=\"!isAddRowEnabled\"\n    (click)=\"openEditOrderRowDialog('', true)\">\n        <i class=\"material-icons\">add</i>\n    </button>\n    \n    <button \n    *ngIf=\"newOrderRows.length > 0 && ((b_urgente.value == true && note.value != '') || (b_urgente.value == false))\" \n    mat-mini-fab\n    matTooltip=\"{{ 'Submit' | translate }}\"\n    [disabled]=\"!isSubmitEnabled\" \n    color=\"primary\" \n    (click)=\"onSubmit($event)\">\n        <i class=\"material-icons\">check</i>\n    </button>\n    \n    <button \n    mat-mini-fab\n    color=\"accent\" \n    matTooltip=\"{{ 'Cancel' | translate }}\"\n    mat-dialog-close=\"true\">\n        <i class=\"material-icons\">close</i>\n    </button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-order-row',\n  templateUrl: './add-order-row.component.html',\n  styleUrls: ['./add-order-row.component.css']\n})\nexport class AddOrderRowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>add-order-row works!</p>\n","import { Component, Injectable } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\n@Injectable({providedIn: 'root'})\nexport class AddProductComponent{\n\n  cod!: UntypedFormControl;\n  des!: UntypedFormControl;\n  ord!: UntypedFormControl;\n  unita!: UntypedFormControl;\n  confezionamento!: UntypedFormControl;\n  multiplo_confezionamento!: UntypedFormControl;\n  multiplo_imballo!: UntypedFormControl;\n  attivo!: UntypedFormControl;\n  extra!: UntypedFormControl;\n  min_ord!: UntypedFormControl;\n  valido_da!: UntypedFormControl;\n  valido_a!: UntypedFormControl;\n  isSubmitted: boolean = false;\n\n  //DateRangePicker\n  range = new UntypedFormGroup({\n    start: new UntypedFormControl('', Validators.required),\n    end: new UntypedFormControl('', Validators.required),\n  });\n  \n  formBuilder!: UntypedFormBuilder;\n  constructor(\n    private dialogRef: MatDialogRef<AddProductComponent>,\n    private _builder: UntypedFormBuilder\n  ) { \n    //formBuilder configuration\n    this.cod = _builder.control('', Validators.required);\n    this.des = _builder.control('', Validators.required);\n    this.ord = _builder.control('', Validators.required);\n    this.unita = _builder.control('', Validators.required);\n    this.confezionamento = _builder.control('');\n    this.multiplo_confezionamento = _builder.control('');\n    this.multiplo_imballo = _builder.control('');\n    this.attivo = _builder.control(false);\n    this.extra = _builder.control(false);\n    this.min_ord = _builder.control('');\n    this.valido_da = _builder.control('');\n    this.valido_a = _builder.control('');\n  }\n\n  onSubmit(): void {\n    this.isSubmitted = true;\n    let newProduct = {\n      id: \"-1\",\n      cod: this.cod.value, \n      des: this.des.value,\n      ord: this.ord.value,\n      unita: this.unita.value,\n      confezionamento: this.confezionamento.value,\n      multiplo_confezionamento: this.multiplo_confezionamento.value,\n      multiplo_imballo: this.multiplo_imballo.value,\n      attivo: this.attivo.value ? 1 : 0,\n      extra: this.extra.value ? 1 : 0,\n      min_ord: this.min_ord.value,\n      valido_da: this.formatDate(this.range.controls['start'].value.toLocaleString('it-IT').split(\",\", 2)[0]),\n      valido_a: this.formatDate(this.range.controls['end'].value.toLocaleString('it-IT').split(\",\", 2)[0])\n    }\n    this.dialogRef.close({newProduct: newProduct, isSubmitted: this.isSubmitted});\n  }\n\n  //date: full value of the date Y-M-D in string format\n  formatDate(date: string): string {\n    if(date == \"\")\n      return \"\";\n    \n    let formattedDate!: string;\n    let splittedDate = date.split(\"/\", 3);\n    \n    let day = splittedDate[0];\n    let month = splittedDate[1];\n    let year = splittedDate[2];\n\n    //prepare date to be saved on db\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    formattedDate = year + \"-\" + month + \"-\" + day;\n    return formattedDate;\n  }\n\n  toggleAttivo(): void {\n    this.attivo.value ? this.attivo = this._builder.control(false) : this.attivo = this._builder.control(true);\n  }\n\n  toggleExtra(): void {\n    this.extra.value ? this.extra = this._builder.control(false) : this.extra = this._builder.control(true);\n  }\n}\n","<h3 mat-dialog-title>{{ 'Add a new product' | translate }}</h3>\n\n<div mat-dialog-content>\n\t<mat-form-field>\n\t\t<input\n\t\t\ttype=\"number\"\n\t\t\tplaceholder=\"{{ 'Code' | translate }}\"\n\t\t\t[formControl]=\"cod\"\n\t\t\tmatInput>\n\t</mat-form-field>\n\t<br>\n\t<mat-form-field>\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tplaceholder=\"{{ 'Description' | translate }}\"\n\t\t\t[formControl]=\"des\"\n\t\t\tmatInput>\n\t</mat-form-field>\n\t<mat-form-field>\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tplaceholder=\"{{ 'Sorting' | translate }}\"\n\t\t\t[formControl]=\"ord\"\n\t\t\tmatInput>\n\t</mat-form-field>\n\t<br>\n\t<mat-form-field>\n\t\t<input\n\t\t\ttype=\"number\"\n\t\t\tplaceholder=\"{{ 'Units' | translate }}\"\n\t\t\t[formControl]=\"unita\"\n\t\t\tmatInput>\n\t</mat-form-field>\n\t<br>\n\t<mat-form-field>\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tplaceholder=\"{{ 'Packaging' | translate }}\"\n\t\t\t[formControl]=\"confezionamento\"\n\t\t\tmatInput>\n\t</mat-form-field>\n\t<br>\n\t<mat-form-field>\n\t\t<input\n\t\t\ttype=\"number\"\n\t\t\tplaceholder=\"{{ 'Multiple Packaging' | translate }}\"\n\t\t\t[formControl]=\"multiplo_confezionamento\"\n\t\t\tmatInput>\n\t</mat-form-field>\n\t<br>\n\t<mat-form-field>\n\t\t<input\n\t\t\ttype=\"number\"\n\t\t\tplaceholder=\"{{ 'Multiple Packing' | translate }}\"\n\t\t\t[formControl]=\"multiplo_imballo\"\n\t\t\tmatInput>\n\t</mat-form-field>\n\t\n\t<mat-checkbox \n\t\tlabelPosition=\"before\"\n\t\t(click)=\"toggleAttivo()\">\n\t\t{{ 'Attivo' | translate }}\n\t</mat-checkbox>\n\t\n\t<mat-checkbox \n\t\tlabelPosition=\"before\"\n\t\t(click)=\"toggleExtra()\">\n\t\t{{ 'Extra' | translate }}\n\t</mat-checkbox>\n\t\n\t<mat-form-field>\n\t\t<input\n\t\t\ttype=\"number\"\n\t\t\tplaceholder=\"{{ 'Minimum Order' | translate }}\"\n\t\t\t[formControl]=\"min_ord\"\n\t\t\tmatInput>\n\t</mat-form-field>\n\n\t<mat-form-field appearance=\"fill\">\n\t\t<mat-label>{{ 'Validity' | translate }}</mat-label>\n\t\t<mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n\t\t  <input matStartDate formControlName=\"start\" placeholder=\"{{ 'Valid from' | translate }}\">\n\t\t  <input matEndDate formControlName=\"end\" placeholder=\"{{ 'Valid through' | translate }}\">\n\t\t</mat-date-range-input>\n\t\t<mat-hint>{{ 'Valid from' | translate }} – {{ 'Valid through' | translate }}</mat-hint>\n\t\t<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n\t\t<mat-date-range-picker #picker> </mat-date-range-picker>  \n\t</mat-form-field>\n</div>\n\n<div mat-dialog-actions align=\"center\">\n\t<button \n\tmat-mini-fab\n\tcolor=\"primary\" \n\tmatTooltip=\"{{ 'Submit' | translate }}\"\n\t(click)=\"onSubmit()\">\n\t\t<i class=\"material-icons\">check</i>\n\t</button>\n\t\n\t<button \n\tmat-mini-fab \n\tmat-dialog-close\n\tmatTooltip=\"{{ 'Cancel' | translate }}\" \n\tcolor=\"accent\">\n\t\t<i class=\"material-icons\">close</i>\n\t</button>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ForecastReportComponent } from './forecast-report/forecast-report.component';\nimport { ForecastComponent } from './forecast/forecast.component';\nimport { LoansComponent } from './loans/loans.component';\nimport { LoginComponent } from './login/login.component';\nimport { OrderResumeComponent } from './order-resume/order-resume.component';\nimport { OrderablePeriodComponent } from './orderable-period/orderable-period.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { PharmaRegistryComponent } from './pharma-registry/pharma-registry.component';\nimport { SuppliesComponent } from './supplies/supplies.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { LoginGatewayComponent } from './login-gateway/login-gateway.component';\n\nconst routes: Routes = [\n  {path: 'login', redirectTo: ''},\n  {path: 'welcome', redirectTo: '', pathMatch: 'full'},\n  {path: '', component: LoginComponent},\n  {path: 'home', component: WelcomeComponent},\n  {path: 'pharma-registry', component: PharmaRegistryComponent},\n  {path: 'forecast', component: ForecastComponent},\n  {path: 'forecast-report', component: ForecastReportComponent},\n  {path: 'orders', component: OrdersComponent,},\n  {path: 'orders/resume', component: OrderResumeComponent},\n  {path: 'order-period', component: OrderablePeriodComponent},\n  {path: 'supplies', component: SuppliesComponent},\n  {path: 'loans', component: LoansComponent},\n  {path: 'login_gateway', component: LoginGatewayComponent},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment, User } from 'src/environments/environment';\nimport { LoginService } from './login.service';\nimport { UsersService } from './users.service';\nimport { log } from 'console';\nimport { VersionService } from './version.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'sangue';\n  users: User[] = [];\n  currentUser!: User;\n  localStorage: any;\n  router!: Router;\n  \n  constructor(\n    public loginService: LoginService,\n    public translate: TranslateService,\n    router: Router,\n    private usersService: UsersService,\n    private versionService: VersionService\n  ){\n    this.router = router;\n    translate.addLangs(['en', 'it']);\n    this.localStorage = localStorage;\n    //this.localStorage.setItem(\"version\", environment.version);\n    this.loginService.getCurrentUserSync();\n    if(\n      navigator.language.split(\"-\", 2)[0] == 'it' ||\n      navigator.language.split(\"-\", 2)[0] == 'en'\n    ){\n      //translate.setDefaultLang(navigator.language.split(\"-\", 2)[0]);\n      translate.setDefaultLang('it');\n    }\n    else{\n      translate.setDefaultLang('en');\n    }\n    \n    //comment the next line to activate language detection\n    //translate.setDefaultLang('it');\n    //environment.currentLanguage = 'it'\n    //console.log(navigator.language.split(\"-\", 2)[0]);\n    //console.log(loginService.getUserCode());\n  }\n\n  ngOnInit(): void {\n    //check connection every 30s\n    this.checkRegularly(30);\n  }\n\n  /*\n  \n    LOGIN SERVICE FUNCTIONS\n  \n  */\n  check(){\n    this.loginService.check();\n  }\n\n  login(username: string, password: string){\n    this.loginService.login(username, password);\n  }\n\n  logout(){\n    this.loginService.logout();\n  }\n\n  checkRegularly(seconds: number) {\n    setInterval(() => {\n      this.loginService.checkPromise().subscribe(\n        res => {\n          if(localStorage.getItem(\"id_session\") != null && res[0] == \"KO\"){\n            localStorage.removeItem(\"id_session\");\n            localStorage.removeItem(\"id_profile\");\n            localStorage.removeItem(\"sangue_username\");\n            this.router.navigate(['login']);\n          }\n        }\n      );\n    }, seconds * 1000);\n  }\n\n  /*\n  \n    LANGUAGE FUNCTIONS\n\n  */\n  switchLanguage(lang: string) {\n    this.translate.use(lang)\n    environment.currentLanguage = lang;\n  }\n\n  getManual(userCode: string) {\n    let filename: string = \"manual-\" + userCode + \".pdf\";\n    let docsPath: string = \"assets/docs/\";\n    window.open(docsPath + filename, \"_blank\");\n  }\n\n  getVersion() {\n\n  }\n\n  setVersion() {\n\n  }\n}\n","\n<!--header>\n\t<img src=\"https://ecwmed.asl.novara.it/img/loghi/ico_asl_piemonte_NO.jpg\"/>\n</header-->\n\n<nav\nstyle=\"display: flex; flex-direction: row;\">\n\n\t<img src=\"https://ecwmed.asl.novara.it/img/loghi/ico_asl_piemonte_NO.jpg\"/>\n\n\t<button \n\t*ngIf=\"loginService.getUsername() != null\"\n\tmat-button \n\t[matMenuTriggerFor]=\"menu\"\n\t> \n\t\t{{ 'Menu' | translate }}\n\t</button>\n\t<mat-menu #menu=\"matMenu\">\n\t\t<!--button \n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() == null\"\n\t\t[routerLink]=\"['/login']\">\n\t\t\t{{ 'Login' | translate }}\n\t\t</button-->\n\t\t<button \n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() != null\"\n\t\t[routerLink]=\"['/home']\">\n\t\t\t{{ 'Home' | translate }}\n\t\t</button>\n\t\t<button\n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() == '200'\"\n\t\t[routerLink]=\"['/pharma-registry']\">\n\t\t\t{{ 'Registry' | translate }}\n\t\t</button>\n\t\t<!--button \n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() == '210' || loginService.getUserCode() == '220'\"\n\t\t[routerLink]=\"['/forecast']\">\n\t\t\t{{ 'Forecast' | translate }}\n\t\t</button-->\n\t\t<button \n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() == '230'\"\n\t\t[routerLink]=\"['/supplies']\">\n\t\t\t{{ 'Supplies' | translate }}\n\t\t</button>\n\t\t<button \n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() == '210' || loginService.getUserCode() == '220'\"\n\t\t[routerLink]=\"['/loans']\">\n\t\t\t{{ 'Loans' | translate }}\n\t\t</button>\n\t\t<!--button \n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() != null\"\n\t\t(click)=\"loginService.logout()\"\n\t\t[routerLink]=\"['']\">\n\t\t\t{{ 'Logout' | translate }}\n\t\t</button-->\n\t\t<button\n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() == '200'\"\n\t\t(click)=\"getManual(loginService.getUserCode()!)\">\n\t\t\t{{ 'Manual' | translate }}\n\t\t</button>\n\t\t<button\n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() == '210'\"\n\t\t(click)=\"getManual(loginService.getUserCode()!)\">\n\t\t\t{{ 'Manual' | translate }}\n\t\t</button>\n\t\t<button\n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() == '220'\"\n\t\t(click)=\"getManual(loginService.getUserCode()!)\">\n\t\t\t{{ 'Manual' | translate }}\n\t\t</button>\n\t\t<button\n\t\tmat-menu-item \n\t\t*ngIf=\"loginService.getUserCode() == '230'\"\n\t\t(click)=\"getManual(loginService.getUserCode()!)\">\n\t\t\t{{ 'Manual' | translate }}\n\t\t</button>\n\t</mat-menu>\t\n\n\t<button \n\t*ngIf=\"loginService.getUserCode() == '210' || loginService.getUserCode() == '220'\"\n\tmat-button \n\t[matMenuTriggerFor]=\"forecasts\"> \n\t\t{{ 'Forecasts' | translate }}\n\t</button>\n\t<mat-menu #forecasts=\"matMenu\">\n\t\t<button \n\t\tmat-menu-item\n\t\t[routerLink]=\"['/forecast']\">\n\t\t\t{{ 'Forecasts' | translate }}\n\t\t</button>\n\n\t\t<button\n\t\t*ngIf=\"loginService.getUserCode() == '220'\"\n\t\tmat-menu-item\n\t\t[routerLink]=\"['/forecast-report']\">\n\t\t\t{{ 'Reports' | translate }}\n\t\t</button>\n\t</mat-menu>\t\n\t\n\t<button \n\t*ngIf=\"loginService.getUserCode() == '210' || loginService.getUserCode() == '220'\"\n\tmat-button \n\t[matMenuTriggerFor]=\"orders\"\n\t> \n\t\t{{ 'Orders' | translate }}\n\t</button>\n\t<mat-menu #orders=\"matMenu\">\n\t\t<button \n\t\tmat-menu-item\n\t\t[routerLink]=\"['/orders']\">\n\t\t\t{{ 'Orders' | translate }}\n\t\t</button>\n\n\t\t<button \n\t\t*ngIf=\"loginService.getUserCode() == '220'\"\n\t\tmat-menu-item\n\t\t[routerLink]=\"['/order-period']\">\n\t\t\t{{ 'Orderable period' | translate }}\n\t\t</button>\n\t</mat-menu>\t\n\n\t<button \n\t*ngIf=\"loginService.getUserCode() == '210' || loginService.getUserCode() == '220'\"\n\tmat-button \n\t[matMenuTriggerFor]=\"extractions\"\n\t> {{ 'Extractions' | translate }}</button>\n\t<mat-menu #extractions=\"matMenu\">\n\t\t<button \n\t\tmat-menu-item\n\t\trouterLink=\"/orders/resume\"\n\t\t>\n\t\t\t{{ 'Report xls orders' | translate }}\n\t\t</button>\n\t</mat-menu>\t\n\n\t<button\n\tmat-button\n\t*ngIf=\"loginService.getUsername() != null\"\n\t[matMenuTriggerFor]=\"loginMenu\"\n\t>\n\t\t<em>{{ 'Logged as' | translate }} <b>{{loginService.currentUser.client}}</b> - username: <b>{{loginService.currentUser.username}}</b></em>\n\t</button>\n\t<button \n\tmat-button\n\t*ngIf=\"loginService.getUsername() == null\"\n\t(click)=\"router.navigate(['/login'])\">\n\t\t{{ 'Login' | translate }}\n\t</button>\n\t<mat-menu #loginMenu=\"matMenu\">\n\t\t<button \n\t\t*ngIf=\"loginService.getUsername() != null\"\n\t\tmat-menu-item \n\t\t(click)=\"loginService.logout()\"\n\t\t>\n\t\t\t{{ 'Logout' | translate }}\n\t\t</button>\n\t</mat-menu>\t\n\t<p\n\t*ngIf=\"loginService.getUsername() != null\"\n\tstyle=\"\n\tposition: absolute;\n\tright: 0; \n\tmargin: 15px;\">\n\t\tv{{ localStorage.getItem(\"version\") }}\n\t</p>\n</nav>\n\n<router-outlet></router-outlet>\n\n\n<!--footer>\n\t<p \n\t*ngIf=\"loginService.getUsername() != null\"\n\talign=\"center\">\n\t\t{{ 'Logged as' | translate }} <b>{{ localStorage.getItem(\"sangue_username\") }}</b>.\n\t</p>\n\t<p \n\t*ngIf=\"loginService.getUsername() == null\"\n\talign=\"center\">\n\t\t{{ 'You\\'re not logged!' | translate }} <a [routerLink]=\"['/login']\">{{ 'Login' | translate }}</a>\n\t</p>\t\n</footer-->\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoggedComponent } from './logged/logged.component';\nimport { LoginComponent } from './login/login.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { HomeComponent } from './home/home.component';\nimport { PharmaRegistryComponent } from './pharma-registry/pharma-registry.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ForecastComponent } from './forecast/forecast.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { AreYouSureProductComponent } from './are-you-sure-product/are-you-sure-product.component';\nimport { AreYouSureForecastComponent } from './are-you-sure-forecast/are-you-sure-forecast.component';\nimport { AddForecastComponent } from './add-forecast/add-forecast.component'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatInputComponent } from './mat-input/mat-input.component';\nimport { ButtonDeleteForecastComponent } from './button-delete-forecast/button-delete-forecast.component';\nimport { ButtonDeleteProductComponent } from './button-delete-product/button-delete-product.component';\nimport { DropdownProductsForecastComponent } from './dropdown-products-forecast/dropdown-products-forecast.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownUsersForecastComponent } from './dropdown-users-forecast/dropdown-users-forecast.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule} from '@angular/material/menu';\nimport { MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { CellCheckboxComponent } from './cell-checkbox/cell-checkbox.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ButtonEditOrderComponent } from './button-edit-order/button-edit-order.component';\nimport { ButtonDeleteOrderComponent } from './button-delete-order/button-delete-order.component';\nimport { EditOrderComponent } from './edit-order/edit-order.component';\nimport { EditOrderDialogComponent } from './edit-order-dialog/edit-order-dialog.component';\nimport { DatepickerProductsDialogComponent } from './datepicker-products-dialog/datepicker-products-dialog.component'\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { AreYouSureOrderRowComponent } from './are-you-sure-order-row/are-you-sure-order-row.component';\nimport { AreYouSureOrderComponent } from './are-you-sure-order/are-you-sure-order.component';\nimport { AddOrderRowComponent } from './add-order-row/add-order-row.component';\nimport { EditOrderRowComponent } from './edit-order-row/edit-order-row.component';\nimport { AddOrderDialogComponent } from './add-order-dialog/add-order-dialog.component';\nimport { DropdownUsersOrdersComponentComponent } from './dropdown-users-orders-component/dropdown-users-orders-component.component';\nimport { DropdownUsersOrdersComponent } from './dropdown-users-orders/dropdown-users-orders.component';\n\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { OrdersExtraCheckboxComponent } from './orders-extra-checkbox/orders-extra-checkbox.component';\nimport { OrdersUrgentCheckboxComponent } from './orders-urgent-checkbox/orders-urgent-checkbox.component';\nimport { OrdersValidatedCheckboxComponent } from './orders-validated-checkbox/orders-validated-checkbox.component';\nimport { PharmaRegistryActiveCheckboxComponent } from './pharma-registry-active-checkbox/pharma-registry-active-checkbox.component';\nimport { PharmaRegistryExtraCheckboxComponent } from './pharma-registry-extra-checkbox/pharma-registry-extra-checkbox.component';\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nimport { OrderablePeriodComponent } from './orderable-period/orderable-period.component';\nimport { LoadingCellRendererComponent } from './loading-cell-renderer/loading-cell-renderer.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { OrdersSentCheckboxComponent } from './orders-sent-checkbox/orders-sent-checkbox.component';\nimport { SendToSupplierDialogComponent } from './send-to-supplier-dialog/send-to-supplier-dialog.component';\nimport { SuppliesComponent } from './supplies/supplies.component';\nimport { OrdersToCustomerComponent } from './orders-to-customer/orders-to-customer.component';\nimport { OrdersToCustomerCheckboxComponent } from './orders-to-customer-checkbox/orders-to-customer-checkbox.component';\nimport { SendToCustomerDialogComponent } from './send-to-customer-dialog/send-to-customer-dialog.component';\nimport { ButtonSupplyDetailsComponent } from './button-supply-details/button-supply-details.component';\nimport { OrdersReceivedCheckboxComponent } from './orders-received-checkbox/orders-received-checkbox.component';\nimport { MarkAsReceivedDialogComponent } from './mark-as-received-dialog/mark-as-received-dialog.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from \"@angular/material/icon\";\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { ButtonOrderReportComponent } from './button-order-report/button-order-report.component';\nimport { ForecastReportComponent } from './forecast-report/forecast-report.component';\nimport { LoansComponent } from './loans/loans.component';\nimport { AddLoanDialogComponent } from './add-loan-dialog/add-loan-dialog.component';\nimport { ButtonLoanDetailsComponent } from './button-loan-details/button-loan-details.component';\nimport { LoanDetailsDialogComponent } from './loan-details-dialog/loan-details-dialog.component';\nimport { OrderResumeComponent } from './order-resume/order-resume.component';\nimport { LoginGatewayComponent } from './login-gateway/login-gateway.component';\nimport { DdtOrderActionsComponent } from './ddt-order-actions/ddt-order-actions.component';\nimport { OrderDdtUploadDialogComponent } from './order-ddt-upload-dialog/order-ddt-upload-dialog.component';\nimport { DragNDropDirective } from './drag-n-drop.directive';\nimport { ButtonSupplyReportComponent } from './button-supply-report/button-supply-report.component';\nimport { OrdersValidatedDialogComponent } from './orders-validated-dialog/orders-validated-dialog.component';\n//import { LocationStrategy, HashLocationStrategy } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoggedComponent,\n    LoginComponent,\n    WelcomeComponent,\n    HomeComponent,\n    PharmaRegistryComponent,\n    ForecastComponent,\n    AddProductComponent,\n    AreYouSureProductComponent,\n    AreYouSureForecastComponent,\n    AddForecastComponent,\n    MatInputComponent,\n    ButtonDeleteForecastComponent,\n    ButtonDeleteProductComponent,\n    DropdownProductsForecastComponent,\n    DropdownUsersForecastComponent,\n    CellCheckboxComponent,\n    OrdersComponent,\n    PageNotFoundComponent,\n    ButtonEditOrderComponent,\n    ButtonDeleteOrderComponent,\n    EditOrderComponent,\n    EditOrderDialogComponent,\n    DatepickerProductsDialogComponent,\n    AreYouSureOrderRowComponent,\n    AreYouSureOrderComponent,\n    AddOrderRowComponent,\n    EditOrderRowComponent,\n    AddOrderDialogComponent,\n    DropdownUsersOrdersComponentComponent,\n    DropdownUsersOrdersComponent,\n    OrdersExtraCheckboxComponent,\n    OrdersUrgentCheckboxComponent,\n    OrdersValidatedCheckboxComponent,\n    PharmaRegistryActiveCheckboxComponent,\n    PharmaRegistryExtraCheckboxComponent,\n    OrderablePeriodComponent,\n    LoadingCellRendererComponent,\n    OrdersSentCheckboxComponent,\n    SendToSupplierDialogComponent,\n    SuppliesComponent,\n    OrdersToCustomerComponent,\n    OrdersToCustomerCheckboxComponent,\n    SendToCustomerDialogComponent,\n    ButtonSupplyDetailsComponent,\n    OrdersReceivedCheckboxComponent,\n    MarkAsReceivedDialogComponent,\n    ButtonOrderReportComponent,\n    ForecastReportComponent,\n    LoansComponent,\n    AddLoanDialogComponent,\n    ButtonLoanDetailsComponent,\n    LoanDetailsDialogComponent,\n    OrderResumeComponent,\n    LoginGatewayComponent,\n    DdtOrderActionsComponent,\n    OrderDdtUploadDialogComponent,\n    DragNDropDirective,\n    ButtonSupplyReportComponent,\n    OrdersValidatedDialogComponent,\n\n  ],\n  providers: [\n    AddProductComponent,\n    AreYouSureProductComponent,\n    AddForecastComponent,\n    AreYouSureForecastComponent,\n    {\n      provide: MAT_DATE_LOCALE,\n      useValue: 'it-IT'\n    },\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: {\n        duration: 3000\n      }\n    },\n    /*\n    {\n      provide: LocationStrategy,\n      useClass: HashLocationStrategy\n    }\n    */\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    AgGridModule,\n    MatTableModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    CommonModule,\n    MatCardModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatSnackBarModule\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\nexport function httpTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}","import { Component, Inject, Injectable } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-are-you-sure-forecast',\n  templateUrl: './are-you-sure-forecast.component.html',\n  styleUrls: ['./are-you-sure-forecast.component.css']\n})\n@Injectable({providedIn: 'root'})\nexport class AreYouSureForecastComponent {\n\n  id!: number;\n  isSubmitted: boolean = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {id: number},\n    private dialogRef: MatDialogRef<AreYouSureForecastComponent>\n    ) { \n      this.id = this.data.id\n    }\n\n  onSubmit() {   \n    this.isSubmitted = true;\n    this.dialogRef.close(\n      {\n        id: this.id,\n        isSubmitted: this.isSubmitted\n      }\n    );\n  }\n}\n","<h2>{{ 'Delete forecast with ID' | translate }} {{ id }}?</h2>\n\n<div mat-dialog-actions align=\"center\">\n\t<button mat-raised-button color=\"warn\" (click)=\"onSubmit()\">{{ 'Delete' | translate }}</button>\n\t<button mat-raised-button color=\"primary\" mat-dialog-close>{{ 'Cancel' | translate }}</button>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-are-you-sure-order-row',\n  templateUrl: './are-you-sure-order-row.component.html',\n  styleUrls: ['./are-you-sure-order-row.component.css']\n})\nexport class AreYouSureOrderRowComponent implements OnInit {\n  id!: string;\n  isSubmitted: boolean = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {id: string, isSubmitted: boolean},\n    private dialogRef: MatDialogRef<AreYouSureOrderRowComponent>\n  ) { \n    this.id = data.id;\n  }\n\n  ngOnInit(): void { }\n  \n  onSubmit() {\n    this.isSubmitted = true;\n    this.dialogRef.close({isSubmitted: this.isSubmitted});\n  }\n}\n","<h2>{{ 'Delete order row with ID' | translate }} {{ id }}?</h2>\n<div mat-dialog-actions align=\"center\">\n    <button mat-raised-button (click)=\"onSubmit()\" color=\"warn\">{{ 'Delete' | translate }}</button>\n    <button mat-raised-button matDialogClose=\"true\" color=\"primary\">{{ 'Cancel' | translate }}</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-are-you-sure-order',\n  templateUrl: './are-you-sure-order.component.html',\n  styleUrls: ['./are-you-sure-order.component.css']\n})\nexport class AreYouSureOrderComponent implements OnInit {\n  orderId!: string;\n  isSubmitted: boolean = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { id: string },\n    private dialogRef: MatDialogRef<AreYouSureOrderComponent>\n  ) { \n    this.orderId = data.id;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    this.dialogRef.close({isSubmitted: this.isSubmitted});\n  }\n}\n","<h2>{{ 'Delete order with ID' | translate }} {{ orderId }}?</h2>\n<div mat-dialog-actions align=\"center\">\n    <button mat-raised-button (click)=\"onSubmit()\" color=\"warn\">'{{ 'Delete' | translate }}</button>\n    <button mat-raised-button matDialogClose=\"true\" color=\"primary\">{{ 'Cancel' | translate }}</button>\n</div>\n","import { Component, Inject, Injectable } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-are-you-sure-product',\n  templateUrl: './are-you-sure-product.component.html',\n  styleUrls: ['./are-you-sure-product.component.css']\n})\n@Injectable({providedIn: 'root'})\nexport class AreYouSureProductComponent {\n\n  id!: number;\n  isSubmitted: boolean = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {id: number, isSubmitted: boolean},\n    private dialogRef: MatDialogRef<AreYouSureProductComponent>\n  ) {\n    this.id = this.data.id;\n   }\n\n  onSubmit(){\n    this.isSubmitted = true;\n    this.dialogRef.close(\n      {\n        id: this.id,\n        isSubmitted: this.isSubmitted\n      }\n    );\n  }\n}\n","<h3 mat-dialog-title>{{ 'Delete product with ID' | translate }} {{ id }}?</h3>\n\n<div mat-dialog-actions align=\"center\">\n\t<button mat-raised-button color=\"warn\" (click)=\"onSubmit()\">{{ 'Delete' | translate }}</button>\n\t<button mat-raised-button mat-dialog-close>{{ 'Cancel' | translate }}</button>\n</div>","import { Component } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { ForecastComponent } from '../forecast/forecast.component';\n\n@Component({\n  selector: 'app-button-delete-forecast',\n  template: `\n    <button \n    mat-mini-fab \n    class=\"mat-elevation-z0\"\n    disabled=\"{{isApproved}}\"\n    color=\"warn\"\n    matTooltip=\"{{ 'Delete' | translate }}\" \n    (click)=\"onClickOpenDialog($event)\">\n      <i class=\"material-icons\">delete</i>\n    </button>\n  `,\n  styleUrls: ['./button-delete-forecast.component.css']\n})\nexport class ButtonDeleteForecastComponent implements ICellRendererAngularComp {\n  isApproved: boolean = false;\n  data: any;\n  \n  constructor(private forecastComponent: ForecastComponent) { }\n\n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n    if(this.data.qta_approvata > 0) {\n      this.isApproved = true;\n    }\n  }\n\n  refresh(params: ICellRendererParams<any, any>): boolean {\n    //default return\n    return false;\n  }\n\n  onClickOpenDialog(event: any){\n    this.forecastComponent.setId(this.data.id);\n    this.forecastComponent.openAreYouSureDialog();\n  }\n\n  //TODO\n/*\n  openAreYouSureDialog(){\n    this.dialogRef = this.dialog.open(\n      AreYouSureForecastComponent,\n      {\n        data:{\n          id: this.id\n        }\n      });\n    this.dialogRef.afterClosed().subscribe((result: {id: string, isSubmitted: boolean}) =>{\n      if(result !== undefined && result.isSubmitted){\n        this.rmForecast(result.id);\n        this.updateGrid();\n      }\n    });\n  }\n*/\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\n\n@Component({\n  selector: 'app-button-delete-order',\n  template: `\n  <button mat-raised-button color=\"primary\" style=\"width: 100%;\" (click)=\"openDeleteOrderDialog()\">{{ 'Delete' | translate }}</button>\n`,\n  styleUrls: ['./button-delete-order.component.css']\n})\nexport class ButtonDeleteOrderComponent implements OnInit, ICellRendererAngularComp {\n\n  data: any;\n\n  constructor() { }\n  \n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n  }\n\n  refresh(params: ICellRendererParams<any, any>): boolean {\n    return false;\n  }\n\n  ngOnInit(): void {\n  }\n\n  openDeleteOrderDialog() {\n    console.log(\"openDeleteOrderDialog()\");\n    //TODO\n    /*\n    this.dialogRef = this.dialog.open(\n      AreYouSureForecastComponent,\n      {\n        data:{\n          id: this.id\n        }\n      });\n    this.dialogRef.afterClosed().subscribe((result: {id: string, isSubmitted: boolean}) =>{\n      if(result !== undefined && result.isSubmitted){\n        this.rmForecast(result.id);\n        this.updateGrid();\n      }\n    });\n    */\n  }\n}\n","import { Component } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { PharmaRegistryComponent } from '../pharma-registry/pharma-registry.component';\n\n@Component({\n  selector: 'app-button-cell',\n  template: `\n    <button \n    mat-mini-fab \n    color=\"warn\" \n    class=\"mat-elevation-z0\"\n    matTooltip=\"{{ 'Delete' | translate }}\"\n    (click)=\"onClickOpenDialog($event)\">\n      <i class=\"material-icons\">delete</i>\n    </button>\n  `\n})\nexport class ButtonDeleteProductComponent implements ICellRendererAngularComp {\n  data: any;\n  constructor(private pharmaRegistryComponent: PharmaRegistryComponent) { }\n\n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n  }\n\n  refresh(params: ICellRendererParams<any, any>): boolean {\n    //this should be set to false by default\n    return false;\n  }\n\n  onClickOpenDialog(event: any){\n    this.pharmaRegistryComponent.setId(this.data.id);\n    this.pharmaRegistryComponent.openAreYouSureDialog();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { environment, Order, OrderRow, Forecast, OrderStatus} from 'src/environments/environment';\nimport { EditOrderDialogComponent } from '../edit-order-dialog/edit-order-dialog.component';\nimport { ForecastService } from '../forecast.service';\nimport { OrdersService } from '../orders.service';\nimport { OrdersComponent } from '../orders/orders.component';\nimport { PharmaRegistryService } from '../pharma-registry.service';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-button-edit-order',\n  templateUrl: './button-edit-order.component.html',\n  styleUrls: ['./button-edit-order.component.css']\n})\nexport class ButtonEditOrderComponent implements OnInit, ICellRendererAngularComp {\n  url = environment.basePath + \"order.php\";\n  data: any;\n  isLocked!: boolean;\n  currentOrder: Order = {\n    id: '',\n    anno: 0,\n    mese: 0,\n    username: '',\n    d_ordine: '',\n    n_ordine: 0,\n    b_urgente: false,\n    b_extra: false,\n    b_validato: false,\n    d_validato: 'string',\n    status: \"\",\n    note: '',\n    d_consegna_prevista: \"0000-00-00\",\n    n_ddt: \"\",\n    d_ddt: \"\",\n    note_consegna: \"\",\n    b_prestito: false,\n    id_ordine_prestito: \"\",\n    username_prestito_da: \"\",\n    username_prestito_a: \"\"\n  };\n  \n  orderRows: OrderRow[] = [];\n  users: any = [];\n  products: any = [];\n  forecasts: Forecast[] = [];\n  filteredForecasts: Forecast[] = [];\n\n  dialogRef: any;\n  dialog: MatDialog;\n\n\n  constructor(\n    dialog: MatDialog,\n    private ordersService: OrdersService,\n    private usersService: UsersService,\n    private pharmaRegistryService: PharmaRegistryService,\n    private ordersComponent: OrdersComponent,\n    private forecastService: ForecastService\n  ) { \n    this.dialog = dialog;\n    this.ordersService = ordersService; \n  }\n  \n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n    //console.log(\"DATA:\");\n    //console.log(this.data);\n    \n    this.isLocked = this.data.isRowLocked;\n    this.listOrderRows(this.data.id);\n    this.listForecasts(this.data.anno);    \n  }\n  \n  refresh(params: ICellRendererParams<any, any>): boolean {\n    return false;\n  }\n\n  ngOnInit(): void {\n    this.listProducts();\n    this.listUsers();\n    switch(localStorage.getItem(\"id_profile\")) {\n      case '220':\n        this.isLocked = (this.data.status == \"inviato al fornitore\" || this.data.status == \"inviato al cliente\" || this.data.status == \"ricevuto\");\n        break;\n      case '210':\n        this.isLocked = (this.data.status != \"inviato\");\n        break;\n      case '230':\n        this.isLocked = true;\n        break;\n      default:\n        break;\n    }\n  }\n\n  listOrderRows(id: string) {\n    this.ordersService.listOrderRowsPromise(id).subscribe(\n      res => {\n        //console.log(res);\n        if(res[0] == \"KO\") {\n          console.error(\"Error retrieving OrderRows!\")\n        }\n        else {\n          this.orderRows = res[1];\n        }\n      }\n    );\n  }\n\n  openEditOrderDialog(event: any) {  \n    this.assignOrderData();\n    console.log(\"orderRows\");\n    console.log(this.orderRows);\n    \n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      order: this.currentOrder,\n      orderRows: this.orderRows, //array di orderRows \n      users: this.users,\n      products: this.products,\n      isLocked: this.isLocked,\n      forecasts: this.filteredForecasts,\n      status: this.data.status\n    }\n\n    dialogConfig.width = \"95%\";\n    dialogConfig.maxHeight = \"500px\";\n\n    if(this.data.status == \"inviato\")\n      dialogConfig.disableClose = true;\n    \n    //console.log(this.filteredForecasts);\n    \n    \n    this.dialogRef = this.dialog.open(\n      EditOrderDialogComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: {\n        order: Order,\n        orderRows: OrderRow[],\n        isSubmitted: boolean,\n        isClosing: boolean,\n        deleteOrder: boolean,\n        isValidated: boolean,\n        isQtaRicevutaConfirmed: boolean\n    }) => {\n      //console.log(result);\n      console.log(result) \n      if(result !== undefined && result.isSubmitted){\n        let orderStatus: OrderStatus = {\n          id: \"0\",\n          username: localStorage.getItem('sangue_username')!,\n          id_order: this.data.id,\n          d_status: this.getFormattedDate(new Date()),\n          status: \"eliminato\",\n          note: \"eliminato da \" + localStorage.getItem('sangue_username'),\n          b_sto: false\n        }\n\n        this.rmOrderAndOrderRows(this.data.id, result.orderRows);\n        this.ordersComponent.setOrderStatus(orderStatus);\n      }\n      if(result !== undefined && result.isClosing) {       \n        if(result.deleteOrder){\n          this.ordersComponent.rmOrder(this.currentOrder.id);\n        }\n\n        let orderStatus: OrderStatus = {\n          id: \"0\",\n          username: localStorage.getItem('sangue_username')!,\n          id_order: this.currentOrder.id,\n          d_status: this.getFormattedDate(new Date()),\n          status: \"eliminato\",\n          note: \"eliminato da \" + localStorage.getItem('sangue_username'),\n          b_sto: false\n        }\n\n        this.ordersComponent.setOrderStatus(orderStatus);\n      }\n      if(result !== undefined && result.isValidated) {\n        let orderStatus: OrderStatus = {\n          id: \"0\",\n          username: localStorage.getItem('sangue_username')!,\n          id_order: this.currentOrder.id,\n          d_status: this.getFormattedDate(new Date()),\n          status: \"confermato\",\n          note: \"Ordine validato da \" + localStorage.getItem('sangue_username'),\n          b_sto: false\n        }        \n        \n        this.ordersComponent.validateOrderRowsRec(result.orderRows, 0);\n\n        this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n          res => {\n            if(res[0] == \"OK\"){\n              let order = result.order;\n              order.b_validato = true;\n              order.d_validato = this.getFormattedDate(new Date());\n              this.ordersComponent.setOrder(order, orderStatus, false);\n            }\n            else {\n              console.error(\"Error setting status for order \" + this.data.id);\n            }\n          }\n        );\n      } \n      if(result !== undefined && result.isQtaRicevutaConfirmed) {\n        let orderStatus: OrderStatus = {\n          id: \"0\",\n          username: localStorage.getItem('sangue_username')!,\n          id_order: this.currentOrder.id,\n          d_status: this.getFormattedDate(new Date()),\n          status: \"ricevuto\",\n          note: \"quantità ricevuta aggiornata da \" + localStorage.getItem('sangue_username'),\n          b_sto: false\n        }\n        \n        this.ordersComponent.confirmQtaRicevutaOrderRowsRec(result.orderRows, 0);\n\n        this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n          res => {\n            if(res[0] == \"OK\"){\n              let order = result.order;\n              order.b_validato = true;\n              order.d_validato = this.getFormattedDate(new Date());\n              this.ordersComponent.setOrder(order, orderStatus, false);\n            }\n            else {\n              console.error(\"Error setting status for order \" + this.data.id);\n            }\n          }\n        );\n      }\n    });\n  }\n\n  rmOrderAndOrderRows(orderId: string, orderRows: OrderRow[]) {\n    this.ordersComponent.rmOrderAndOrderRows(orderId, orderRows);\n  }\n\n  assignOrderData() {\n    this.currentOrder.id = this.data.id;\n    this.currentOrder.anno = this.data.anno;\n    this.currentOrder.mese = this.data.mese;\n    this.currentOrder.username = this.data.username;\n    this.currentOrder.d_ordine = this.data.d_ordine;\n    this.currentOrder.n_ordine = this.data.n_ordine;\n    this.currentOrder.b_urgente = this.data.b_urgente;\n    this.currentOrder.b_extra = this.data.b_extra;\n    this.currentOrder.b_validato = this.data.b_validato;\n    this.currentOrder.d_validato = this.data.d_validato;\n    this.currentOrder.status = this.data.status;\n    this.currentOrder.note = this.data.note;\n    this.currentOrder.d_consegna_prevista = this.data.d_consegna_prevista;\n    this.currentOrder.n_ddt = this.data.n_ddt;\n    this.currentOrder.d_ddt = this.data.d_ddt;\n    this.currentOrder.note_consegna = this.data.note_consegna;\n    this.currentOrder.b_prestito = this.data.b_prestito;\n    this.currentOrder.id_ordine_prestito = this.data.id_ordine_prestito\n    this.currentOrder.username_prestito_da = this.data.username_prestito_da;\n    this.currentOrder.username_prestito_a = this.data.username_prestito_a;\n    console.log(this.currentOrder);\n  }\n\n  listUsers() {\n    this.usersService.listUsersPromise(\"210\").subscribe(\n      res => {\n        if(res[0] == \"KO\") {\n          //alert(\"Error retrieving users!\");\n        }\n        else {\n          this.users = res[1];\n          //console.log(this.users);\n        }\n      }\n    );\n  }\n\n  listProducts() {\n    this.pharmaRegistryService.listProductsPromise().subscribe(\n      res => {\n        if(res[0] == \"KO\") {\n          //alert(\"Error retrieving products!\");\n        }\n        else {\n          this.products = res[1];\n          //console.log(this.products);\n        }\n      }\n    );\n  }\n\n  listForecasts(year: string) {\n    this.forecastService.listForecastsPromise(year).subscribe(\n      res => {\n        if(res[0] == \"OK\"){\n          this.forecasts = res[1];\n          //console.log(this.forecasts);\n          this.filterForecastsByUsername(this.data.username);\n          //console.log(this.filteredForecasts);\n        }\n        else {\n          console.error(\"Error retrieving forecasts!\");\n        }\n      }\n    )\n  }\n\n  filterForecastsByUsername(username: string) {\n    this.filteredForecasts = [];\n    for(var i = 0; i < this.forecasts.length; ++i) {\n      if(this.forecasts[i].username == username) {\n        this.filteredForecasts.push(this.forecasts[i]);\n      }\n    }\n  }\n\n  /**\n   * \n   * ORDER STATUS MANAGEMENT\n   * \n   */\n  \n  getOrderStatus(orderId: string) {\n    this.ordersService.getOrderStatusPromise(orderId).subscribe(\n      res => {\n        if(res[0] == \"OK\"){\n          \n        }\n        else{\n          //console.error(\"Error retrieving orderStatus for order \" + orderId);\n          //console.error(res);\n        }\n      }\n    );\n  }\n\n  getFormattedDate(date: Date): string {\n    let splitDate = date.toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 3);\n    \n    let day = splitDate[0];\n    let month = splitDate[1];\n    let year = splitDate[2];\n\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    return year + \"-\" + month + \"-\" + day;  \n  }\n}\n","<button \n    mat-mini-fab\n    color=\"primary\"\n    *ngIf=\"this.data.status == 'inviato'\"\n    class=\"mat-elevation-z0\"\n    matTooltip=\"{{ 'Edit' | translate }}\"\n    (click)=\"openEditOrderDialog($event)\">\n        <i class=\"material-icons\">edit</i>\n</button>\n<!--cambiata condizione *ngIf=\"!isLocked\", anche sotto-->\n<button \n    mat-mini-fab\n    color=\"basic\"\n    *ngIf=\"this.data.status != 'inviato'\" \n    class=\"mat-elevation-z0\"\n    matTooltip=\"{{ 'View' | translate }}\"\n    (click)=\"openEditOrderDialog($event)\">\n        <i class=\"material-icons\">remove_red_eye</i>\n</button>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { environment, OrderRow, Product } from 'src/environments/environment';\nimport { LoanDetailsDialogComponent } from '../loan-details-dialog/loan-details-dialog.component';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-button-loan-details',\n  templateUrl: './button-loan-details.component.html',\n  styleUrls: ['./button-loan-details.component.css']\n})\nexport class ButtonLoanDetailsComponent implements OnInit, ICellRendererAngularComp {\n\n  data: any;\n  orderRows: OrderRow[] = [];\n\n  dialogRef: any;\n\n  constructor(\n    private ordersService: OrdersService,\n    private dialog: MatDialog,\n  ) { \n  }\n  \n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n    this.getOrderRow(this.data.id);\n  }\n\n  refresh(params: ICellRendererParams<any, any>): boolean {\n    return false;\n  }\n\n  getOrderRow(id: string) {\n    this.ordersService.listOrderRowsPromise(id).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.orderRows = res[1];        \n        }\n        else {\n          console.error(\"Error retrieving OrderRows!\");\n        }\n      }\n    );\n  }\n\n  ngOnInit(): void {\n  }\n\n  openLoanDetailsDialog(event: any) {  \n    //this.assignOrderData();\n    \n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      data: this.data,\n      orderRow: this.orderRows[0],\n      products: environment.globalProducts\n    }\n\n    dialogConfig.width = \"50%\";\n    dialogConfig.maxHeight = \"500px\";\n    \n    \n    this.dialogRef = this.dialog.open(\n      LoanDetailsDialogComponent, \n      dialogConfig\n    );\n  }\n\n}\n","<button \n    mat-mini-fab\n    color=\"basic\" \n    class=\"mat-elevation-z0\"\n    matTooltip=\"{{ 'Details' | translate }}\"\n    (click)=\"openLoanDetailsDialog($event)\">\n        <i class=\"material-icons\">remove_red_eye</i>\n</button>","import { Component, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { environment } from 'src/environments/environment';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-button-order-report',\n  templateUrl: './button-order-report.component.html',\n  styleUrls: ['./button-order-report.component.css']\n})\nexport class ButtonOrderReportComponent implements OnInit, ICellRendererAngularComp {\n  data: any;\n  \n  constructor(\n    private ordersService: OrdersService\n  ) { }\n\n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n  }\n\n  refresh(params: ICellRendererParams<any, any>): boolean {\n    return false;\n  }\n\n  ngOnInit(): void {\n  }\n\n  getReport() {\n    this.ordersService.getOrderPdfPromise(this.data.id).subscribe(\n      (res: any) => {\n        if(res[0] == \"KO\"){\n          console.error(\"Error retrieving report for order \" + this.data.id);\n        }\n        else{\n          window.open(environment.reportPath + res[1][0].filename, \"_blank\");\n        }\n      }\n    );\n  }\n}\n","<button\nmat-mini-fab\nclass=\"mat-elevation-z0\"\ncolor=\"warn\"\nmatTooltip=\"{{'View report' | translate}}\"\n(click)=\"getReport()\"\n>\n    <i class=\"material-icons\">picture_as_pdf</i>\n</button>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { environment, Forecast, Order, OrderRow, Product, User } from 'src/environments/environment';\nimport { EditOrderDialogComponent } from '../edit-order-dialog/edit-order-dialog.component';\nimport { ForecastService } from '../forecast.service';\nimport { OrdersService } from '../orders.service';\nimport { PharmaRegistryService } from '../pharma-registry.service';\nimport { SuppliesComponent } from '../supplies/supplies.component';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-button-supply-details',\n  templateUrl: './button-supply-details.component.html',\n  styleUrls: ['./button-supply-details.component.css']\n})\nexport class ButtonSupplyDetailsComponent implements OnInit, ICellRendererAngularComp{\n  data: any;\n  orderRows: OrderRow[] = [];\n  users: User[] = [];\n  products: Product[] = [];\n  forecasts: Forecast[] = [];\n  dialogRef: any;\n  dialog: MatDialog;\n\n  currentOrder: Order = {\n    id: '',\n    anno: 0,\n    mese: 0,\n    username: '',\n    d_ordine: '',\n    n_ordine: 0,\n    b_urgente: false,\n    b_extra: false,\n    b_validato: false,\n    d_validato: 'string', //data di validazione dell'ordine\n    note: '',\n    status: \"\",\n    d_consegna_prevista: \"0000-00-00\",\n    n_ddt: \"\",\n    d_ddt: \"\",\n    note_consegna: \"\",\n    b_prestito: false,\n    id_ordine_prestito: \"\",\n    username_prestito_a: \"\",\n    username_prestito_da: \"\"\n  };\n\n  constructor(\n    dialog: MatDialog,\n    private usersService: UsersService,\n    private pharmaRegistryService: PharmaRegistryService,\n    private ordersService: OrdersService,\n    private forecastService: ForecastService\n  ) {\n    this.dialog = dialog;\n   }\n\n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n    //console.log(this.data);\n    \n    this.listOrderRows(this.data.id);\n    this.listProducts();\n    this.listUsers();\n    if(environment.globalForecasts.length == 0) {\n      this.forecastService.getForecastsGlobally(this.data.anno);\n    }\n    //console.log(environment.globalForecasts);\n  }\n\n  refresh(params: ICellRendererParams<any, any>): boolean {\n    return false;\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  listOrderRows(id: string) {\n    this.ordersService.listOrderRowsPromise(id).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.orderRows = res[1];\n        }\n        else {\n          console.error(\"Error retrieving OrderRows!\");\n        }\n      }\n    );\n  }\n\n\n  listProducts() {\n    this.pharmaRegistryService.listProductsPromise().subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.products = res[1];\n        }\n        else {\n          console.error(\"Error retrieving products!\");\n        }\n      }\n    );\n  }\n\n  listUsers() {\n    this.usersService.listUsersPromise(\"210\").subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.users = res[1];\n        }\n        else {\n          console.error(\"Error retrieving users!\");\n        }\n      }\n    );\n  }\n\n  assignOrderData() {\n    this.currentOrder.id = this.data.id;\n    this.currentOrder.anno = this.data.anno;\n    this.currentOrder.b_extra = this.data.extra;\n    this.currentOrder.b_urgente = this.data.b_urgente;\n    this.currentOrder.b_validato = this.data.b_validato;\n    this.currentOrder.d_ordine = this.data.d_ordine;\n    this.currentOrder.d_validato = this.data.d_validato;\n    this.currentOrder.n_ordine = this.data.n_ordine;\n    this.currentOrder.note = this.data.note;\n    this.currentOrder.username = this.data.username;\n    this.currentOrder.n_ddt = this.data.n_ddt;\n    this.currentOrder.d_ddt = this.data.d_ddt;\n    this.currentOrder.d_consegna_prevista = this.data.d_consegna_prevista;\n    this.currentOrder.note_consegna = this.data.note_consegna;\n  }\n\n  openEditOrderDialog(event: Event) {\n    this.assignOrderData();\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      order: this.currentOrder,\n      orderRows: this.orderRows,\n      users: this.users,\n      products: this.products,\n      isLocked: true,\n      forecasts: this.forecasts,\n      status: this.data.status\n    }\n\n    dialogConfig.width = \"95%\";\n    dialogConfig.maxHeight = \"500px\";\n\n    dialogConfig.disableClose = false;\n    this.dialogRef = this.dialog.open(\n      EditOrderDialogComponent, \n      dialogConfig\n    );\n  }\n}\n","<button \n    mat-mini-fab\n    color=\"basic\"\n    class=\"mat-elevation-z0\"\n    matTooltip=\"{{ 'View' | translate }}\"\n    (click)=\"openEditOrderDialog($event)\">\n        <i class=\"material-icons\">remove_red_eye</i>\n</button>","import { Component, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { OrdersService } from '../orders.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-button-supply-report',\n  templateUrl: './button-supply-report.component.html',\n  styleUrls: ['./button-supply-report.component.css']\n})\nexport class ButtonSupplyReportComponent implements OnInit, ICellRendererAngularComp {\n\n  data: any;\n\n  constructor(\n    private suppliesService: OrdersService\n  ) { }\n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n  }\n  refresh(params: ICellRendererParams<any, any>): boolean {\n    return false;\n  }\n\n  ngOnInit(): void {\n  }\n\n  getSupplyReport(orderID: string) {\n    this.suppliesService.getSupplyResumePromise(orderID).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          //console.log(res[1][0].filename);\n          window.open(environment.reportPath + res[1][0].filename, \"_blank\");\n        }\n        else {\n          console.error(\"Error retrieving supply report for order with id: \" + orderID + \".\");\n        }\n      }\n    );\n  }\n}\n","<button\nmat-mini-fab\nclass=\"mat-elevation-z0\"\nstyle=\"background-color: #1D6F42;\"\nmatTooltip=\"{{'Download report' | translate}}\"\n(click)=\"getSupplyReport(data.id)\"\n>\n    <i class=\"material-icons\">grid_on</i>\n</button>","import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community'\nimport { environment, translations } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-cell-checkbox',\n  templateUrl: './cell-checkbox.component.html',\n  styleUrls: ['./cell-checkbox.component.css']\n})\nexport class CellCheckboxComponent implements ICellRendererAngularComp {\n  data: any;\n  currentValue: any;\n  headerName: string | undefined = '';\n  checked: boolean = false;\n  isLocked!: boolean;\n  constructor(private snackbar: MatSnackBar) { \n  }\n\n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n    //console.log(this.data);\n    this.currentValue = params.value;\n    this.headerName = params.colDef?.headerName;\n    this.isLocked = params.data.isRowLocked;\n    \n    //console.log(params);\n    if(this.currentValue == 1)\n      this.checked = true;\n/*\n    switch(this.data.status){\n      default:\n        case \"inviato al fornitore\":\n          break;\n        this.isLocked = false;\n        break;\n    }\n    */\n  }\n\n  refresh(params: ICellRendererParams<any, any>): boolean {\n    return false;\n  }\n\n  onValueChange(event: any) {\n    this.snackbar.open(environment.currentLanguage == \"it\" ? translations.it.UpdateSuccessful : translations.en.UpdateSuccessful);\n  }\n\n  openSnackbar() {\n    this.snackbar.open(environment.currentLanguage == \"it\" ? translations.it.UpdateSuccessful : translations.en.UpdateSuccessful);\n  }\n\n  toggleCheckbox(event: any): void {\n    console.log(\"To be implemented!\");\n  }\n\n  getFormattedDate(date: Date): string {\n    let splitDate = date.toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 3);\n    \n    let day = splitDate[0];\n    let month = splitDate[1];\n    let year = splitDate[2];\n\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    return year + \"-\" + month + \"-\" + day;  \n  }\n}\n","<mat-checkbox\n[checked]=\"checked\"\n(change)=\"onValueChange($event)\"\n(click)=\"toggleCheckbox($event)\">\n</mat-checkbox>\n","import { Component, Inject } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-datepicker-products-dialog',\n  templateUrl: './datepicker-products-dialog.component.html',\n  styleUrls: ['./datepicker-products-dialog.component.css']\n})\nexport class DatepickerProductsDialogComponent {\n  date!: UntypedFormControl;\n  formattedDate!: string;\n  isSubmitted = false;\n  minDate!: Date;\n  maxDate!: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      date: string, \n      isValidoDa: boolean, \n      isValidoA: boolean,\n      isOrderDate: boolean,\n      isValidationDate: boolean,\n      isEstimatedDeliveryDate: boolean,\n      isDDTDate: boolean,\n      gg_min: string,\n      gg_max: string\n    },\n    private dialogRef: MatDialogRef<DatepickerProductsDialogComponent>,\n    public loginService: LoginService\n  ) {\n\n    console.log(data);\n    \n    this.date = new UntypedFormControl((data.date == null ? \"1970-01-01\" : data.date), Validators.required);\n    \n    console.log(this.date);\n\n    if(loginService.getUserCode() == '210' && data.isOrderDate){\n      var auxDate = new Date();\n      this.minDate = new Date(auxDate.getFullYear(), auxDate.getMonth(), parseInt(data.gg_min));\n      console.log(this.minDate);\n      \n      this.maxDate = new Date(auxDate.getFullYear(), auxDate.getMonth(), parseInt(data.gg_max));\n      console.log(this.maxDate);\n    }\n  }\n\n  onDateChange(event: any) {\n    //here it's better to keep the date type as Date because it's handled well by the datepicker\n    this.date = new UntypedFormControl(new Date(event.value), Validators.required);\n    this.formattedDate = this.getFormattedDate(this.date.value); \n  }\n\n  getFormattedDate(date: Date): string {\n    let splitDate = date.toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 3);\n    \n    let day = splitDate[0];\n    let month = splitDate[1];\n    let year = splitDate[2];\n\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    return year + \"-\" + month + \"-\" + day;  \n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    //console.log(\"date: \" + this.date.value);\n    //console.log(\"formatted date: \" + this.formattedDate);\n    \n    this.dialogRef.close(\n      {\n        date: this.formattedDate,\n        isValidoDa: this.data.isValidoDa,\n        isValidoA: this.data.isValidoA,\n        isOrderDate: this.data.isOrderDate,\n        isValidationDate: this.data.isValidationDate,\n        isEstimatedDeliveryDate: this.data.isEstimatedDeliveryDate,\n        isDDTDate: this.data.isDDTDate,\n        isSubmitted: this.isSubmitted\n      }\n    )\n  }\n}\n","<div>\n    <h2>Edit date</h2>\n    <!--sangueadmin in PharmaRegistry-->\n    <mat-form-field \n    *ngIf=\"loginService.getUserCode() == '200'\"\n    appearance=\"fill\">\n        <mat-label>{{ 'Edit date' | translate }}</mat-label>\n        <input \n        matInput \n        [value]=\"date.value\"\n        [matDatepicker]=\"picker\"\n        (dateChange)=\"onDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <!--sangueasl in OrdersComponent-->\n    <mat-form-field \n    *ngIf=\"loginService.getUserCode() == '210' && !data.isOrderDate\"\n    appearance=\"fill\">\n        <mat-label>{{ 'Edit date' | translate }}</mat-label>\n        <input \n        matInput \n        [matDatepicker]=\"picker\" \n        [value]=\"date.value\"\n        [min]=\"minDate\"\n        (dateChange)=\"onDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    \n    <!--sangueasl in OrdersComponent-->\n    <mat-form-field\n    *ngIf=\"loginService.getUserCode() == '210' && data.isOrderDate\"\n    appearance=\"fill\">\n        <mat-label>{{ 'Edit date' | translate }}</mat-label>\n        <input \n        matInput \n        [matDatepicker]=\"picker\" \n        [value]=\"date.value\"\n        [min]=\"minDate\"\n        [max]=\"maxDate\"\n        (dateChange)=\"onDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field\n    *ngIf=\"loginService.getUserCode() == '220' && data.isOrderDate\"         \n    appearance=\"fill\">\n        <mat-label>{{ 'Edit date' | translate }}</mat-label>\n        <input \n        matInput \n        [matDatepicker]=\"picker\" \n        [value]=\"date.value\"\n        (dateChange)=\"onDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field\n    *ngIf=\"loginService.getUserCode() == '220' && data.isValidationDate\"\n    appearance=\"fill\">\n        <mat-label>{{ 'Edit date' | translate }}</mat-label>\n        <input \n        matInput \n        [matDatepicker]=\"picker\" \n        [value]=\"date.value\"\n        (dateChange)=\"onDateChange($event)\">\n        <!--mat-hint>MM/DD/YYYY</mat-hint-->\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field \n    *ngIf=\"loginService.getUserCode() == '230'\"\n    appearance=\"fill\">\n        <mat-label>{{ 'Edit date' | translate }}</mat-label>\n        <input \n        matInput \n        [value]=\"date.value\"\n        [matDatepicker]=\"picker\"\n        (dateChange)=\"onDateChange($event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <div mat-dialog-actions align=\"center\">\n        <button \n        mat-mini-fab \n        color=\"primary\" \n        matTooltip=\"{{ 'Submit' | translate }}\"\n        (click)=\"onSubmit()\">\n            <i class=\"material-icons\">check</i>\n        </button>\n        <button \n        mat-mini-fab\n        color=\"accent\"\n        matTooltip=\"{{ 'Cancel' | translate }}\" \n        mat-dialog-close>\n            <i class=\"material-icons\">close</i>\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { OrderDdtService } from '../order-ddt.service';\nimport { OrderDdtUploadDialogComponent } from '../order-ddt-upload-dialog/order-ddt-upload-dialog.component';\nimport { SnackbarService } from '../snackbar.service';\nimport { FileDownloadService } from '../file-download.service';\nimport { environment, translations } from 'src/environments/environment';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-ddt-order-actions',\n  templateUrl: './ddt-order-actions.component.html',\n  styleUrls: ['./ddt-order-actions.component.css']\n})\nexport class DdtOrderActionsComponent implements OnInit, ICellRendererAngularComp{\n  data: any; \n  documentIsPresent: boolean = false;\n  stateIsValid: boolean = false;\n  fileExists: boolean = false;\n  uploadEnabled: boolean = false;\n\n  dialogRef: any;\n  dialog: MatDialog;\n  \n  constructor(\n    dialog: MatDialog,\n    private orderDdtService: OrderDdtService,\n    private snackbarService: SnackbarService,\n    private fileDownloadService: FileDownloadService,\n    public loginService: LoginService,\n  ) {\n    this.dialog = dialog;\n  }\n  \n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n    //this.print(this.data);\n    this.isStateValid();\n    this.doesFileExist(this.data.id);\n  }\n  \n  refresh(params: ICellRendererParams<any, any>): boolean {\n    return false;\n  }\n\n  ngOnInit(): void {\n  }\n\n  getOrderDdt(orderID: string) {\n    this.orderDdtService.getOrderDdtPromise(orderID).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          //console.log(res[1][res[1].length -1]); //take last file uploaded, with index res[1].length -1\n          let filename = res[1][res[1].length -1].filename;\n          let filebase64 = res[1][res[1].length -1].filebase64;\n          //console.log(\"filename: \" + filename);\n          //console.log(\"filebase64: \" + filebase64);\n          this.fileDownloadService.downloadPdfFromBase64(filename, filebase64);\n          this.snackbarService.openSnackbar(environment.currentLanguage == \"it\" ? translations.it.FileDownloadHasStarted : translations.en.FileDownloadHasStarted);\n        }\n        else {\n          console.error(\"Error retrieving orderDDT document for order with ID = \" + orderID + \"!\");\n        }\n      }\n    );\n  }\n\n  doesFileExist(orderID: string) {\n    this.orderDdtService.getOrderDdtPromise(orderID).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          if(res[1].length > 0) {\n            this.fileExists = true;\n          }\n        }\n        else {\n          console.error(\"Error checking orderDdt file existence!\");\n        }\n      }\n    )\n  }\n\n  //to be called when the dialog closes\n  /*setOrderDDT(orderID: string, filename: string, filebase64: string) {\n    this.orderDdtService.setOrderDdtPromise(orderID, filename, filebase64).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          console.log(res);\n        }\n        else {\n          console.error(\"Error uploading orderDDT document for order with ID = \" + orderID + \"!\");\n        }\n      }\n    );\n  }*/\n\n  isStateValid() {\n    switch(this.data.status){\n      \n      case \"inviato al cliente\":\n      \n      case \"ricevuto\":\n        this.uploadEnabled = true;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  openEditOrderDialog(event: Event) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      orderID: this.data.id,\n      orderNo: this.data.n_ordine,\n    }\n\n    dialogConfig.maxWidth = \"50%\";\n    dialogConfig.maxHeight = \"50%\";\n\n    dialogConfig.disableClose = false;\n    this.dialogRef = this.dialog.open(\n      OrderDdtUploadDialogComponent, \n      dialogConfig\n    );\n  }\n\n\n}\n","<div>\n    <button \n    *ngIf=\"loginService.getUserCode() == '220' || loginService.getUserCode() == '210'\"\n    mat-mini-fab\n    style=\"margin-right: 5px;\"\n    color=\"basic\"\n    class=\"mat-elevation-z0\"\n    matTooltip=\"{{ 'Upload document' | translate }}\"\n    (click)=\"openEditOrderDialog($event)\"\n    disabled=\"{{!uploadEnabled}}\">\n        <i class=\"material-icons\">file_upload</i>\n    </button>\n\n    <!--TODO: view file without downloading it -->\n    <!--button \n    mat-mini-fab\n    style=\"margin-right: 5px;\"\n    color=\"basic\"\n    class=\"mat-elevation-z0\"\n    matTooltip=\"{{ 'View' | translate }}\"\n    (click)=\"print($event)\">\n        <i class=\"material-icons\">document_scanner</i>\n    </button-->\n\n    <button \n    *ngIf=\"true\"\n    mat-mini-fab\n    color=\"basic\"\n    class=\"mat-elevation-z0\"\n    matTooltip=\"{{ 'Download document' | translate }}\"\n    (click)=\"getOrderDdt(this.data.id)\"\n    disabled=\"{{!this.fileExists}}\">\n        <i class=\"material-icons\">download</i>\n    </button>\n</div>\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[appDragNDrop]'\n})\nexport class DragNDropDirective {\n\n  @Output() onFileDropped = new EventEmitter<any>();\n  \n  constructor() { }\n\n  //drag-over listener\n  @HostListener('dragover', ['$event']) onDragOver(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  //drag-leave\n  @HostListener('dragleave', ['$event'])\n  public onDragLeave(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  //drag-drop\n  @HostListener('drop', ['$event'])\n  public onDrop(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    //let files = event.dataTransfer.files;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Injectable, OnInit} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { environment } from 'src/environments/environment';\nimport { PharmaRegistryService } from '../pharma-registry.service';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs';\nimport { ForecastService } from '../forecast.service';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-dropdown-products-forecast',\n  templateUrl: './dropdown-products-forecast.component.html',\n  styleUrls: ['./dropdown-products-forecast.component.css'],\n  providers: [PharmaRegistryService]\n})\nexport class DropdownProductsForecastComponent implements ICellRendererAngularComp, OnInit {\n\n  pharmaRegistryUrl: string = environment.basePath + 'anag.php';\n  forecastsUrl: string = environment.basePath + 'forecasts.php';\n  loginService!: LoginService;\n\n  data: any;\n  value: any;\n  products: any = [];\n  productNames: string[] = [];\n  productName: string = '';\n\n  //sample array\n  options: string[] = [];\n  filteredOptions: Observable<string[]> | undefined;\n  formControl!: UntypedFormControl;\n\n  loading: boolean = false;\n\n  constructor(\n    loginService: LoginService,\n    private forecastService: ForecastService,\n    private pharmaRegistryService: PharmaRegistryService\n  ) { \n    //this.getProducts();\n    this.products = environment.globalProducts;\n    this.getProductNames();\n    this.options = this.productNames;\n    this.loginService = loginService;\n  }\n\n  ngOnInit(): void {\n    //any time the array of filtered options changes (starting with\n    //an empty string), _filter() is called on that value\n    this.filteredOptions = this.formControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n    this.value = params.value; //product id\n\n    //adapt dropdown to user type\n    switch(this.loginService.getUserCode()){\n      case \"210\":\n        this.formControl = new UntypedFormControl({value: this.productName, disabled: this.data.qta_approvata != 0});\n        break;\n      case \"220\":\n        this.formControl = new UntypedFormControl({value: this.productName, disabled: true});\n        break;\n    }\n\n    this.assignProductName();\n  }\n\n  refresh(params: ICellRendererParams<any, any>): boolean {\n    //default return\n    return false;\n  }\n\n  //this method has to be called into ngOnInit, as it must be called anytime\n  //the code is compiled\n  private _filter(value: string){\n    //we take a string value and turn it to lower case\n    const filterValue = value.toLowerCase();\n    //then we cycle on the \"options\" array and, if one element includes the string\n    //typed so far, we return it\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  //OK\n  getProductNames(): void {\n    for(let i = 0; i < this.products.length; ++i){\n      this.productNames.push(this.products[i].des);\n    }\n  }\n\n  //non dovrebbe più servire\n  getProducts(): void{\n    this.loading = true;\n    this.pharmaRegistryService.listProductsPromise().subscribe(res => {\n      if(res[0] == \"KO\"){\n        console.error(\"Error retrieving products!\");\n      }\n      else{\n        this.products = res[1];\n        this.getProductNames();\n        this.assignProductName();\n        this.loading = false;\n      }\n    });\n  }\n\n  assignProductName(): void {\n    for(let i = 0; i < this.products.length; ++i){\n      if(this.data.id_prd == this.products[i].id){\n        this.productName = this.products[i].des;\n        this.formControl.setValue(this.productName);\n        return;\n      }\n    }\n  }\n\n  onOptionSelected(event: any) {\n    if(event.source._selected){\n      let productId = this.getProductId(event);\n        this.forecastService.setForecast(\n          this.data.id,\n          this.data.anno,\n          this.data.username,\n          productId,\n          this.data.qta,\n          this.data.note,\n          this.data.qta_approvata,\n          this.data.costo_unitario,\n          this.data.isAdding\n        );\n    }\n  }\n\n  getProductId(event: any){\n    for(let i = 0; i < this.products.length; ++i){\n      if(this.products[i].des == event.source.value){\n        return this.products[i].id;\n      }\n    }\n  }\n}\n","<form>\n  <mat-spinner\n  [diameter]=\"30\"\n  *ngIf=\"loading\"></mat-spinner>\n\n  <mat-form-field\n  style=\"width: 100%;\">\n    <input \n      type=\"text\" \n      [matAutocomplete]=\"auto\" \n      [formControl]=\"formControl\"\n      value={{this.productName}}\n      matInput>\n    <mat-autocomplete #auto=\"matAutocomplete\">\n      <mat-option \n        *ngFor=\"let option of filteredOptions | async\" \n        [value]=\"option\"\n        (onSelectionChange)='onOptionSelected($event)'>\n        {{ option }}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs';\nimport { ForecastService } from '../forecast.service';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-dropdown-users-forecast',\n  templateUrl: './dropdown-users-forecast.component.html',\n  styleUrls: ['./dropdown-users-forecast.component.css'],\n})\nexport class DropdownUsersForecastComponent implements ICellRendererAngularComp, OnInit {\n\n  pharmaRegistryUrl: string = environment.basePath + 'anag.php';\n  forecastsUrl: string = environment.basePath + 'forecasts.php';\n  //loginService!: LoginService;\n\n  data: any;\n  value: any;\n  users: any = [];\n  userNames: string[] = [];\n  userName: string = '';\n\n  //sample array\n  options: string[] = [];//['Delhi', 'Mumbai', 'Banglore'];\n  filteredOptions: Observable<string[]> | undefined;\n  formControl!: UntypedFormControl;\n\n\n  loading: boolean = false;\n\n  //constructor is called when cells are hidden and then re-displayed\n  constructor(\n    private loginService: LoginService,\n    private forecastService: ForecastService,\n    private http: HttpClient,\n  ) { \n    \n    //retrieve product names\n    //this.getUsers('210');\n    \n    this.users = environment.globalUsers;\n    this.getUserNames();\n    //this.assignUserName();\n    \n    this.options = this.userNames;\n    //this.loginService = loginService;  \n  }\n\n  ngOnInit(): void {\n    //any time the array of filtered options changes (starting with\n    //an empty string), _filter() is called on that value\n    this.filteredOptions = this.formControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n    this.value = params.value; //user id\n\n    //adapt dropdown to user type\n    switch(this.loginService.getUserCode()){\n      case \"210\":\n        this.formControl = new UntypedFormControl({value: this.userName, disabled: true});\n        break;\n      case \"220\":\n        this.formControl = new UntypedFormControl({value: this.userName, disabled: false});\n        break;\n    }  \n\n    this.assignUserName();\n  }\n\n  refresh(params: ICellRendererParams<any, any>): boolean {\n    //default return\n    return false;\n  }\n\n  //this method has to be called into ngOnInit, as it must be called anytime\n  //the code is compiled\n  private _filter(value: string){\n    //we take a string value and turn it to lower case\n    const filterValue = value.toLowerCase();\n    \n    //then we cycle on the \"options\" array and, if one element includes the string\n    //typed so far, we return it\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  //OK\n  getUserNames(): void {\n    for(let i = 0; i < this.users.length; ++i){\n      this.userNames.push(this.users[i].client);\n    }\n  }\n\n  //non dovrebbe più servire\n  getUsers(userlevel: string): void{\n    let path = this.pharmaRegistryUrl + '?request=listUsers&id_session='+localStorage.getItem('id_session')+'&userlevel='+userlevel;\n    //console.log(path);\n    this.loading = true;\n    this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    ).subscribe(res => {\n      if(res[0] == \"KO\"){\n        alert(\"Error retrieving products!\");\n      }\n      else{\n        this.users = res[1];\n        this.getUserNames();\n        this.assignUserName();\n        this.loading = false;\n      }\n    });\n  }\n\n  assignUserName(): void {\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.data.username == this.users[i].id){\n        this.userName = this.users[i].client;\n        this.formControl.setValue(this.userName);\n        return;\n      }\n    }\n  }\n\n  onOptionSelected(event: any) {\n    if(event.source._selected){\n      let userId = this.getUserId(event);\n        //perform call to update db\n        this.forecastService.setForecast(\n          this.data.id,\n          this.data.anno,\n          userId,\n          this.data.id_prd,\n          this.data.qta,\n          this.data.note,\n          this.data.qta_approvata,\n          this.data.costo_unitario,\n          this.data.isAdding\n        );\n    }\n  }\n\n  getUserId(event: any){\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.users[i].client == event.source.value){\n        return this.users[i].id;\n      }\n    }\n  }\n}\n","<form>\n  <mat-spinner\n  [diameter]=\"30\"\n  *ngIf=\"loading\"></mat-spinner>\n\n  <mat-form-field\n  style=\"width: 100%;\">\n    <input \n      type=\"text\" \n      [matAutocomplete]=\"auto\" \n      [formControl]=\"formControl\"\n      value={{this.userName}}\n      matInput>\n    <mat-autocomplete #auto=\"matAutocomplete\">\n      <mat-option \n        *ngFor=\"let option of filteredOptions | async\" \n        [value]=\"option\"\n        (onSelectionChange)='onOptionSelected($event)'>\n        {{ option }}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { map, Observable, startWith } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from '../login.service';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-dropdown-users-orders-component',\n  templateUrl: './dropdown-users-orders-component.component.html',\n  styleUrls: ['./dropdown-users-orders-component.component.css']\n})\nexport class DropdownUsersOrdersComponentComponent implements ICellRendererAngularComp, OnInit {\n\n  pharmaRegistryUrl: string = environment.basePath + 'anag.php';\n\n  data: any;\n  value: any;\n  users: any = [];\n  userNames: string[] = [];\n  userName: string = '';\n\n  //sample array\n  options: string[] = [];\n  filteredOptions: Observable<string[]> | undefined;\n  formControl!: UntypedFormControl;\n  \n  constructor(\n    private loginService: LoginService,\n    private ordersService: OrdersService,\n    private http: HttpClient\n  ) { \n\n  }\n  \n  agInit(params: ICellRendererParams<any, any>): void {\n      \n  }\n  \n  refresh(params: ICellRendererParams<any, any>): boolean {\n    return false;\n  }\n\n  ngOnInit(): void {\n    this.filteredOptions = this.formControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n  \n  private _filter(value: string){\n    //we take a string value and turn it to lower case\n    const filterValue = value.toLowerCase();\n    \n    //then we cycle on the \"options\" array and, if one element includes the string\n    //typed so far, we return it\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  getUsers(userlevel: string): void{\n    let path = this.pharmaRegistryUrl + '?request=listUsers&id_session='+localStorage.getItem('id_session')+'&userlevel='+userlevel;\n    //console.log(path);\n    \n    this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    ).subscribe(res => {\n      if(res[0] == \"KO\"){\n        alert(\"Error retrieving products!\");\n      }\n      else{\n        this.users = res[1];\n        this.getUserNames();\n        this.assignUserName();\n      }\n    });\n  }\n\n  assignUserName(): void {\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.data.username == this.users[i].id){\n        this.userName = this.users[i].client;\n        return;\n      }\n    }\n  }\n\n  onOptionSelected(event: any) {\n    if(event.source._selected){\n      let userId = this.getUserId(event);\n        //perform call to update db\n        let updatedOrder = {\n          id: this.data.id,\n          anno: this.data.anno,\n          username: userId,\n          d_ordine: this.data.d_ordine,\n          n_ordine: this.data.n_ordine,\n          b_urgente: this.data.b_urgente,\n          b_extra: this.data.b_extra,\n          b_validato: this.data.b_validato,\n          d_validato: this.data.d_validato,\n          note: this.data.note\n        }\n        //this.ordersService.setOrder(updatedOrder, false);\n    }\n  }\n\n  getUserId(event: any){\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.users[i].client == event.source.value){\n        return this.users[i].id;\n      }\n    }\n  }\n\n  getUserNames(): void {\n    for(let i = 0; i < this.users.length; ++i){\n      this.userNames.push(this.users[i].client);\n    }\n  }\n}\n","<p>dropdown-users-orders-component works!</p>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { map, Observable, startWith } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from '../login.service';\nimport { OrdersService } from '../orders.service';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-dropdown-users-orders-component',\n  templateUrl: './dropdown-users-orders.component.html',\n  styleUrls: ['./dropdown-users-orders.component.css']\n})\nexport class DropdownUsersOrdersComponent implements ICellRendererAngularComp, OnInit {\n\n  pharmaRegistryUrl: string = environment.basePath + 'anag.php';\n\n  data: any;\n  value: any;\n  users: any = [];\n  userNames: string[] = [];\n  userName: string = '';\n\n  isLocked!: boolean;\n  loading: boolean = false;\n  //sample array\n  options: string[] = [];\n  filteredOptions: Observable<string[]> | undefined;\n  formControl!: UntypedFormControl;\n  \n  constructor(\n    private loginService: LoginService,\n    private usersService: UsersService,\n    private ordersService: OrdersService,\n    private http: HttpClient\n  ) { \n    //this.listUsers('210');\n    //adapt dropdown to user type\n    this.users = environment.globalUsers;\n    this.getUserNames();\n    this.options = this.userNames;\n    \n  }\n  \n  agInit(params: ICellRendererParams<any, any>): void {\n    this.data = params.data;\n    this.value = params.value;\n\n    this.isLocked = this.data.isRowLocked;\n    \n    switch(this.loginService.getUserCode()){\n      case \"210\":\n        this.formControl = new UntypedFormControl({value: this.userName, disabled: this.isLocked});\n        break;\n      case \"220\":\n        this.formControl = new UntypedFormControl({value: this.userName, disabled: this.isLocked});\n        break;\n    }\n\n    this.assignUserName();\n  }\n  \n  refresh(params: ICellRendererParams<any, any>): boolean {\n    return false;\n  }\n\n  ngOnInit(): void {\n    this.filteredOptions = this.formControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n  \n  private _filter(value: string){\n    //we take a string value and turn it to lower case\n    const filterValue = value.toLowerCase();\n    \n    //then we cycle on the \"options\" array and, if one element includes the string\n    //typed so far, we return it\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n  \n  listUsers(userlevel: string) {\n    this.loading = true;\n    this.usersService.listUsersPromise(userlevel)\n    .subscribe(res => {\n      if(res[0] == \"KO\"){\n        alert(\"Error retrieving products!\");\n      }\n      else{\n        //console.log(\"listUsers response received\");\n        this.users = res[1];\n        this.getUserNames();\n        this.options = this.userNames;\n        this.assignUserName();\n        this.loading = false;\n      }\n    });\n  }\n\n  assignUserName(): void {\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.data.username == this.users[i].id){\n        this.userName = this.users[i].client;\n        this.formControl.setValue(this.userName);\n        return;\n      }\n    }\n  }\n\n  onOptionSelected(event: any) {\n    if(event.source._selected){\n      let userId = this.getUserId(event);\n        //perform call to update db\n        let updatedOrder = {\n          id: this.data.id,\n          anno: this.data.anno,\n          mese: this.data.mese,\n          username: userId,\n          d_ordine: this.data.d_ordine,\n          n_ordine: this.data.n_ordine,\n          b_urgente: this.data.b_urgente,\n          b_extra: this.data.b_extra,\n          b_validato: this.data.b_validato,\n          d_validato: this.data.d_validato,\n          note: this.data.note,\n          status: this.data.status,\n          d_consegna_prevista: this.data.d_consegna_prevista,\n          n_ddt: this.data.n_ddt,\n          d_ddt: this.data.d_ddt,\n          note_consegna: this.data.note_consegna,\n          b_prestito: this.data.b_prestito,\n          id_ordine_prestito: this.data.id_ordine_prestito,\n          username_prestito_a: this.data.username_prestito_a,\n          username_prestito_da: this.data.username_prestito_da\n        }\n        this.ordersService.setOrder(updatedOrder, false);\n        /*.subscribe(\n          res => {\n            if(res[0] == \"OK\") {\n              //also set updatedOrder.username to all orderRows with\n              console.log(\"ok!\");\n              //TODO\n            }\n          }\n        );\n        */\n    }\n  }\n\n  getUserId(event: any){\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.users[i].client == event.source.value){\n        return this.users[i].id;\n      }\n    }\n  }\n\n  getUserNames(): void {\n    for(let i = 0; i < this.users.length; ++i){\n      this.userNames.push(this.users[i].client);\n    }\n  }\n}\n","<form>\n    <mat-spinner\n    align=\"center\"\n    [diameter]=\"20\"\n    *ngIf=\"loading\"></mat-spinner>\n\n    <mat-form-field\n    style=\"width: 100%;\">\n      <input \n        type=\"text\" \n        [matAutocomplete]=\"auto\" \n        [formControl]=\"formControl\"\n        value={{this.userName}}\n        matInput>\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option \n          *ngFor=\"let option of filteredOptions | async\" \n          [value]=\"option\"\n          (onSelectionChange)='onOptionSelected($event)'>\n          {{ option }}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { CellClickedEvent, GetRowIdFunc, GetRowIdParams, GridApi } from 'ag-grid-community';\nimport { Forecast, Order, OrderRow, OrderRowGridRowData, OrderStatus, Product } from 'src/environments/environment';\nimport { defaultColDef, gridConfigOrderRows } from 'src/environments/grid-configs';\nimport { AddOrderRowComponent } from '../add-order-row/add-order-row.component';\nimport { AreYouSureOrderRowComponent } from '../are-you-sure-order-row/are-you-sure-order-row.component';\nimport { AreYouSureOrderComponent } from '../are-you-sure-order/are-you-sure-order.component';\nimport { EditOrderRowComponent } from '../edit-order-row/edit-order-row.component';\nimport { LoginService } from '../login.service';\nimport { OrdersService } from '../orders.service';\nimport { SnackbarService } from '../snackbar.service';\nimport { OrdersValidatedDialogComponent } from '../orders-validated-dialog/orders-validated-dialog.component';\n\n@Component({\n  selector: 'app-edit-order-dialog',\n  templateUrl: './edit-order-dialog.component.html',\n  styleUrls: ['./edit-order-dialog.component.css']\n})\nexport class EditOrderDialogComponent implements OnInit {\n\n  annoFormControl!: UntypedFormControl;\n  dOrdineFormControl!: UntypedFormControl;\n  nOrdineFormControl!: UntypedFormControl;\n  urgenteFormControl!: UntypedFormControl;\n  extraFormControl!: UntypedFormControl;\n  validatoFormControl!: UntypedFormControl;\n  dValidatoFormControl!: UntypedFormControl;\n  noteFormControl!: UntypedFormControl;\n\n  order!: Order;\n  orderRows: OrderRow[] = [];\n  orderRowGridRowData: OrderRowGridRowData[] = [];\n  users: any = [];\n  products: any = [];\n  forecasts: Forecast[] = [];\n\n  dialogRef!: any;\n  dialog!: MatDialog;\n\n  isLocked!: boolean;\n  qtaRicevuta: number[] = [];\n  isValidated!: boolean;\n\n  userCode!: string;\n\n  //agGrid config\n  orderRowsGridConfig!: any;\n  defaultColDef: any = defaultColDef;\n  gridOptions: any;\n  public getRowId: GetRowIdFunc = (params: GetRowIdParams) => {\n    return params.data.id;\n  };\n\n  //agGrid API handles\n  @ViewChild(AgGridAngular) agGrid!: AgGridAngular;\n  gridApi!: GridApi;\n  api: any;\n  columnApi: any;\n  displayedColumnsASL: string[] = ['n_riga', 'product', 'qta', 'max_mese', 'motivazione', 'qta_validata', 'qta_ricevuta', 'note', 'edit', 'delete'];\n  displayedColumnsSUP: string[] = ['n_riga', 'product', 'qta', 'motivazione', 'qta_validata', 'qta_ricevuta',  'diff', 'note'];\n  displayedColumns: string[] = localStorage.getItem('sangue_username') == 'sanguefornitore' ? this.displayedColumnsSUP : this.displayedColumnsASL;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      order: Order,\n      orderRows: OrderRow[],\n      users: any,\n      products: Product[],\n      isLocked: boolean,\n      forecasts: Forecast[],\n      status: string\n    },\n    private _builder: UntypedFormBuilder,\n    dialog: MatDialog,\n    private thisDialogRef: MatDialogRef<AreYouSureOrderComponent>,\n    private ordersService: OrdersService,\n    private loginService: LoginService,\n    private snackbarService: SnackbarService\n  ) { \n    /*\n    this.annoFormControl = _builder.control(data.order.anno, Validators.required);\n    this.dOrdineFormControl = _builder.control(data.order.d_ordine, Validators.required);\n    this.nOrdineFormControl = _builder.control(data.order.n_ordine, Validators.required);\n    this.urgenteFormControl = _builder.control(data.order.b_urgente, Validators.required);\n    this.extraFormControl = _builder.control(data.order.b_extra, Validators.required);\n    this.validatoFormControl = _builder.control(data.order.b_validato, Validators.required);\n    this.dValidatoFormControl = _builder.control(data.order.d_validato, Validators.required);\n    this.noteFormControl = _builder.control(data.order.note); //not required\n    */\n    this.order = data.order;\n    this.orderRows = data.orderRows;\n    this.dialog = dialog;\n    this.users = data.users;\n    this.products = data.products;\n    this.forecasts = data.forecasts;\n    \n    //console.log(this.products);\n    \n    this.isLocked = data.isLocked;\n    this.isValidated = data.status != \"inviato\";\n    //console.log(\"isvalidated?\" + this.isValidated);\n\n    this.userCode = this.loginService.getUserCode()!;\n   \n    this.createOrderRowGridRowData();\n    //AgGrid initialization\n    this.orderRowsGridConfig = gridConfigOrderRows;\n    this.gridOptions = {\n      onCellClicked: (event: CellClickedEvent) => {\n        console.log(event);\n      },\n    }\n  }\n\n  onGridReady = (params: { api: any; columnApi: any; }) => {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n    this.api.setRowData(this.orderRows);\n    this.autoSizeColumns(false);\n    \n    //this.api.setDomLayout('autoHeight');\n  }\n\n  autoSizeColumns(skipHeader: boolean) {\n    const allColumnIds: string[] = [];\n    this.columnApi.getColumns()!.forEach((column: { getId: () => string; }) => {\n      allColumnIds.push(column.getId());\n    });\n    this.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n  }\n\n  ngOnInit(): void {\n    //console.log(this.order);\n    //console.log(this.orderRows);\n    //this.assignQtaRicevuta();\n  }\n\n  deleteOrderRowById(id: string) {\n    for(let i = 0; i < this.orderRows.length; ++i){\n      if(this.orderRows[i].id == id){\n        this.orderRows.splice(i, 1);\n        this.orderRowGridRowData.splice(i, 1);\n        this.ordersService.rmOrderRow(id);\n        this.createOrderRowGridRowData();\n        return;\n      }\n    }\n  }\n\n  assignQtaRicevuta() {\n    for(var i = 0; i < this.orderRows.length; ++i){\n      this.qtaRicevuta[i] = this.orderRows[i].qta_ricevuta;\n    }\n  }\n\n  onQtaRicevutaSet(orderRow: OrderRow, qtaRicevuta: number) {\n    if(qtaRicevuta >= 0){\n      console.log(orderRow);\n      orderRow.qta_ricevuta = qtaRicevuta;\n      console.log(\"new qta_ricevuta: \" + orderRow.qta_ricevuta);\n      this.setQtaRicevutaInOrderRowGridRowData(orderRow);\n      this.ordersService.setOrderRowPromise(orderRow, false).subscribe(\n        res => {\n          if(res[0] == \"OK\"){\n            let orderStatus: OrderStatus = {\n              id: \"0\",\n              username: localStorage.getItem('sangue_username')!,\n              id_order: orderRow.id_ordine,\n              d_status: this.getFormattedDate(new Date()),\n              status: \"ricevuto\",\n              note: \"Quantità ricevuta impostata a \" + orderRow.qta_ricevuta,\n              b_sto: false\n            }\n    \n            this.setOrderStatus(orderStatus);\n          }\n          else {\n            console.error(\"Error setting orderRow!\");\n          }\n        }\n      );\n    }\n    else {\n      qtaRicevuta = orderRow.qta_ricevuta;\n    }\n  }\n\n  setQtaRicevutaInOrderRowGridRowData(orderRow: OrderRow){\n    for(var i = 0; i < this.orderRowGridRowData.length; ++i) {\n      if(this.orderRowGridRowData[i].id == orderRow.id){\n        this.orderRowGridRowData[i].qta_ricevuta = orderRow.qta_ricevuta;\n        this.orderRowGridRowData[i].isQtaRicevutaSet = true;\n      }\n    }\n    //this.createOrderRowGridRowData();\n  }\n\n  getOrderRowById(id: string): OrderRow | undefined {\n    for(var i = 0; i < this.orderRows.length; ++i){\n      if(id == this.orderRows[i].id){\n        console.log(this.orderRows[i]);\n        return this.orderRows[i];\n      }\n    }\n    return undefined;\n  }\n\n  openAreYouSureOrderRowDialog(id: string) {\n    const dialogConfig = new MatDialogConfig();\n    //dialogConfig.autoFocus = true;\n    dialogConfig.data = { \n      id: id\n    }\n        \n    this.dialogRef = this.dialog.open(\n      AreYouSureOrderRowComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: { isSubmitted: boolean }) => {\n      if(result !== undefined && result.isSubmitted){\n        this.deleteOrderRowById(id);\n        \n        let orderStatus: OrderStatus = {\n          id: \"0\",\n          username: localStorage.getItem('sangue_username')!,\n          id_order: this.order.id,\n          d_status: this.getFormattedDate(new Date()),\n          status: \"inviato\",\n          note: \"eliminazione riga d'ordine\",\n          b_sto: false\n        }\n\n        this.setOrderStatus(orderStatus);\n      }\n    });\n  }\n\n  //works both for adding and for editing an orderRow\n  openEditOrderRowDialog(id: string, isAdding: boolean) {\n    const dialogConfig = new MatDialogConfig();\n    \n    //if id is not specified, create a new orderRow\n    if(id == \"\") {\n      let newOrderRow = {\n        id: \"\",\n        id_ordine: this.data.order.id,\n        username: this.data.order.username,\n        n_riga: \"\",\n        id_prd: \"\",\n        qta: 0,\n        motivazione: \"\",\n        qta_validata: 0,\n        note: \"\"\n      }\n      dialogConfig.data = {\n        orderRow: newOrderRow,\n        users: this.users,\n        products: this.products,\n        forecasts: this.forecasts,\n        orderRows: this.orderRows\n      }\n      console.log(\"Sending data: \")\n      console.log(dialogConfig.data);\n    }\n    else {\n      let editedOrderRow = this.getOrderRowById(id);\n      editedOrderRow!.username = this.data.order.username;       \n   \n      dialogConfig.data = {\n        orderRow: this.getOrderRowById(id),\n        users: this.users,\n        products: this.products,\n        forecasts: this.forecasts\n      }\n      console.log(\"Sending data: \")\n      console.log(dialogConfig.data);\n    }\n\n    \n    \n    this.dialogRef = this.dialog.open(\n      EditOrderRowComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: { \n        orderRow: OrderRow, \n        isSubmitted: boolean\n      }) => {\n        //confirm edits\n        //console.log(result);\n        \n        if(result !== undefined && result.isSubmitted){\n          console.log(result);\n          this.ordersService\n            .setOrderRowPromise(result.orderRow, isAdding)\n            .subscribe(\n              res => {\n                if(res[0] != \"KO\"){\n                  //console.log(res);\n                  let newOrderRow = result.orderRow;\n                  if(newOrderRow.id == \"\") {\n                    newOrderRow.id = res[1];\n                    this.orderRows.push(newOrderRow);\n                    this.createOrderRowGridRowData();\n                  }\n                  else {\n                    this.updateOrderRow(result.orderRow);\n                  }\n\n                  let orderStatus: OrderStatus = {\n                    id: \"0\",\n                    username: localStorage.getItem('sangue_username')!,\n                    id_order: result.orderRow.id_ordine,\n                    d_status: this.getFormattedDate(new Date()),\n                    status: \"inviato\",\n                    note: \"modifica riga d'ordine\",\n                    b_sto: false\n                  }\n          \n                  this.setOrderStatus(orderStatus);\n                  isAdding ? this.snackbarService.onCreate() : this.snackbarService.onUpdate();\n                }\n                else {\n                  console.error(\"Error setting orderRow!\");\n                }\n              }\n            );\n        }\n    });\n  }\n\n  /*\n  openAddOrderRowDialog() {\n    const dialogConfig = new MatDialogConfig();\n    //dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      order: this.data.order,\n      orderRows: this.orderRows, //array di orderRows\n      forecasts: this.forecasts \n    }\n        \n    this.dialogRef = this.dialog.open(\n      AddOrderRowComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: { isSubmitted: boolean }) => {\n      if(result !== undefined && result.isSubmitted){\n        console.log(result);\n      }\n    });\n  }\n  */\n\n  openAreYouSureOrderDialog(id: string) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = { id: id }\n        \n    this.dialogRef = this.dialog.open(\n      AreYouSureOrderComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: { order: Order, orderRows: OrderRow[], isSubmitted: boolean }) => {\n      if(result !== undefined && result.isSubmitted){\n        this.thisDialogRef.close({\n          orderId: id, \n          orderRows: this.orderRows, \n          isSubmitted: result.isSubmitted\n        });\n      }\n    });\n  }\n\n  productIdToDes(id: string): string {\n    for(var i = 0; i < this.products.length; ++i){\n      if(id == this.products[i].id) {\n        return this.products[i].des;\n      }\n    }\n    return \"\";\n  }\n\n  usernameToClient(username: string): string {    \n    for(var i = 0; i < this.users.length; ++i){\n      if(username == this.users[i].username) {\n        return this.users[i].client;\n      }\n    }\n    return \"\";\n  }\n\n  onClose(id: string) {\n    if(this.orderRows.length == 0){\n      this.thisDialogRef.close({\n        isClosing: true,\n        deleteOrder: true\n      });\n    }\n    else {\n      console.log(this.orderRows)\n      this.thisDialogRef.close({\n        orderRows: this.orderRows,\n        isClosing: true\n      });\n    }\n  }\n\n  getFormattedDate(date: Date): string {\n    let splitDate = date.toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 3);\n    \n    let day = splitDate[0];\n    let month = splitDate[1];\n    let year = splitDate[2];\n\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    return year + \"-\" + month + \"-\" + day;  \n  }\n\n  setOrderStatus(orderStatus: OrderStatus) {\n    this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          console.log(\"Status for order \" + orderStatus.id_order + \" successfully set!\");\n        }\n        else {\n          console.error(\"Error setting status for order \" + orderStatus.id_order);\n        }\n      }\n    );\n  }\n\n  openAreYouSureValidate() {      \n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      order: this.data.order,\n      status: this.data.status\n    }\n\n    dialogConfig.width = \"95%\";\n    dialogConfig.maxHeight = \"500px\";\n\n    if(this.data.status == \"inviato\")\n      dialogConfig.disableClose = true;\n    \n    //console.log(this.filteredForecasts);\n    \n    \n    this.dialogRef = this.dialog.open(\n      OrdersValidatedDialogComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: {\n        order: Order,  \n        isValidated: boolean,\n      }) => {\n      //console.log(result.order);\n        if(result !== undefined && result.isValidated){\n          //console.log(result);\n          this.validateOrder();\n        }\n      }\n    );\n  }\n\n  validateOrder(){\n    console.log(this.order);\n    //TODO: aprire qui dialogo di conferma di convalida dell'ordine\n    this.isValidated = true;\n       \n    //TODO: lanciare quanto segue nella onClose del dialogo precedente\n    \n    this.thisDialogRef.close({\n      order: this.order,\n      orderRows: this.orderRows,\n      isValidated: this.isValidated\n    });\n    \n  }\n\n  confirmQtaRicevuta() {\n    for(var i = 0; i < this.orderRows.length; ++i) {\n      if(this.orderRowGridRowData[i].qta_ricevuta == -1){\n        this.orderRowGridRowData[i].qta_ricevuta = this.orderRowGridRowData[i].qta_validata;\n      }\n      this.onQtaRicevutaSet(this.orderRows[i], this.orderRowGridRowData[i].qta_ricevuta);\n    }\n\n    var isQtaRicevutaConfirmed = true;\n    \n    this.thisDialogRef.close({\n      order: this.order,\n      orderRows: this.orderRows,\n      isQtaRicevutaConfirmed: isQtaRicevutaConfirmed\n    });\n  }\n\n  createOrderRowGridRowData() {\n    this.orderRowGridRowData = [];\n    for(var i = 0; i < this.orderRows.length; ++i) {\n      var newOrderRow = {\n        id: this.orderRows[i].id,\n        id_ordine: this.orderRows[i].id_ordine,\n        n_riga: this.orderRows[i].n_riga,\n        id_prd: this.orderRows[i].id_prd,\n        product_name: this.productIdToDes(this.orderRows[i].id_prd),\n        username: this.order.username,\n        full_username: \"\",\n        qta: this.orderRows[i].qta,\n        max_mese: this.getMaxMeseByProdIdAndUsername(this.orderRows[i].id_prd, this.order.username),\n        motivazione: this.orderRows[i].motivazione,\n        qta_validata: this.orderRows[i].qta_validata,\n        qta_ricevuta: this.orderRows[i].qta_ricevuta,\n        note: this.orderRows[i].note,\n        isQtaRicevutaSet: this.orderRows[i].qta_ricevuta >= 0\n      }\n      //console.log(newOrderRow);\n      this.orderRowGridRowData.push(newOrderRow);\n    }\n    //console.log(this.orderRowGridRowData);\n  }\n\n  getMaxMeseByProdIdAndUsername(id_prd: string, username: string): number {    \n    for(var i = 0; i < this.forecasts.length; ++i) {\n      if(this.forecasts[i].id_prd == id_prd) {\n        if(this.forecasts[i].username == username) {\n          return Math.floor(this.forecasts[i].qta_approvata / 12);\n        }\n      }\n    }\n    return -1;\n  }\n\n  updateOrderRow(orderRow: OrderRow) {\n    for(var i = 0; i < this.orderRows.length; ++i) {\n      if(this.orderRows[i].id == orderRow.id){\n        this.orderRows[i] = orderRow;\n      }\n    }\n    this.createOrderRowGridRowData();\n  }\n\n  isQtaRicevutaSetAND(): boolean {\n    var auxBool: boolean = true;\n    for(var i = 0; i < this.orderRowGridRowData.length; ++i){\n      auxBool = auxBool && this.orderRowGridRowData[i].isQtaRicevutaSet;\n    }\n    return auxBool;\n  }\n}\n","<h1\nmat-dialog-title \nalign=\"center\" \nstyle=\"text-align: center;\">\n    {{ 'Order' | translate }} {{ data.order.n_ordine }} {{ 'placed by user' | translate }} {{ usernameToClient(data.order.username) }}\n</h1>\n\n<h3 \nalign=\"center\">\n    <b>Status:</b> {{this.data.status}}\n</h3>\n\n<mat-dialog-content \nclass=\"typography\">\n    <p\n    *ngIf=\"orderRows.length == 0\"\n    align=\"center\">\n        {{ 'This order does not contain any orderRows and will thus be deleted' | translate }}.\n    </p>\n\n    <!--table-->\n    <table\n    mat-table \n    [dataSource]=\"orderRowGridRowData\"\n    style=\"width: 100%\">\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n      \n        <!-- Position Column -->\n        <!--ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef align=\"center\"> {{ 'ID' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.id}} </td>\n        </ng-container-->\n      \n        <!-- Name Column -->\n        <!--ng-container matColumnDef=\"id_ordine\">\n          <th mat-header-cell *matHeaderCellDef> {{ 'Order ID' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.id_ordine}} </td>\n        </ng-container-->\n      \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"n_riga\">\n          <th mat-header-cell *matHeaderCellDef align=\"center\"> {{ 'Row number' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\" align=\"center\"> {{element.n_riga}} </td>\n        </ng-container>\n      \n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"product\">\n          <th mat-header-cell *matHeaderCellDef> {{ 'Product' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.product_name}} </td>\n        </ng-container>\n    \n        <!--ng-container matColumnDef=\"username\">\n          <th mat-header-cell *matHeaderCellDef> {{ 'Username' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\n        </ng-container-->\n    \n        <ng-container matColumnDef=\"qta\">\n          <th mat-header-cell *matHeaderCellDef> {{ 'Quantity' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.qta}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"max_mese\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'Max/month' | translate }} </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.max_mese}} </td>\n          </ng-container>\n    \n        <ng-container matColumnDef=\"motivazione\">\n          <th mat-header-cell *matHeaderCellDef> {{ 'Reason' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.motivazione}} </td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"qta_validata\">\n          <th mat-header-cell *matHeaderCellDef> {{ 'Validated quantity' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.qta_validata}} </td>\n        </ng-container>\n    \n        <!--when product has NOT been received-->\n        <ng-container \n        *ngIf=\"this.data.status != 'ricevuto'\"\n        matColumnDef=\"qta_ricevuta\">\n          <th mat-header-cell *matHeaderCellDef> {{ 'Received quantity' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\"> 0 </td>\n        </ng-container>\n\n        <!-- when product has been received - sangueasl pov -->\n        <ng-container\n        matColumnDef=\"qta_ricevuta\"\n        *ngIf=\"this.data.status == 'ricevuto' && userCode == '210'\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'Received quantity' | translate }} </th>\n            <td\n            mat-cell \n            *matCellDef=\"let element\">\n                <input \n                matInput\n                style=\"max-width: 50px;\"\n                type=\"number\"\n                disabled=\"false\"\n                [(ngModel)]=\"element.qta_ricevuta\"\n                (keyup.enter)=\"onQtaRicevutaSet(element, element.qta_ricevuta)\"\n                (keyup.tab_next)=\"onQtaRicevutaSet(element, element.qta_ricevuta)\">\n            </td>\n        </ng-container>\n\n        <!--when product has been received - sangueaslno pov-->\n        <ng-container\n        matColumnDef=\"qta_ricevuta\"\n        *ngIf=\"this.data.status == 'ricevuto' && userCode == '220'\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'Received quantity' | translate }} </th>\n            <td\n            mat-cell \n            *matCellDef=\"let element\">\n                <input \n                matInput\n                style=\"max-width: 50px;\"\n                type=\"number\"\n                disabled=\"{{element.isQtaRicevutaSet}}\"\n                [(ngModel)]=\"element.qta_ricevuta\"\n                (keyup.enter)=\"onQtaRicevutaSet(element, element.qta_ricevuta)\"\n                (keyup.tab_next)=\"onQtaRicevutaSet(element, element.qta_ricevuta)\">\n            </td>\n        </ng-container>\n\n        <!-- when product has been received - sanguefornitore pov -->\n        <ng-container\n        matColumnDef=\"qta_ricevuta\"\n        *ngIf=\"this.data.status == 'ricevuto' && userCode == '230'\">\n            <th mat-header-cell *matHeaderCellDef> {{ 'Received quantity' | translate }} </th>\n            <td\n            mat-cell \n            *matCellDef=\"let element\">\n                <input \n                matInput\n                style=\"max-width: 50px;\"\n                type=\"number\"\n                disabled=\"true\"\n                [(ngModel)]=\"element.qta_ricevuta\"\n                (keyup.enter)=\"onQtaRicevutaSet(element, element.qta_ricevuta)\"\n                (keyup.tab_next)=\"onQtaRicevutaSet(element, element.qta_ricevuta)\">\n            </td>\n        </ng-container>\n    \n        <ng-container\n        matColumnDef=\"note\">\n          <th mat-header-cell *matHeaderCellDef> {{ 'Notes' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.note}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef ></th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <button\n                *ngIf=\"this.data.status == 'inviato'\"\n                mat-mini-fab\n                matTooltip=\"{{ 'Edit' | translate }}\"\n                color=\"primary\" \n                (click)=\"openEditOrderRowDialog(element.id, false)\">\n                <!--cambiata condizione *ngIf=\"!isLocked\", anche sotto-->\n                <i class=\"material-icons\">edit</i>\n                </button>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <button\n                *ngIf=\"this.data.status == 'inviato'\"\n                mat-mini-fab \n                matTooltip=\"{{ 'Delete' | translate }}\"\n                color=\"warn\" \n                (click)=\"openAreYouSureOrderRowDialog(element.id)\">\n                    <i class=\"material-icons\">delete</i>\n                </button>\n            </td>\n        </ng-container>\n\n        <ng-container\n        matColumnDef=\"diff\">\n          <th mat-header-cell *matHeaderCellDef> {{ 'Missing units' | translate }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.qta_validata - element.qta_ricevuta}} </td>\n        </ng-container>\n    \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <!--mat-card *ngFor=\"let orderRow of orderRows; let i = index\" style=\"margin-bottom: 20px;\">\n        <mat-card-title>ID: {{ orderRow.id }}</mat-card-title>\n        <h5><b>{{ 'Product' | translate }}:</b> {{ productIdToDes(orderRow.id_prd) }}</h5>\n        <h5><b>{{ 'Row number' | translate }}:</b> {{ orderRow.n_riga }}</h5>\n        <h5><b>{{ 'Quantity' | translate }}:</b> {{ orderRow.qta }}</h5>\n        <h5\n        *ngIf=\"orderRow.motivazione != null && orderRow.motivazione != '' && orderRow.motivazione != undefined\">\n            <b>{{ 'Reason' | translate }}:</b> {{ orderRow.motivazione }}\n        </h5>\n        <h5><b>{{ 'Approved quantity' | translate }}:</b> {{ orderRow.qta_validata }}</h5>\n        <h5\n        *ngIf=\"orderRow.qta_ricevuta > 0\">\n            <b>{{ 'Received quantity' | translate }}:</b> {{ orderRow.qta_ricevuta }}\n        </h5>\n        <h5><b>{{ 'Notes' | translate }}:</b> {{ orderRow.note }}</h5>\n\n        <div\n        *ngIf=\"this.data.status == 'ricevuto' && orderRow.qta_ricevuta == 0\"\n        align=\"center\">\n            <h5>\n                <b>{{'Received quantity' | translate}}:</b> \n                \n                <input \n                type=\"number\"\n                matInput\n                [(ngModel)]=\"qtaRicevuta[i]\">    \n            </h5>\n            \n            <button\n            mat-raised-button\n            (click)=\"onQtaRicevutaSet(orderRow, qtaRicevuta[i])\"\n            color=\"primary\">{{ 'Submit' | translate }}</button>\n            <h5 align=\"center\" style=\"color: red\">{{ 'Warning: once set, the received quantity cannot be modified' | translate}}!</h5>\n        </div>\n\n        <div mat-dialog-actions align=\"center\">\n            <button\n            *ngIf=\"!isLocked\"\n            mat-raised-button \n            color=\"primary\" \n            (click)=\"openEditOrderRowDialog(orderRow.id, false)\">\n                {{ 'Edit' | translate }}\n            </button>\n            <button\n            *ngIf=\"!isLocked\"\n            mat-raised-button \n            color=\"warn\" \n            (click)=\"openAreYouSureOrderRowDialog(orderRow.id)\">\n                {{ 'Delete' | translate }}\n            </button>\n        </div>\n    </mat-card--> \n</mat-dialog-content>\n\n<h5 \n*ngIf=\"this.data.status == 'ricevuto'\"\nalign=\"center\" \nstyle=\"color: red\">\n    {{ 'Warning: once set, the received quantity cannot be modified' | translate}}!\n</h5>\n\n<div mat-dialog-actions align=\"center\">\n    <button \n    style=\"margin: 5px;\"\n    *ngIf=\"!isLocked && orderRows.length > 0\"\n    mat-mini-fab \n    color=\"basic\"\n    matTooltip=\"{{'Add row' | translate}}\"\n    (click)=\"openEditOrderRowDialog('', true)\">\n        <i class=\"material-icons\">add</i>\n    </button>\n    <button \n    style=\"margin: 5px;\"\n    *ngIf=\"!isLocked && orderRows.length > 0\"\n    mat-mini-fab\n    matTooltip=\"{{'Delete order' | translate}}\"\n    color=\"warn\" \n    (click)=\"openAreYouSureOrderDialog(data.order.id)\">\n        <i class=\"material-icons\">delete_forever</i>\n    </button>\n    \n    <button \n    style=\"margin: 5px;\"\n    *ngIf=\"userCode == '220' && !isValidated\"\n    mat-mini-fab\n    matTooltip=\"{{'Validate' | translate}}\"\n    color=\"primary\"\n    (click)=\"openAreYouSureValidate()\">\n        <i class=\"material-icons\">check</i>\n    </button>\n\n    <!-- se ho ricevuto l'ordine e devo confermare le quantità ricevute -->\n    <button \n    style=\"margin: 5px;\"\n    *ngIf=\"(userCode == '220' || userCode == '210') && data.status == 'ricevuto'\"\n    mat-mini-fab\n    matTooltip=\"{{'Confirm all received quantities' | translate}}\"\n    color=\"primary\"\n    (click)=\"confirmQtaRicevuta()\">\n        <i class=\"material-icons\">checklist_rtl</i>\n    </button>\n\n    <!--se non è bloccato e ci sono orderRows-->\n    <button \n    style=\"margin: 5px;\"\n    *ngIf=\"!isLocked && orderRows.length > 0\"\n    mat-mini-fab\n    matTooltip=\"{{'Close' | translate}}\"\n    mat-dialog-close \n    color=\"accent\">\n        <i class=\"material-icons\">close</i>\n    </button>\n\n    <!--se è bloccato-->\n    <button \n    style=\"margin: 5px;\"\n    *ngIf=\"isLocked\"\n    mat-mini-fab\n    matTooltip=\"{{'Close' | translate}}\"\n    mat-dialog-close \n    color=\"accent\">\n        <i class=\"material-icons\">close</i>\n    </button>\n\n    <!--se non ci sono più orderRows-->\n    <button \n    style=\"margin: 5px;\"\n    *ngIf=\"orderRows.length == 0\"\n    mat-mini-fab \n    matTooltip=\"{{'Close' | translate}}\"\n    color=\"accent\" \n    (click)=\"onClose(data.order.id)\">\n        <i class=\"material-icons\">close</i>\n    </button>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, UntypedFormBuilder, UntypedFormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { map, Observable, startWith } from 'rxjs';\nimport { environment, Forecast, OrderRow, Product, User, translations } from 'src/environments/environment';\nimport { LoginService } from '../login.service';\nimport { ForecastService } from '../forecast.service';\n\n@Component({\n  selector: 'app-edit-order-row',\n  templateUrl: './edit-order-row.component.html',\n  styleUrls: ['./edit-order-row.component.css']\n})\nexport class EditOrderRowComponent implements OnInit {\n  isSubmitted: boolean = false;\n  orderRow!: OrderRow;\n\n  productID!: string;\n  usernameString!: string;\n\n  qtyThreshold!: number;\n  qtyValue!: number;\n  qtyEstimated!: number;\n  qtyOrdered!: number;\n  qtyRemaining!: number;\n\n  forecasts: Forecast[] = [];\n  orderRows: OrderRow[] = [];\n\n  //flags for field checking\n  productOK: boolean = false;\n  nRigaOK: boolean = false;\n  quantitaOK: boolean = false;\n  motivazioneOK: boolean = false;\n\n  id!: UntypedFormControl;\n  id_ordine!: UntypedFormControl;\n  username!: UntypedFormControl;\n  n_riga!: UntypedFormControl;\n  id_prd!: UntypedFormControl;\n  qta!: UntypedFormControl;\n  motivazione!: UntypedFormControl;\n  qta_validata!: UntypedFormControl;\n  note!: UntypedFormControl;\n\n  isSubmitEnabled: boolean = false;\n  isMotivazioneVisible: boolean = false;\n\n  productsFormControl!: FormControl;// = new FormControl('', Validators.required);\n  products: Product[] = [];\n  productOptions: string[] = [];\n  filteredProductOptions: Observable<string[]> | undefined;\n\n  usersFormControl!: FormControl;// = new FormControl('', Validators.required);\n  users: User[] = [];\n  userOptions: string[] = [];\n  filteredUserOptions: Observable<string[]> | undefined;\n\n  loginService: LoginService\n  minQty: number = 0;\n  isUrgent: boolean = false;\n\n  step: number = 0;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { \n      year: string,\n      orderRow: OrderRow,\n      users: any,\n      products: Product[],\n      forecasts: Forecast[],\n      orderRows: OrderRow[],\n      isUrgent: boolean\n    },\n    private dialogRef: MatDialogRef<EditOrderRowComponent>,\n    private _builder: UntypedFormBuilder,\n    loginService: LoginService,\n    private forecastService: ForecastService\n  ) {\n    this.loginService = loginService;\n\n    this.orderRow = data.orderRow;\n    this.orderRows = data.orderRows;\n    this.users = data.users;    \n    this.forecasts = data.forecasts;\n        \n    this.isMotivazioneVisible = (this.orderRow.motivazione != \"\" && this.orderRow.motivazione != null);//TODO: sistemare qui\n    if(data.isUrgent){\n      this.isUrgent = data.isUrgent;\n      this.isMotivazioneVisible = true;\n    }\n    \n    //se sangueaslno\n    if(loginService.getUserCode() == \"220\") {\n      if(this.orderRow.id != \"\") {\n        this.usersFormControl = _builder.control(this.orderRow.username == \"\" ? \"\" : this.usernameToClient(this.orderRow.username), Validators.required);\n        //this.userOptions = this.usersToOptions(this.users);\n      }\n      else {\n        //do nothing, orderRow.username is already assigned\n      }\n    }\n    //se sangueasl\n    else if(loginService.getUserCode() == \"210\") {\n      if(this.orderRow.id != null) {\n        this.usersFormControl = _builder.control(localStorage.getItem(\"id_profile\"));\n      }\n      else{\n        this.usersFormControl = _builder.control(this.usernameToClient(localStorage.getItem(\"id_profile\")!));\n      }\n    }\n\n    //products\n    this.products = data.products;    \n    //console.log(\"Received:\");\n    //console.log(this.data);\n    \n    this.productsFormControl = _builder.control(this.productIdToDes(this.orderRow.id_prd), Validators.required);\n    this.productOptions = this.productsToOptions(this.products);\n    \n    //this.n_riga = _builder.control(this.orderRow.n_riga == null ? 0 : this.orderRow.n_riga, Validators.required);\n    //console.log(\"RIGA: \" +  this.orderRow.n_riga == \"0\" ? this.orderRows.length + 1 : this.orderRow.n_riga);\n    \n    this.n_riga = _builder.control(this.orderRow.n_riga == 0 ? this.orderRows.length + 1 : this.orderRow.n_riga, Validators.required);\n    this.qta = _builder.control(this.orderRow.qta, Validators.required);\n    this.motivazione = _builder.control(this.orderRow.motivazione, Validators.required);\n    this.qta_validata = _builder.control(this.orderRow.qta_validata, Validators.required);\n    this.note = _builder.control(this.orderRow.note);\n\n    this.selectProductAtStart(this.data.orderRow.id_prd);\n    this.onProductSelectedByDes(this.productsFormControl.value);\n    this.checkFields();\n  }\n\n  ngOnInit(): void {\n    //first filter\n    this.filteredProductOptions = this.productsFormControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterProducts(value || '')),\n    );\n    this.checkFields();\n  }\n\n  private _filterProducts(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.productOptions.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  productsToOptions(products: Product[]): string[] {\n    var productOptions: string[] = [];\n    for(var i = 0; i < products.length; ++i) {\n      productOptions.push(products[i].des);\n    }\n    return productOptions;\n  }\n\n  productDesToId(des: string): string {\n    //console.log(\"des: \" + des);\n    \n    for(var i = 0; i < this.products.length; ++i){\n      if(des == this.products[i].des) {\n        console.log(\"step \" + this.products[i].multiplo_confezionamento);\n        this.step = this.products[i].multiplo_confezionamento;\n        return this.products[i].id;\n      }\n    }\n    this.step = 0;\n    return \"\";\n  }\n\n  productIdToDes(id: string): string {\n    for(var i = 0; i < this.products.length; ++i){\n      if(id == this.products[i].id) {\n        console.log(\"returning \" + this.products[i].des);\n        \n        return this.products[i].des;\n      }\n    }\n    //return first product of the list\n    return this.products[0].des;\n  }\n\n  usersToOptions(users: User[]): string[] {\n    var userOptions: string[] = [];\n    for(var i = 0; i < users.length; ++i) {\n      userOptions.push(users[i].client);\n    }\n    return userOptions;\n  }\n\n  userClientToId(client: string): string {\n    for(var i = 0; i < this.users.length; ++i){\n      if(client == this.users[i].client) {\n        return this.users[i].username;\n      }\n    }\n    return \"\";\n  }\n\n  usernameToClient(username: string): string {\n    for(var i = 0; i < this.users.length; ++i){\n      if(username == this.users[i].username) {\n        return this.users[i].client;\n      }\n    }\n    return \"\";\n  }\n\n  onUserSelected(event: any) {\n    console.log(event.source.value);\n    console.log(this.userClientToId(event.source.value));\n  }\n\n  adjustQta() {\n    this.qtyValue = this.qta.value;\n    while(this.qtyValue % this.step != 0) {\n      this.qtyValue++;\n    }\n    this.qta.setValue(this.qtyValue);\n  }\n\n  onProductSelected(event: any) {\n    if(event.source.selected){    \n      this.qtyEstimated = 0;\n      this.qtyOrdered = 0;\n      this.qtyRemaining = 0;\n      let productId = this.productDesToId(event.source.value);\n      this.productsFormControl.setValue(event.source.value);\n      this.qtyThreshold = Math.floor(this.getQtaApprovataByProductId(productId) / 12);\n      this.minQty = this.getMinOrdByProductId(productId);\n      this.minQty = (this.minQty > this.step ? this.step : this.minQty); \n      this.checkFields(event);\n      this.forecastService.getForecastRemainderPromise(this.data.year, productId).subscribe(\n        res => {\n          console.log(res);\n          if(res[0] == \"OK\") {\n            this.qtyEstimated = res[1].tot_preventivato;\n            this.qtyOrdered = res[1].tot_ordinato;\n            this.qtyRemaining = res[1].rimanenza;\n            console.log(this.qtyEstimated + \" \" + this.qtyOrdered + \" \" + this.qtyRemaining);\n          }\n          else {\n            console.error(\"Error retrieving forecastRemainder!\");\n          }\n        }\n      );\n    }\n  }\n\n  onProductSelectedByDes(des: string) {\n    let productId = this.productDesToId(des);\n    this.productsFormControl.setValue(des);\n    this.qtyThreshold = Math.floor(this.getQtaApprovataByProductId(productId) / 12);\n    this.minQty = this.getMinOrdByProductId(productId);\n    this.minQty = (this.minQty > this.step ? this.step : this.minQty); \n    this.checkFields();\n  }\n\n  selectProductAtStart(productId: string) {\n    this.productsFormControl.setValue(this.productIdToDes(productId));\n    //this.productsFormControl.setValue(this.productIdToDes(productId));\n    this.qtyThreshold = Math.floor(this.getQtaApprovataByProductId(productId) / 12);\n    this.minQty = this.getMinOrdByProductId(productId);\n    this.minQty = (this.minQty > this.step ? this.step : this.minQty); \n    this.checkFields();\n  }\n\n  setQtyStepByProductId(productId: string) {\n\n  }\n\n  getQtaApprovataByProductId(id: string): number {\n    for(var i = 0; i < this.forecasts.length; ++i) {\n      if(this.forecasts[i].id_prd == id){\n        //console.log(\"corresponding forecast:\");\n        //console.log(this.forecasts[i]);        \n        if(this.forecasts[i].qta_approvata > 0){\n          return this.forecasts[i].qta_approvata;\n        }\n      }\n    }\n    return -1;\n  }\n\n  getMinOrdByProductId(id: string): number {\n    for(var i = 0; i < this.products.length; ++i) {\n      if(this.products[i].id == id){\n        //console.log(\"product for minOrd:\");\n        //console.log(this.products[i]);\n        //console.log(\"min_ord: \" + this.products[i].min_ord);\n        return this.products[i].min_ord;\n      }\n    }\n    return 0;\n  }\n\n  assignOrderRowValues() {\n    this.orderRow.id_prd = this.productDesToId(this.productsFormControl.value);\n    this.orderRow.n_riga = this.n_riga.value;\n    this.orderRow.note = this.note.value;\n    this.orderRow.qta = this.qta.value;\n    this.orderRow.motivazione = this.motivazione.value;\n    this.orderRow.qta_validata = this.qta_validata.value;\n    //this.orderRow.username = this.userClientToId(this.usersFormControl.value);\n  }\n\n  onSubmit() {\n    this.adjustQta();\n    this.isSubmitted = true;\n    this.assignOrderRowValues();\n    console.log(this.orderRow);\n    this.dialogRef.close(\n      { \n        orderRow: this.orderRow, \n        isSubmitted: this.isSubmitted\n      }\n    );\n  }\n  \n  onBlur(event: Event) {\n    //console.log(event);\n    {\n      if(this.qta.value == null){\n        this.qta.setValue(0);\n        this.isMotivazioneVisible = false;\n      }\n\n      this.qtyValue = this.qta.value;\n      \n      if(this.isUrgent) {\n        this.isMotivazioneVisible = true;\n        console.log(this.isMotivazioneVisible);\n      }\n      else {\n        if(this.qtyThreshold == -1 || this.qtyValue <= this.qtyThreshold){\n          this.isMotivazioneVisible = false;\n          this.motivazione.setValue(null);\n          return;\n        }\n        \n        if(this.qtyValue > this.qtyThreshold && (this.motivazione.value == \"\" || this.motivazione.value == null)){\n          alert(environment.currentLanguage == 'it' ? translations.it.ThresholdSurpassed : translations.en.ThresholdSurpassed);\n          this.isMotivazioneVisible = true;\n          return;\n        }\n      }\n    }\n  }\n\n  checkFields(event?: Event) {\n    //console.log(event);\n    \n    this.isSubmitEnabled = false;\n    //this.productsFormControl.setValue(this.productsFormControl.value);\n    //console.log(\"checkFields(): \" + this.productsFormControl.value);\n    //console.log(\"motivazione: \" + this.motivazione.value);\n\n    //se il prodotto scritto è tra i prodotti esistenti AND\n    //se il numero riga è positivo\n      //se la quantità è maggiore della soglia\n        //se la motivazione non è vuota\n          //abilita submit\n      //se la quantità è == -1\n        //abilita submit\n    \n    //il prodotto esiste e ha un numero riga\n    if(this.isAmongProducts(this.productsFormControl.value) && this.n_riga.value > 0) {\n      //console.log(\"the product exists\");\n      \n      //l'ordine è urgente\n      if(this.isUrgent){\n        if(this.motivazione.value != \"\" && this.motivazione.value != null){\n          this.isSubmitEnabled = true;\n        }\n      }\n      //se non è urgente\n      else {\n        //ha una soglia\n        if(this.qtyThreshold != -1 && this.minQty >= 0){\n\n          //se la soglia è stata superata, serve una motivazione\n          if(this.qta.value > this.qtyThreshold) {\n\n            //non ha una motivazione --> submit disabilitato\n            if(this.motivazione.value == null || this.motivazione.value == undefined || this.motivazione.value == \"\") {\n              //console.log(\"\\treason EMPTY --> disabling submit\");\n              this.isSubmitEnabled = false;\n            }\n\n            //ha una motivazione --> submit abilitato\n            else if(this.motivazione.value != null && this.motivazione.value != \"\" && this.motivazione.value != undefined) {\n              //console.log(\"\\treason not empty --> enabling submit\");\n              this.isSubmitEnabled = true;\n            }\n          }\n\n          //se la soglia non è stata superata, non serve una motivazione MA serve vedere che sia stata superata la minQty\n          else {\n            //console.log(\"threshold not surpassed, enabling submit independently from motivazione\");\n            if(this.qta.value >= this.minQty)\n              this.isSubmitEnabled = true;\n            else \n              this.isSubmitEnabled = false;\n          }\n        }\n        //non ha una soglia --> abilito submit\n        else {\n          //console.log(\"threshold not set\");\n          if(this.qta.value > 0 && this.qta.value >= this.minQty) {\n            this.isSubmitEnabled = true;\n          }\n        }\n      }\n    }\n    //prodotto non esiste o non ha un numero riga --> submit disabilitato a prescindere\n    else {\n      this.isSubmitEnabled = false;\n    }\n    if(this.qta.value <= 0) {\n      this.isSubmitEnabled = false;\n    }\n  }\n\n  isAmongProducts(inputValue: string): boolean {\n    for(var i = 0; i < this.products.length; ++i) {\n      if(inputValue == this.products[i].des) {\n        this.getQtaApprovataByProductId(this.products[i].id);\n        return true;\n      }\n    }\n    this.qtyThreshold = Infinity;\n    return false;\n  }\n}\n","<h3 *ngIf=\"orderRow.id == ''\" mat-dialog-title>{{ 'Add order row' | translate }}</h3>\n<h3 *ngIf=\"orderRow.id != ''\" mat-dialog-title>{{ 'Edit order row' | translate }}</h3>\n\n<div mat-dialog-content>\n\n\t<!--mat-form-field \n\t*ngIf=\"false\"\n\tclass=\"example-full-width\">\n\t\t<mat-label>{{ 'User' | translate }}</mat-label>\n\t\t<input type=\"text\"\n\t\tplaceholder=\"Pick one\"\n\t\taria-label=\"Number\"\n\t\tmatInput\n\t\t[formControl]=\"usersFormControl\"\n\t\t[matAutocomplete]=\"autoU\">\n\t\t<mat-autocomplete \n\t\tautoActiveFirstOption \n\t\t#autoU=\"matAutocomplete\">\n\t\t\t<mat-option\n\t\t\t*ngFor=\"let optionU of filteredUserOptions | async\" \n\t\t\t[value]=\"optionU\"\n\t\t\t(onSelectionChange)='onUserSelected($event)'>\n\t\t\t\t{{optionU}}\n\t\t\t</mat-option>\n\t\t</mat-autocomplete>\n\t</mat-form-field-->\n<form>\n\t<mat-form-field class=\"example-full-width\">\n\t\t<mat-label>{{ 'Product' | translate }}</mat-label>\n\t\t<input type=\"text\"\n\t\tplaceholder=\"{{'Choose a product' | translate}}\"\n\t\tmatInput\n\t\t[formControl]=\"productsFormControl\"\n\t\t[matAutocomplete]=\"autoP\"\n\t\t(keyup)=\"checkFields($event)\">\n\t\t<mat-autocomplete \n\t\tautoActiveFirstOption\n\t\t#autoP=\"matAutocomplete\">\n\t\t\t<mat-option \n\t\t\t*ngFor=\"let optionP of filteredProductOptions | async\" \n\t\t\t[value]=\"optionP\" \n\t\t\t(onSelectionChange)='onProductSelected($event)'>\n\t\t\t\t{{optionP}}\n\t\t\t</mat-option>\n\t\t</mat-autocomplete>\n\t</mat-form-field>\n\n\t<mat-form-field>\n\t\t<input\n\t\tplaceholder=\"{{ 'Row number' | translate }}\"\n\t\t[formControl]=\"n_riga\"\n\t\tmatInput\n\t\t(keyup)=\"checkFields($event)\"\n\t\ttype=\"number\">\n\t</mat-form-field>\n\n\t<mat-form-field\n\t*ngIf=\"qtyThreshold != -1 && minQty == 0\">\n\t\t<input\n\t\tplaceholder=\"{{ 'Quantity' | translate }} (max: {{qtyThreshold}}, preventivato: {{ qtyEstimated }}, ordinato: {{ qtyOrdered }}, rimanenza: {{ qtyRemaining }})\"\n\t\t[formControl]=\"qta\"\n\t\tstep=\"{{step}}\"\n\t\tmatInput\n\t\t(blur)=\"onBlur($event)\"\n\t\t(keyup)=\"checkFields($event)\"\n\t\ttype=\"number\">\n\t</mat-form-field>\n\n\t<mat-form-field\n\t*ngIf=\"qtyThreshold != -1 && minQty > 0\">\n\t\t<input\n\t\tplaceholder=\"{{ 'Quantity' | translate }} (min: {{minQty}}, max: {{qtyThreshold}},  preventivato: {{ qtyEstimated }}, ordinato: {{ qtyOrdered }}, rimanenza: {{ qtyRemaining }})\"\n\t\t[formControl]=\"qta\"\n\t\tstep=\"{{step}}\"\n\t\tmatInput\n\t\t(blur)=\"onBlur($event)\"\n\t\t(keyup)=\"checkFields($event)\"\n\t\ttype=\"number\">\n\t</mat-form-field>\n\n\t<mat-form-field\n\t*ngIf=\"qtyThreshold == -1\">\n\t\t<input\n\t\tplaceholder=\"{{ 'Quantity' | translate }} (min: {{minQty}},  preventivato: {{ qtyEstimated }}, ordinato: {{ qtyOrdered }}, rimanenza: {{ qtyRemaining }})\"\n\t\t[formControl]=\"qta\"\n\t\tstep=\"{{step}}\"\n\t\tmatInput\n\t\t(blur)=\"onBlur($event)\"\n\t\t(keyup)=\"checkFields($event)\"\n\t\ttype=\"number\">\n\t</mat-form-field>\n\n\t<mat-form-field\n\t*ngIf=\"isMotivazioneVisible\">\t\n\t\t<input\n\t\t#motivazioneInput\n\t\tplaceholder=\"{{ 'Reason' | translate }}\"\n\t\t[formControl]=\"motivazione\"\n\t\tmatInput\n\t\t(blur)=\"onBlur($event)\"\n\t\t(keyup)=\"checkFields($event)\"\n\t\ttype=\"text\"\n\t\t(focus)=\"true\">\n\t</mat-form-field>\n\n\n\t<mat-form-field\n\t*ngIf=\"loginService.getUserCode() == '220'\">\n\t\t<input\n\t\tplaceholder=\"{{ 'Validated quantity' | translate }}\"\n\t\t[formControl]=\"qta_validata\"\n\t\tmatInput\n\t\ttype=\"number\">\n\t</mat-form-field>\n\n\t<mat-form-field>\n\t\t<input\n\t\tplaceholder=\"{{ 'Notes' | translate }}\"\n\t\t[formControl]=\"note\"\n\t\tmatInput\n\t\ttype=\"text\">\n\t</mat-form-field>\n</form>\n</div>\n\n<div mat-dialog-actions align=\"center\">\n    <button \n\tmat-mini-fab\n\t[disabled]=\"!isSubmitEnabled\"\n\tcolor=\"primary\"\n\tmatTooltip=\"{{ 'Submit' | translate }}\"\n\tstyle=\"margin: 5px;\" \n\t(click)=\"onSubmit()\">\n\t\t<i class=\"material-icons\">check</i>\n\t</button>\n    \n\t<button \n\tmat-mini-fab\n\tmatTooltip=\"{{ 'Cancel' | translate }}\"\n\tstyle=\"margin: 5px;\" \n\tmatDialogClose=\"true\" \n\tcolor=\"accent\">\n\t\t<i class=\"material-icons\">close</i>\n\t</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n\n\n//TODO: delete this class!\n\n\n\n@Component({\n  selector: 'app-edit-order',\n  templateUrl: './edit-order.component.html',\n  styleUrls: ['./edit-order.component.css']\n})\nexport class EditOrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit-order works!</p>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileDownloadService {\n\n  constructor() { }\n\n  downloadPdfFromBase64(filename: string, base64String: string) {\n    const binaryData = atob(base64String);\n    const length = binaryData.length;\n    const uint8Array = new Uint8Array(length);\n\n    for(let i = 0; i < length; ++i) {\n      uint8Array[i] = binaryData.charCodeAt(i);\n    }\n\n    const blob = new Blob([uint8Array], {type: 'application/pdf'});\n    //console.log(blob);\n\n    const url = URL.createObjectURL(blob);\n    //console.log(\"URL: \" + url);\n\n    // Create an anchor element to trigger download\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n\n    // Trigger the download\n    a.click();\n\n    // Clean up by revoking the Blob URL\n    URL.revokeObjectURL(url);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, UntypedFormControl, Validators } from '@angular/forms';\nimport { map, Observable, startWith } from 'rxjs';\nimport { environment, User } from 'src/environments/environment';\nimport { ForecastService } from '../forecast.service';\nimport { LoginService } from '../login.service';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-forecast-report',\n  templateUrl: './forecast-report.component.html',\n  styleUrls: ['./forecast-report.component.css']\n})\nexport class ForecastReportComponent implements OnInit {\n\n  year: string = new Date().getFullYear().toString();\n  isInputAmongUsers: boolean = false;\n  username: string = \"\";\n  loginService: LoginService;\n  \n  //BEGIN: autocomplete - users\n  users: User[] = [];\n  filteredUsers!: Observable<string[]>;\n  userFormControl!: UntypedFormControl;\n  userNames: any = [];\n  //END: autocomplete - users\n\n  constructor(\n    private forecastService: ForecastService,\n    private usersService: UsersService,\n    loginService: LoginService,\n    private _builder: FormBuilder,\n  ) { \n    this.loginService = loginService;\n    if(environment.globalUsers.length != 0) {\n      this.users = environment.globalUsers;\n      this.userFormControl = _builder.control(this.users[0].client);\n    }\n    else {\n      console.log(\"getting users globally\");\n      this.userFormControl = _builder.control(\"\");\n      this.getUsersGlobally();\n    }\n  }\n\n  ngOnInit(): void {\n    //filter input for users\n    this.getUserNames();\n    console.log(this.userFormControl);\n    \n    this.filteredUsers = this.userFormControl!.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterUsers(value || ''))\n    );\n  }\n\n  getReport(username: string, year: string) {\n    this.forecastService.getForecastPdfPromise(username, year).subscribe(\n      (res: any) => {\n        if(res[0] == \"KO\"){\n          console.error(\"Error retrieving report for user \" + username);\n        }\n        else{\n          //console.log(res);\n          window.open(environment.reportPath + res[1][0].filename, \"_blank\");\n        }\n      }\n    );\n  }\n\n  getUsersGlobally() {\n    this.usersService.listUsersPromise(\"210\").subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.users = res[1];\n          environment.globalUsers = res[1];\n          this.getUserNames();\n          this.username = this.users[0].id;\n          this.userFormControl = this._builder.control(this.users[0].client);\n        }\n        else{\n          console.error(\"Error retrieving users!\");\n        }\n      }\n    );\n  }\n\n  //BEGIN functions for autocomplete - USERS\n  private _filterUsers(value: string): string[] {\n    const filterValue = value.toLowerCase();    \n    return this.userNames.filter((option: string) => option.toLowerCase().includes(filterValue));\n  }\n\n  getUserId(event: any): string | void {\n    for(let i = 0; i < this.users.length; ++i){\n      if(this.users[i].client == event.source.value){\n        //console.log(this.users[i].id);\n        return this.users[i].id;\n      }\n    }\n  }\n\n  getUserNames(): void {\n    for(let i = 0; i < this.users.length; ++i){\n      this.userNames.push(this.users[i].client);\n    }\n    //console.log(this.userNames);\n  }\n\n  onUserSelected(event: any) {\n    this.isInputAmongUsers = false;\n    if(event.source._selected){\n      this.username = this.getUserId(event)!;\n    }\n  }\n  //END functions for autocomplete - USERS\n}\n","<div\nclass=\"second-nav\">\n    <h1>{{ \"Forecast reports\" | translate }}</h1>\n</div>\n\n\n<div \nalign=\"center\"\nclass=\"container\">\n    <p>\n        <mat-form-field \n        style=\"width: 50%\"\n        align=\"center\"\n        *ngIf=\"loginService.getUserCode()=='220'\">\n            <input \n            align=\"center\"\n            type=\"text\"\n            placeholder=\"{{ 'User' | translate }}\"\n            matInput\n            style=\"width: 100%\"\n            [formControl]=\"userFormControl\"\n            [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of filteredUsers | async\" [value]=\"option\" (onSelectionChange)='onUserSelected($event)' onchange=\"\">\n                {{ option }}\n            </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n    </p>\n    <p>\n        {{ \"Reference year\" | translate }}: \n        <input\n        matInput\n        style=\"width: 50px\"\n        type=\"number\"\n        [(ngModel)]=\"year\"\n        >\n    </p>\n    <p>\n        <button\n        mat-fab\n        class=\"mat-elevation-z0\"\n        style=\"margin: 5px;\"\n        color=\"warn\"\n        (click)=\"getReport(username, year)\"\n        matTooltip=\"{{'View report' | translate}}\">\n            <i class=\"material-icons\">picture_as_pdf</i>\n        </button>\n    </p>\n</div>    \n\n\n<footer>\n\t<p \n\t*ngIf=\"loginService.getUsername() != null\"\n\talign=\"center\">\n\t\t{{ 'Logged as' | translate }} <b>{{ loginService.currentUser.client }}</b>.\n\t</p>\n\t<p \n\t*ngIf=\"loginService.getUsername() == null\"\n\talign=\"center\">\n\t\t{{ 'You\\'re not logged!' | translate }} <a [routerLink]=\"['/login']\">{{ 'Login' | translate }}</a>\n\t</p>\t\n</footer>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment, Forecast } from 'src/environments/environment';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastService {\n  url = environment.basePath + 'forecast.php';\n  reportUrl = environment.reportPath + 'forecast.php';\n  forecast: any;\n  forecasts: Forecast[] = [];\n\n  constructor(\n    private loginService: LoginService,\n    private http: HttpClient,\n    ) { }\n\n  \n  //GET\n  listForecasts(year: string, result: any): any{\n    let request = 'listForecasts';\n    let id_session = localStorage.getItem('id_session');\n\n    let path = this.url + '?request='+ request +'&id_session=' + id_session + '&year=' + year;\n    \n    this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    ).subscribe(res => {\n      console.log(res);\n      if(res[0] == \"KO\"){\n        console.error(\"Error retrieving forecasts!\");\n        return null;\n      }\n      else{\n        console.log(res[1]); \n        result = res[1];\n        console.log('result ' + result);\n        \n        return res[1];\n      }\n    });\n  }\n\n  listForecastsPromise(year: string): Observable<any>{\n    let request = 'listForecasts';\n    let id_session = localStorage.getItem('id_session');\n\n    let path = this.url + '?request=' + request + '&id_session='+ id_session + '&year=' + year;\n    \n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    );\n  }\n\n  //POST\n  setForecast(\n    id: string,\n    anno: number,\n    username: string,\n    id_prd: string,\n    qta: number,\n    note: string,\n    qta_approvata: number,\n    costo_unitario: number,\n    isAdding: boolean\n  ): any{\n    if(!isAdding && parseInt(id) < 1){\n      console.error(\"Invalid ID!\");\n      id = \"\";\n      return null;\n    }\n    if(\n      id == \"\" || \n      anno.toString() == \"\" || \n      username == \"\" || \n      id_prd == \"\" ||\n      qta.toString() == \"\"\n    ){\n      console.error(\"\\\"note\\\" is the only acceptable empty parameter.\");\n      return null;\n    }\n\n    this.http.post<String[]>(\n      this.url, {\n        request: 'setForecast',\n        id_session: localStorage.getItem('id_session'),\n        id: id,\n        anno: anno,\n        username: username,\n        id_prd: id_prd,\n        qta: qta,\n        note: note,\n        qta_approvata: qta_approvata,\n        costo_unitario: costo_unitario\n      }\n    ).subscribe(res => {\n      //console.log(\"WS response: \" + res);\n      if(res[0] == \"KO\"){\n        console.error(\"setForecast() error: \" + res[1].toString());\n        return null;\n      }\n      else{\n        //console.log(\"Result: \" + res[0]);\n        //console.log(\"Product with ID \" + res[1] + \"successfully set!\");\n        return res[1].toString();\n      }\n    });\n  }\n\n  setForecastPromise(\n    id: string,\n    anno: number,\n    username: string,\n    id_prd: string,\n    qta: number,\n    note: string,\n    qta_approvata: number,\n    costo_unitario: number,\n    isAdding: boolean\n  ): Observable<any> | null{\n    if(!isAdding && parseInt(id) < 1){\n      console.error(\"Invalid ID!\");\n      id = \"\";\n      return null;\n    }\n    else if(\n      id == \"\" || \n      anno.toString() == \"\" || \n      username == \"\" || \n      id_prd == \"\" ||\n      qta.toString() == \"\"\n    ){\n      console.error(\"\\\"note\\\" is the only acceptable empty parameter.\");\n      return null;\n    }\n    else{\n      return this.http.post<String[]>(\n        this.url, {\n          request: 'setForecast',\n          id_session: localStorage.getItem('id_session'),\n          id: id,\n          anno: anno,\n          username: username,\n          id_prd: id_prd,\n          qta: qta,\n          note: note,\n          qta_approvata: qta_approvata,\n          costo_unitario: costo_unitario\n        }\n      );\n    }\n  }\n\n  //POST\n  addForecast(\n    anno: number,\n    username: string,\n    id_prd: string,\n    qta: number,\n    note: string,\n    qta_approvata: number,\n    costo_unitario: number,\n  ): any{\n    let id = \"-1\";\n    let isAdding = true;\n    return this.setForecast(id, anno, username, id_prd, qta, note, qta_approvata, costo_unitario, isAdding);\n  }\n\n  addForecastPromise(\n    anno: number,\n    username: string,\n    id_prd: string,\n    qta: number,\n    note: string,\n    qta_approvata: number,\n    costo_unitario: number,\n  ): any{\n    let id = \"-1\";\n    let isAdding = true;\n    return this.setForecastPromise(id, anno, username, id_prd, qta, note, qta_approvata, costo_unitario, isAdding);\n  }\n  \n  //POST\n  rmForecast(id: string){\n    if(id == \"\" || parseInt(id) < 1){\n      console.error(\"Invalid ID!\");\n      return;\n    }\n\n    this.http.post<String[]>(\n      this.url, {\n        request: 'rmForecast',\n        id_session: localStorage.getItem('id_session'),\n        id: id\n      }\n    ).subscribe(res => {\n      console.log(\"WS response: \" + res);\n      if(res[0] == \"KO\"){\n        console.error(res[1].toString());\n      }\n      else{\n        //console.log(\"Removing product with ID \" + res[0]);\n        console.log(\"Product with ID \" + res[1] + \"successfully removed!\");\n      }\n    });\n  }\n\n  rmForecastPromise(id: string): Observable<any> | null{\n    if(id == \"\" || parseInt(id) < 1){\n      console.error(\"Invalid ID!\");\n      return null;\n    }\n\n    return this.http.post<String[]>(\n      this.url, {\n        request: 'rmForecast',\n        id_session: localStorage.getItem('id_session'),\n        id: id\n      }\n    )\n  }\n\n  getForecastsGlobally(year: string) {\n    this.listForecastsPromise(year).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.forecasts = res[1];\n          environment.globalForecasts = res[1];\n          //console.log(environment.globalForecasts);\n        }\n        else{\n          console.error(\"Error retrieving users!\");\n        }\n      }\n    );\n  }\n\n  getForecastPdfPromise(username: string, year: string) {\n    let request = 'getForecastPDF';\n    let id_session = localStorage.getItem('id_session');\n    let path = this.url + '?request='+ request + '&id_session=' + id_session + '&username=' + username + '&year=' + year;\n    //console.log(path)\n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    );\n  }\n\n  getForecastRemainderPromise(year: string, product_id: string): Observable<any>{\n    let request = 'getForecastRemainder';\n    let id_session = localStorage.getItem('id_session');\n    let username = localStorage.getItem('sangue_username');\n    product_id = product_id;\n    let path = this.url + '?request=' + request + '&id_session='+ id_session + '&year=' + year + '&id_prd=' + product_id + '&username=' + username;\n    \n    console.log(path);\n    \n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    );\n  }\n}\n","import { Component, Injectable, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { CellClickedEvent, CellValueChangedEvent, GetRowIdFunc, GetRowIdParams, GridApi } from 'ag-grid-community';\nimport { environment, Forecast, ForecastGridRowData } from 'src/environments/environment';\nimport { AddForecastComponent } from '../add-forecast/add-forecast.component';\nimport { AreYouSureForecastComponent } from '../are-you-sure-forecast/are-you-sure-forecast.component';\nimport { ForecastService } from '../forecast.service';\nimport { LoginService } from '../login.service';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { UsersService } from '../users.service';\nimport { AG_GRID_LOCALE_EN, AG_GRID_LOCALE_IT, defaultColDef, gridConfigForecast210, gridConfigForecast220 } from 'src/environments/grid-configs'\nimport { Router } from '@angular/router';\nimport { PharmaRegistryService } from '../pharma-registry.service';\nimport { SnackbarService } from '../snackbar.service';\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.css']\n})\n@Injectable({providedIn: 'root'})\nexport class ForecastComponent implements OnInit {\n  url = environment.basePath + 'forecast.php';\n  pharmaRegistryUrl = environment.basePath + 'anag.php';\n  dialogRef: any;\n\n  loaded: number = 0;\n  \n  //parameters for [set|add|rm]Forecast()\n  id = '';\n  anno!: number;\n  username = '';\n  id_prd = '';\n  qta!: number;\n  note = '';\n  qta_approvata!: number;\n  costo_unitario!: number;\n  year: string = new Date().getFullYear().toString();\n  \n  //agGrid configuration\n  forecastGridConfig: any;\n  forecasts: Forecast[] = [];\n  forecastGridRowData: ForecastGridRowData[] = [];\n  \n  //sangueasl column definition (ASL cliente)\n  //gridConfigUser210: any = this.gridConfigForecast210;\n\n  //sangueaslno column definition (ASL fornitore)\n  //gridConfigUser220: any = this.gridConfigForecast220;\n  gridOptions: any;\n  defaultColDef: any = defaultColDef;\n\n  //agGrid API handle\n  @ViewChild(AgGridAngular) agGrid!: AgGridAngular;\n  gridApi!: GridApi;\n  api: any;\n  columnApi: any;\n\n  //for dialog autocomplete\n  users: any = []; \n  products: any = [];\n\n  isLoading: boolean = false;\n\n  public getRowId: GetRowIdFunc = (params: GetRowIdParams) => {\n    return params.data.id;\n  };\n\n  localeText = (environment.currentLanguage == 'it' ? AG_GRID_LOCALE_IT : AG_GRID_LOCALE_EN);\n\n/*\n\n  CONSTRUCTOR\n\n*/\n  constructor(\n    public loginService: LoginService,\n    private forecastService: ForecastService,\n    private pharmaRegistryService: PharmaRegistryService,\n    private dialog: MatDialog,\n    private usersService: UsersService,\n    private router: Router,\n    private snackbarService: SnackbarService\n    ) { \n    //columnDef\n    switch(this.loginService.getProfile()){\n      case '210':\n        this.forecastGridConfig = gridConfigForecast210;\n        break;\n      case '220':\n        this.forecastGridConfig = gridConfigForecast220;\n        break;\n    }\n\n    this.loginService.getCurrentUserSync();\n\n    if(environment.globalUsers.length == 0) {\n      //get users and populate globalUsers\n      this.usersService.getUsersGlobally();\n    }\n    if(environment.globalProducts.length == 0) {\n      this.pharmaRegistryService.getProductsGlobally();\n    }    \n    \n    //gridOptions\n    this.gridOptions = {\n      /*onGridInit: () => {\n        this.createForecastGridRowData();\n        this.updateGrid();\n      },\n      */\n      onCellClicked: (event: CellClickedEvent) => {\n        //console.log(event);\n      },\n      onCellValueChanged: (event: CellValueChangedEvent) => {\n        //console.log(\"Changed from \" + event.oldValue + \" to \" + event.newValue);\n        this.setForecast(\n          event.data.id,\n          event.data.anno,\n          event.data.username,\n          event.data.id_prd,\n          event.data.qta,\n          event.data.note,\n          event.data.qta_approvata,\n          event.data.costo_unitario\n        );\n      }\n    }\n  }\n\n  onGridReady = (params: { api: any; columnApi: any; }) => {\n    this.api = params.api;\n    //console.log(\"log API:\");\n    //console.log(this.api);\n    this.columnApi = params.columnApi;    \n    //this.autoSizeColumns(false);\n  }\n\n  autoSizeColumns(skipHeader: boolean) {\n    /*\n    const allColumnIds: string[] = [];\n    this.columnApi.getColumns()!.forEach((column: { getId: () => string; }) => {\n      allColumnIds.push(column.getId());\n    });\n    this.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n    */\n    this.api.sizeColumnsToFit();\n    //this.columnApi.autoSizeAllColumns(skipHeader);\n  }\n\n  onFirstDataRendered = (event: any) => {\n    this.retrieveColumnState();\n  }\n  \n  retrieveColumnState() {\n    let localColumnState = localStorage.getItem(\"forecastColumnState\");\n    //console.log(\"Column state:\");\n    //console.log(localColumnState);\n    if(localColumnState != null) {\n      //console.log(JSON.parse(localColumnState));\n      this.columnApi.applyColumnState({state: JSON.parse(localColumnState), applyOrder: true});\n    }\n  }\n\n  saveColumnState() {\n    const allState = this.columnApi.getColumnState();\n    const localColumnState = allState.map((state: any) => ({\n      colId: state.colId,\n      sort: state.sort,\n      sortIndex: state.sortIndex,\n      aggFunc: state.aggFunc,\n      flex: state.flex,\n      pinned: state.pinned,\n      pivot: state.pivot,\n      pivotIndex: state.pivotIndex,\n      rowGroup: state.rowGroup,\n      rowGroupIndex: state.rowGroupIndex,\n      width: state.width\n    }));\n    localStorage.setItem(\"forecastColumnState\", JSON.stringify(localColumnState));\n  }\n\n  ngOnInit(): void {\n    this.loginService.checkPromise().subscribe(\n      res => {\n        if(res[0] == \"KO\"){\n          localStorage.removeItem(\"id_session\");\n          this.router.navigate(['login']);\n        }\n      }\n    );\n\n\n    //retrieve data from db\n    this.getAllForecastData();\n    \n    /*setTimeout(\n      () => {\n        this.api = this.agGrid.api;\n        this.logAPI();\n      }, 300);\n      */\n  }\n\n  logAPI(){\n    console.log(this.api);\n  }\n\n  setId(id: string){\n    this.id = id;\n  }\n\n  getAllForecastData() {\n    this.isLoading = true;\n    this.forecastService.listForecastsPromise(this.year).subscribe(\n      res1 => {\n        if(res1[0] == \"KO\") {\n          console.error(\"Error retrieving forecasts for year \" + this.year) + \"!\";\n        }\n        else {\n          this.forecasts = res1[1];\n          //console.log(this.forecasts);\n          this.usersService.listUsersPromise(\"210\").subscribe(\n            res2 => {\n              if(res2[0] == \"KO\") {\n                console.error(\"Error retrieving users with code 210!\");\n              }\n              else {\n                this.users = res2[1];\n                //console.log(this.users);\n                this.pharmaRegistryService.listProductsPromise().subscribe(\n                  res3 => {\n                    if(res3[0] == \"KO\") {\n                      console.error(\"Error retrieving products!\");\n                    }\n                    else {\n                      this.products = res3[1];\n                      //console.log(this.products);\n                      this.createForecastGridRowData();\n                      //this.autoSizeColumns(false);\n                      //this.api.setDomLayout('autoHeight');\n                      this.isLoading = false;\n                    }\n                  }\n                )\n              }\n            }\n          )\n        }\n      }\n    )\n  }\n \n\n  listForecasts(year: string): void {    \n    this.forecastService.listForecastsPromise(year).subscribe(\n      res => {\n        //console.log(res);\n        if(res[0] == \"KO\"){\n          console.error(\"Error retrieving forecasts!\");\n        }\n        else{ \n          this.forecasts = res[1];\n          this.createForecastGridRowData();\n        }\n      }\n    );\n  }\n\n  createForecastGridRowData() {\n    this.forecastGridRowData = [];\n    for(var i = 0; i < this.forecasts.length; ++i) {\n      var newForecastGridRowData = {\n        id: this.forecasts[i].id,\n        anno: this.forecasts[i].anno,\n        username: this.forecasts[i].username,\n        full_username: this.getFullUsernameById(this.forecasts[i].username),\n        id_prd: this.forecasts[i].id_prd,\n        product_name: this.getProductNameById(this.forecasts[i].id_prd),\n        qta: this.forecasts[i].qta,\n        note: this.forecasts[i].note,\n        qta_approvata: this.forecasts[i].qta_approvata,\n        costo_unitario: this.forecasts[i].costo_unitario\n      };\n      this.forecastGridRowData.push(newForecastGridRowData);\n    }\n    //console.log(\"forecastGridRowData\");\n    //console.log(this.forecastGridRowData);\n  }\n\n  getFullUsernameById(id: string): string {\n    for(var i = 0; i < this.users.length; ++i) {\n      if(this.users[i].username == id) {\n        return this.users[i].client;\n      }\n    }\n    return \"\";\n  }\n\n  getProductNameById(id: string): string {\n    for(var i = 0; i < this.products.length; ++i) {\n      if(this.products[i].id == id) {\n        return this.products[i].des;\n      }\n    }\n    return \"\";\n  }\n\n  setForecast(id: string, anno: number, username: string, id_prd: string, qta: number, note: string, qta_approvata: number, costo_unitario: number){\n    let isAdding = false;\n    this.forecastService.setForecastPromise(\n      id, anno, \n      username, id_prd, qta, \n      note, qta_approvata, \n      costo_unitario, isAdding\n    )?.subscribe(\n      res => {\n        this.setLocally(id, anno, username, id_prd, qta, note, qta_approvata, costo_unitario);\n      }  \n    );\n  }\n\n  setLocally(id: string, anno: number, username: string, id_prd: string, qta: number, note: string, qta_approvata: number, costo_unitario: number){\n    for(let i = 0; i < this.forecasts.length; ++i){\n      if(id == this.forecasts[i].id){\n        this.forecasts[i].anno = anno;\n        this.forecasts[i].username = username;\n        this.forecasts[i].id_prd = id_prd;\n        this.forecasts[i].qta = qta;\n        this.forecasts[i].note = note;\n        this.forecasts[i].qta_approvata = qta_approvata;\n        this.forecasts[i].costo_unitario = costo_unitario;\n        //this.createForecastGridRowData();\n        //this.updateGrid();\n        return;\n      }\n    }\n  }\n\n  addForecast(anno: number, username: string, id_prd: string, qta: number, note: string, qta_approvata: number, costo_unitario: number){\n    this.forecastService.addForecastPromise(\n      anno, username, \n      id_prd, qta, note, \n      qta_approvata, costo_unitario\n    ).subscribe(\n      (res: string[]) => {\n        console.log(\"new forecast id: \" + res[1]);\n        let newForecast = {\n          id: res[1],\n          anno: anno,\n          username: username,\n          id_prd: id_prd,\n          qta: qta,\n          note: note,\n          qta_approvata: qta_approvata,\n          costo_unitario: costo_unitario\n        }\n        this.addLocally(newForecast);\n        this.snackbarService.onCreate();\n      }\n    );\n  }\n\n  addLocally(newForecast: any){\n    //console.log(newForecast);\n    this.forecasts.push(newForecast);\n    this.forecastGridRowData.push({\n      id: newForecast.id,\n      anno: newForecast.anno,\n      username: newForecast.username,\n      full_username: this.getFullUsernameById(newForecast.username),\n      id_prd: newForecast.id_prd,\n      product_name: this.getProductNameById(newForecast.id_prd),\n      qta: newForecast.qta,\n      note: newForecast.note,\n      qta_approvata: newForecast.qta_approvata,\n      costo_unitario: newForecast.costo_unitario\n    });\n    \n\n    console.log(\"log API:\");\n    console.log(this.api);\n\n    //devo aggiungere un ForecastGridRowData\n    this.api.applyTransaction({\n      add: [{\n        id: newForecast.id,\n        anno: newForecast.anno,\n        username: newForecast.username,\n        full_username: this.getFullUsernameById(newForecast.username),\n        id_prd: newForecast.id_prd,\n        product_name: this.getProductNameById(newForecast.id_prd),\n        qta: newForecast.qta,\n        note: newForecast.note,\n        qta_approvata: newForecast.qta_approvata,\n        costo_unitario: newForecast.costo_unitario\n      }]\n    })\n    this.api.ensureIndexVisible(this.forecasts.length - 1);\n  }\n\n  rmForecast(id: string){\n    var rmForecastPromise = this.forecastService.rmForecastPromise(id);\n    if(rmForecastPromise != null){\n      rmForecastPromise.subscribe(\n        res => {\n          console.log(\"forecast with id \" + res[1] + \" successfully removed!\");\n          this.rmLocally(id);\n          this.snackbarService.onDelete();\n        }\n      );\n    }\n  }\n\n  rmLocally(id: string){\n    let visible = 0;\n    for(let i = 0; i < this.forecasts.length; ++i){\n      if(id == this.forecasts[i].id){\n        this.forecasts.splice(i, 1);\n        this.forecastGridRowData.splice(i, 1);\n        if(this.forecasts.length == 0){\n          //no-op\n        }\n        else{\n          //if it was the last index, make the current last index visible\n          if(i == this.forecasts.length){\n            visible = this.forecasts.length - 1;\n          }\n          //if it was not the last index, make the current i index visible\n          else{\n            visible = i;\n          }\n        }\n        //this.createForecastGridRowData();\n        //this.updateGrid();\n        this.removeRow(id);\n        //this.api.ensureIndexVisible(visible);\n        return;\n      }\n    }\n  }\n\n  removeRow(id: string) {\n    const toBeRemoved: any = [];\n    const rowNodes: any = [];\n    var forecast = this.getForecastGridRowDataById(id)!;\n    this.api.forEachNodeAfterFilterAndSort(function (rowNode: { data: any; }) {\n      console.log(rowNode);\n\n      if (rowNode.data.id != id) {\n        return;\n      }\n      \n      const data = rowNode.data;\n\n      toBeRemoved.push(data);\n      rowNodes.push(rowNode);\n    });\n    \n    const res = this.api.applyTransaction({ remove: toBeRemoved})!;\n    //this.api.redrawRows(rowNodes);\n    console.log(res);\n  }\n\n  getForecastGridRowDataById(id: string): ForecastGridRowData | null {\n    for(var i = 0; i < this.forecastGridRowData.length; ++i) {\n      if(this.forecastGridRowData[i].id == id) {\n        return this.forecastGridRowData[i];\n      }\n    }\n    return null;\n  }\n\n  openAddForecastDialog(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      anno: this.anno,\n      username: this.username,\n      id_prd: this.id_prd,\n      qta: this.qta,\n      note: this.note,\n      users: this.users,        //array of users\n      products: this.products   //array of products\n    }\n    \n    dialogConfig.width = \"95%\";\n    dialogConfig.maxHeight = \"500px\";\n\n    this.dialogRef = this.dialog.open(\n      AddForecastComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: {\n        anno: number,\n        username: string,\n        id_prd: string,\n        qta: number,\n        note: string,\n        qta_approvata: number,\n        costo_unitario: number,\n        isSubmitted: boolean\n    }) => {\n      if(result !== undefined && result.isSubmitted){\n        console.log(result);\n        if(\n          result.anno == null ||\n          result.anno.toString() == '' ||\n          result.username == '' ||\n          result.id_prd === undefined ||\n          result.qta.toString() == '' \n        ){\n          alert(\"All Forecast core fields must have a value before submission! Submission aborted.\");\n          return;\n        }\n        else{\n          this.addForecast(\n            result.anno,\n            result.username,\n            result.id_prd,\n            result.qta,\n            result.note,\n            result.qta_approvata,\n            result.costo_unitario\n          );\n          //this.updateGrid();\n        }\n      }\n    });\n  }\n\n  openAreYouSureDialog(){\n    this.dialogRef = this.dialog.open(\n      AreYouSureForecastComponent,\n      {\n        data:{\n          id: this.id\n        }\n      });\n    this.dialogRef.afterClosed().subscribe((result: {id: string, isSubmitted: boolean}) =>{\n      if(result !== undefined && result.isSubmitted){\n        this.rmForecast(result.id);\n        //this.updateGrid();\n      }\n    });\n  }\n\n  closeDialog(){\n    this.dialog.closeAll();\n    //this.listForecasts(this.year);\n    this.api.setRowData(this.forecasts);\n  }\n\n  updateGrid(){\n    console.log(this.api);\n    this.api.setRowData(this.forecastGridRowData);\n  }\n}\n","<div *ngIf=\"(loginService.getProfile() == '210' || loginService.getProfile() == '220')\">\n\t<nav\n\tclass=\"second-nav\">\n\t\t<h1>\n\t\t\t{{ \"Forecast registry\" | translate }}\n\t\t</h1>\n\t\t\n\t\t<button\n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Add forecast' | translate }}\" \n\t\tcolor=\"primary\"\n\t\t(click)=\"openAddForecastDialog()\">\n\t\t\t<i class=\"material-icons\">playlist_add</i>\n\t\t</button>\n\t\n\t\t<button \n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Refresh' | translate }}\" \n\t\tcolor=\"basic\"\n\t\t(click)=\"listForecasts(year)\">\n\t\t\t<i class=\"material-icons\">refresh</i>\n\t\t</button>\n\t\n\t\t<input \n\t\tmatInput \n\t\ttype=\"number\"\n\t\tplaceholder=\"{{ 'Reference year' | translate }}\" \n\t\t[(ngModel)]=\"year\" \n\t\tstyle=\"width: 50px;\" \n\t\t(change)=\"listForecasts(year)\">\n\t</nav>\n\n\t<ag-grid-angular\n\t\tclass=\"ag-theme-material  ag-grid-table\"\n\t\t[getRowId]=\"getRowId\"\n\t\t[rowData]=\"forecastGridRowData\"\n\t\t[columnDefs]=\"forecastGridConfig\"\n\t\t[defaultColDef]=\"defaultColDef\"\n\t\t[alwaysShowHorizontalScroll]=\"true\"\n\t\t[alwaysShowVerticalScroll]=\"true\"\n\t\t[gridOptions]=\"gridOptions\"\n\t\t[localeText]=\"localeText\"\n\t\t[animateRows]=\"true\"\n\t\t(columnResized)=\"saveColumnState()\"\n\t\t(columnVisible)=\"saveColumnState()\"\n\t\t(columnPivotChanged)=\"saveColumnState()\"\n\t\t(columnRowGroupChanged)=\"saveColumnState()\"\n\t\t(columnValueChanged)=\"saveColumnState()\"\n\t\t(columnMoved)=\"saveColumnState()\"\n\t\t(columnPinned)=\"saveColumnState()\"\n\t\t(gridReady)=\"onGridReady($event)\"\n\t\t(firstDataRendered)=\"onFirstDataRendered($event)\">\n\t</ag-grid-angular>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>{{ 'Home' | translate }}</h1>\n<section>\n\t<article>\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin et tortor egestas, vulputate tellus sed, fermentum mauris. Cras et sagittis tellus. Quisque eu scelerisque ante, sit amet commodo leo. Fusce interdum mollis nisl, bibendum euismod nunc. Morbi nisi felis, faucibus ac ultricies sit amet, auctor ut libero. Donec imperdiet suscipit rhoncus. Aenean eget nisi enim.\n\t</article>\n\t<article>\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin et tortor egestas, vulputate tellus sed, fermentum mauris. Cras et sagittis tellus. Quisque eu scelerisque ante, sit amet commodo leo. Fusce interdum mollis nisl, bibendum euismod nunc. Morbi nisi felis, faucibus ac ultricies sit amet, auctor ut libero. Donec imperdiet suscipit rhoncus. Aenean eget nisi enim.\n\t</article>\n\t<article>\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin et tortor egestas, vulputate tellus sed, fermentum mauris. Cras et sagittis tellus. Quisque eu scelerisque ante, sit amet commodo leo. Fusce interdum mollis nisl, bibendum euismod nunc. Morbi nisi felis, faucibus ac ultricies sit amet, auctor ut libero. Donec imperdiet suscipit rhoncus. Aenean eget nisi enim.\n\t</article>\n\t<article>\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin et tortor egestas, vulputate tellus sed, fermentum mauris. Cras et sagittis tellus. Quisque eu scelerisque ante, sit amet commodo leo. Fusce interdum mollis nisl, bibendum euismod nunc. Morbi nisi felis, faucibus ac ultricies sit amet, auctor ut libero. Donec imperdiet suscipit rhoncus. Aenean eget nisi enim.\n\t</article>\n\t<article>\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin et tortor egestas, vulputate tellus sed, fermentum mauris. Cras et sagittis tellus. Quisque eu scelerisque ante, sit amet commodo leo. Fusce interdum mollis nisl, bibendum euismod nunc. Morbi nisi felis, faucibus ac ultricies sit amet, auctor ut libero. Donec imperdiet suscipit rhoncus. Aenean eget nisi enim.\n\t</article>\n\t<article>\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin et tortor egestas, vulputate tellus sed, fermentum mauris. Cras et sagittis tellus. Quisque eu scelerisque ante, sit amet commodo leo. Fusce interdum mollis nisl, bibendum euismod nunc. Morbi nisi felis, faucibus ac ultricies sit amet, auctor ut libero. Donec imperdiet suscipit rhoncus. Aenean eget nisi enim.\n\t</article>\n\t<article>\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin et tortor egestas, vulputate tellus sed, fermentum mauris. Cras et sagittis tellus. Quisque eu scelerisque ante, sit amet commodo leo. Fusce interdum mollis nisl, bibendum euismod nunc. Morbi nisi felis, faucibus ac ultricies sit amet, auctor ut libero. Donec imperdiet suscipit rhoncus. Aenean eget nisi enim.\n\t</article>\n\t<article>\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin et tortor egestas, vulputate tellus sed, fermentum mauris. Cras et sagittis tellus. Quisque eu scelerisque ante, sit amet commodo leo. Fusce interdum mollis nisl, bibendum euismod nunc. Morbi nisi felis, faucibus ac ultricies sit amet, auctor ut libero. Donec imperdiet suscipit rhoncus. Aenean eget nisi enim.\n\t</article>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ILoadingCellRendererAngularComp } from 'ag-grid-angular';\nimport { ILoadingCellRendererParams } from 'ag-grid-community';\n\n@Component({\n  selector: 'app-loading-cell-renderer',\n  templateUrl: './loading-cell-renderer.component.html',\n  styleUrls: ['./loading-cell-renderer.component.css']\n})\nexport class LoadingCellRendererComponent implements OnInit, ILoadingCellRendererAngularComp {\n  public params!: ILoadingCellRendererParams;\n\n  constructor() { }\n\n  agInit(params: ILoadingCellRendererParams<any>): void {\n    this.params;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div\n    class=\"ag-custom-loading-cell\"\n    style=\"padding-left: 10px; line-height: 25px;\"\n>\n<i class=\"fas fa-spinner fa-pulse\"></i>\n<span> {{ 'Loading' | translate }}... </span>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrderRow, Product } from 'src/environments/environment';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-loan-details-dialog',\n  templateUrl: './loan-details-dialog.component.html',\n  styleUrls: ['./loan-details-dialog.component.css']\n})\nexport class LoanDetailsDialogComponent implements OnInit {\n\n  orderRow: OrderRow = {\n    id: \"\",\n    id_ordine: \"\",\n    n_riga: 0,\n    id_prd: \"\",\n    username: \"\",\n    qta: 0,\n    motivazione: \"\",\n    qta_validata: 0,\n    qta_ricevuta: 0,\n    note: \"\"\n  };\n  products: Product[] = [];\n  productName = \"\";\n  productQty = 0;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      data: any,\n      orderRow: OrderRow,\n      products: Product[],\n    },\n    private ordersService: OrdersService\n  ) { \n    console.log(this.data.orderRow);\n    this.products = this.data.products;\n  }\n\n  ngOnInit(): void {\n  }\n\n  productIdToDes(id: string): string {\n    console.log(id);\n    for(var i = 0; i < this.data.products.length; ++i){\n      console.log(this.data.products[i].des);\n      if(id == this.data.products[i].id) {\n        return this.data.products[i].des;\n      }\n    }\n    return \"\";\n  }\n}\n","<h1\nmat-dialog-title \nalign=\"center\" \nstyle=\"text-align: center;\">\n    {{ 'Loan' | translate }} {{ data.data.id }}\n</h1>\n<div\nalign=\"center\">\n    <p>\n        <b>{{ 'Granted by' | translate }}:</b><br>{{data.data.full_username_from}}\n    </p>\n    <p>\n        <b>{{ 'To' | translate}}:</b><br>{{data.data.full_username_to}}\n    </p>\n    <p>\n        <b>{{ 'Product' | translate }}:</b><br>{{this.productIdToDes(data.orderRow.id_prd)}}\n    </p>\n    <p>\n        <b>{{ 'Quantity' | translate }}:</b><br>{{data.orderRow.qta}}\n    </p>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { CellClickedEvent, CellValueChangedEvent, ColumnState, ColumnStateParams, GetRowIdFunc, GetRowIdParams, GridApi } from 'ag-grid-community';\nimport { environment, Forecast, LoanGridRowData, Order, OrderRow, OrderStatus, Product, User } from 'src/environments/environment';\nimport { AG_GRID_LOCALE_EN, AG_GRID_LOCALE_IT, defaultColDef, gridConfigLoans210, gridConfigLoans220 } from 'src/environments/grid-configs';\nimport { AddLoanDialogComponent } from '../add-loan-dialog/add-loan-dialog.component';\nimport { ForecastService } from '../forecast.service';\nimport { LoginService } from '../login.service';\nimport { OrdersService } from '../orders.service';\nimport { PharmaRegistryService } from '../pharma-registry.service';\nimport { SnackbarService } from '../snackbar.service';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-loans',\n  templateUrl: './loans.component.html',\n  styleUrls: ['./loans.component.css']\n})\nexport class LoansComponent implements OnInit {\n\n  order: Order = {\n    id: \"\",\n    anno: 0,\n    mese: 0,\n    username: \"\",\n    d_ordine: \"\", \n    n_ordine: 0,\n    b_urgente: false,\n    b_extra: false,\n    b_validato: false,\n    d_validato: \"\",\n    status: \"\",\n    note: \"\",\n    d_consegna_prevista: \"\",\n    n_ddt: \"\",\n    d_ddt: \"\",\n    note_consegna: \"\",\n    b_prestito: false,\n    id_ordine_prestito: \"\",\n    username_prestito_a: \"\",\n    username_prestito_da: \"\"\n  }\n\n  dataCount = 0;\n\n  year: string = new Date().getFullYear().toString();\n  products: Product[] = [];\n  users: User[] = [];\n  forecasts: Forecast[] = [];\n  orders: Order[] = [];\n  loans: Order[] = [];\n  loanGridRowData: LoanGridRowData[] = [];\n\n  dialogRef: any;\n  dialog: any;\n\n  userCode = \"\";\n\n  localeText = (environment.currentLanguage == 'it' ? AG_GRID_LOCALE_IT : AG_GRID_LOCALE_EN);\n\n  //agGrid config\n  ordersGridConfig!: any;\n  defaultColDef: any = defaultColDef;\n  gridOptions: any;\n\n  //agGrid API handles\n  @ViewChild(AgGridAngular) agGrid!: AgGridAngular;\n  gridApi!: GridApi;\n  api: any;\n  columnApi: any;\n  loginService!: LoginService;\n  \n  public getRowId: GetRowIdFunc = (params: GetRowIdParams) => {\n    return params.data.id;\n  };\n  \n  constructor(\n    loginService: LoginService,\n    private pharmaRegistryService: PharmaRegistryService,\n    private usersService: UsersService,\n    private forecastService: ForecastService,\n    private ordersService: OrdersService,\n    dialog: MatDialog,\n    private router: Router,\n    private snackbarService: SnackbarService\n  ) { \n    this.loginService = loginService;\n    this.dialog = dialog;\n    //this.getData();\n    this.loginService.getCurrentUserSync();\n\n    this.userCode = this.loginService.getUserCode()!;\n\n    if(this.loginService.getUserCode() == \"210\") {\n      this.ordersGridConfig = gridConfigLoans210;\n    }\n    if(this.loginService.getUserCode() == \"220\") {\n      this.ordersGridConfig = gridConfigLoans220;\n    }\n    //gridOptions\n    this.gridOptions = {\n      onCellClicked: (event: CellClickedEvent) => {\n        //console.log(event);\n      },\n      onCellValueChanged: (event: CellValueChangedEvent) => {                \n        //console.log(\"Changed from \" + event.oldValue + \" to \" + event.newValue);\n        //if row is not locked and an update is received, perform update\n        this.order.id = event.data.id;\n        this.order.anno = event.data.anno;\n        this.order.username = event.data.username;\n        this.order.d_ordine = event.data.d_ordine;\n        this.order.n_ordine = event.data.n_ordine;\n        this.order.b_urgente = event.data.b_urgente;\n        this.order.b_extra = event.data.b_extra;\n        this.order.b_validato = event.data.b_validato;\n        this.order.d_validato = event.data.d_validato;\n        this.order.n_ddt = event.data.n_ddt;\n        this.order.d_ddt = event.data.d_ddt;\n        this.order.d_consegna_prevista = event.data.d_consegna_prevista;\n        this.order.note = event.data.note;   \n        this.order.note_consegna = event.data.note_consegna\n        \n        //not adding but editing\n        let isAdding = false;\n        let orderStatus = {\n          id: \"0\",\n          username: localStorage.getItem('sangue_username')!,\n          id_order: event.data.id,\n          d_status: this.getFormattedDate(new Date()),\n          status: \"prestito\",\n          note: \"Prestito richiesto da \" + localStorage.getItem('sangue_username'),\n          b_sto: false\n        }\n      }\n    }\n  }\n\n  onGridReady = (params: { api: any; columnApi: any; }) => {\n    this.api = params.api;\n    //console.log(this.api);\n    this.columnApi = params.columnApi;\n    //this.api.sizeColumnsToFit();\n    //this.autoSizeColumns(false);\n    this.getData();\n  }\n\n  autoSizeColumns(skipHeader: boolean) {\n    const allColumnIds: string[] = [];\n    this.columnApi.getColumns()!.forEach((column: { getId: () => string; }) => {\n      allColumnIds.push(column.getId());\n    });\n    this.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n  }\n\n  onFirstDataRendered = (event: any) => {\n    this.retrieveColumnState();\n  }\n  \n  retrieveColumnState() {\n    const localColumnState = localStorage.getItem(\"loansColumnState\");\n    //console.log(\"Column state:\");\n    //console.log(localColumnState);\n    if(localColumnState != null) {\n      console.log(JSON.parse(localColumnState));\n      this.columnApi.applyColumnState({state: JSON.parse(localColumnState), applyOrder: true});\n    }\n  }\n\n  saveColumnState() {\n    const allState = this.columnApi.getColumnState();\n    const localColumnState = allState.map(\n      (state: any) => ({\n          colId: state.colId,\n          sort: state.sort,\n          sortIndex: state.sortIndex,\n          aggFunc: state.aggFunc,\n          flex: state.flex,\n          pinned: state.pinned,\n          pivot: state.pivot,\n          pivotIndex: state.pivotIndex,\n          rowGroup: state.rowGroup,\n          rowGroupIndex: state.rowGroupIndex,\n          width: state.width\n        }));\n    \n   /*\n    let localColumnState = this.columnApi.getColumnState();\n    for(let i = 0; i < localColumnState.length; ++i) {\n      localColumnState[i].sortIndex = i;\n    }\n    */\n    console.log(localColumnState);\n    localStorage.setItem(\"loansColumnState\", JSON.stringify(localColumnState));\n  }\n\n  ngOnInit(): void {\n  }\n\n  getData() {\n    this.dataCount = 0;\n    if(environment.globalUsers.length == 0) {\n      //console.log(\"Getting users...\");\n      this.getUsersGlobally();\n    }\n    else {\n      this.users = environment.globalUsers;\n      this.dataCount++;\n      this.createLoanGridRowData();\n    }\n\n    if(environment.globalProducts.length == 0) {\n      //console.log(\"Getting products...\");\n      this.getProductsGlobally();\n    }\n    else {\n      this.products = environment.globalProducts;\n      this.dataCount++;\n      this.createLoanGridRowData();\n    }\n\n    if(environment.globalForecasts.length == 0) {\n      //console.log(\"Getting forecasts...\");\n      this.getForecastsGlobally(this.year);\n    }\n    else {\n      this.forecasts = environment.globalForecasts;\n      this.dataCount++;\n      this.createLoanGridRowData();\n    }\n\n    if(environment.globalOrders.length == 0 || environment.globalOrders.length != this.orders.length) {\n      //console.log(\"Getting loans...\");\n      this.getLoansGlobally(this.year);\n    }\n    else {\n      this.orders = environment.globalOrders;\n      this.filterLoans();\n      this.dataCount++;\n      this.createLoanGridRowData();\n    }\n  }\n\n  listLoans(year: string) {\n    this.ordersService.listOrdersPromise(year).subscribe(\n      res => {\n        if(res[0] != \"KO\") {\n          this.orders = res[1];\n          this.filterLoans();\n          this.createLoanGridRowData();\n          //this.getAllOrderStatusRec(this.orders, 0);\n        }\n        else {\n          this.loginService.logoutPromise().subscribe(\n            res => {\n              this.router.navigate([\"\"]);\n            }\n          )\n        }\n      }\n    );\n  }\n\n  getUsersGlobally() {\n    this.usersService.listUsersPromise('210').subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          ////console.log(res[1]);\n          this.users = res[1];\n          environment.globalUsers = res[1];\n          this.dataCount++;\n          this.createLoanGridRowData();\n          this.loginService.getCurrentUser(this.users);\n        }\n        else {\n          console.error(\"Error retrieving users globally!\");\n        }\n      }\n    );\n  }\n\n  getProductsGlobally() {\n    this.pharmaRegistryService.listProductsPromise().subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          //console.log(res[1]);\n          this.products = res[1];\n          environment.globalProducts = res[1];\n          this.dataCount++;\n          this.createLoanGridRowData();\n        }\n        else {\n          console.error(\"Error retrieving products globally!\");\n        }\n      }\n    );\n  }\n\n  getForecastsGlobally(year: string) {\n    this.forecastService.listForecastsPromise(year).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          //console.log(res[1]);\n          this.forecasts = res[1];\n          environment.globalForecasts = res[1];\n          this.dataCount++;\n          this.createLoanGridRowData();\n        }\n        else {\n          console.error(\"Error retrieving forecasts globally\");\n        }\n      }\n    );\n  }\n\n  getLoansGlobally(year: string) {\n    this.ordersService.listOrdersPromise(year).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          console.log(res[1]);\n          this.orders = res[1];\n          environment.globalOrders = res[1];\n          this.filterLoans();\n          this.dataCount++;\n          this.createLoanGridRowData();\n        }\n        else {\n          console.error(\"Error retrieving orders globally!\");\n        }\n      }\n    );\n  }\n\n  filterLoans() {\n    this.loans = [];\n    for(var i = 0; i < this.orders.length; ++i) {      \n      if(this.orders[i].status == \"prestito\") {\n        //if user 220 add all\n        //if user 210 add only given and received\n        if(this.loginService.getUserCode() == \"220\"){\n          this.loans.push(this.orders[i]);\n        }\n        if(this.loginService.getUserCode() == \"210\"){\n          if(this.orders[i].username == localStorage.getItem(\"sangue_username\") || this.orders[i].username_prestito_a == localStorage.getItem(\"sangue_username\")) {\n            this.loans.push(this.orders[i]);\n          }\n        }\n      }\n    }\n    console.log(this.loans);\n  }\n\n  openAddLoanDialog() {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      users: this.users,\n      products: this.products,\n      forecasts: this.forecasts,\n    }\n\n    dialogConfig.width = \"95%\";\n    dialogConfig.maxHeight = \"500px\";\n        \n    this.dialogRef = this.dialog.open(\n      AddLoanDialogComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: { \n        newLoanReq: Order, \n        newLoanRes: Order, \n        newLoanRowReq: OrderRow, \n        newLoanRowRes: OrderRow, \n        isSubmitted: boolean \n      }) => {\n        if(result !== undefined){\n          if(result.isSubmitted){\n            /*\n            //console.log(result.newLoanReq);\n            //console.log(result.newLoanRowReq);\n            //console.log(result.newLoanRes);\n            //console.log(result.newLoanRowRes);\n            */\n            this.setLoan(result.newLoanReq, result.newLoanRowReq, result.newLoanRes, result.newLoanRowRes, true);\n          }\n        }\n      }\n    );\n  }\n\n  getFormattedDate(date: Date): string {\n    let splitDate = date.toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 3);\n    \n    let day = splitDate[0];\n    let month = splitDate[1];\n    let year = splitDate[2];\n\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    return year + \"-\" + month + \"-\" + day;  \n  }\n\n  setLoan(loanReq: Order, loanRowReq: OrderRow, loanRes: Order, loanRowRes: OrderRow, isAdding: boolean) {\n    ////console.log(loanReq);\n    //loanReq.b_prestito\n    this.ordersService.setOrderPromise(loanReq, isAdding).subscribe(\n      res1 => {\n        if(res1[0] == \"OK\") {\n          //loanReq missing fields\n          loanReq.id = res1[1][0];\n          loanReq.id_ordine_prestito = res1[1][0];\n          loanReq.n_ordine = res1[1][1];\n\n          //console.log(\"update>>>loanReq\");\n          //console.log(loanReq);\n          loanRes.id_ordine_prestito = res1[1][0];\n          this.ordersService.setOrderPromise(loanReq, !isAdding).subscribe(\n            res11 => {\n              if(res11[0] == \"OK\") {\n\n              }\n              else {\n                console.error(\"Error setting loan!\");\n              }\n            }\n          );\n          \n          ////console.log(loanRes);\n          this.ordersService.setOrderPromise(loanRes, isAdding).subscribe(\n            res2 => {\n              if(res2[0] == \"OK\") {\n                loanRes.id = res2[1][0];\n                loanRes.n_ordine = res2[1][1];\n                loanRes.id_ordine_prestito = res1[1][0];\n                loanRowRes.id_ordine = res2[1][0];\n                //console.log(\"update>>>loanRes\");\n                //console.log(loanRes);\n                \n                //loanRows\n                loanRowReq.id_ordine = loanReq.id;\n                loanRowRes.id_ordine = loanRes.id;\n                //console.log(loanRowReq);\n\n                this.ordersService.setOrderRowPromise(loanRowReq, isAdding).subscribe(\n                  resLrReq => {\n                    if(resLrReq[0] == \"OK\") {\n                      loanRowReq.id = resLrReq[1];\n                      this.setLoanLocally(loanReq);\n                      //console.log(\"update>>>loanRowReq\");\n                      //console.log(loanRowReq);\n                    }\n                    else {\n                      //console.error(\"Error setting loan row request!\");\n                    }\n                  }\n                );\n\n                loanRowRes.id_ordine = res2[1][0];\n                //console.log(loanRowRes);\n                this.ordersService.setOrderRowPromise(loanRowRes, isAdding).subscribe(\n                  resLrRes => {\n                    if(resLrRes[0] == \"OK\") {\n                      loanRowRes.id = resLrRes[1];\n                      //console.log(\"update>>>loanRowRes\");\n                      //console.log(loanRowRes);\n                    }\n                    else {\n                      console.error(\"Error setting loan row response!\");\n                    }\n                  }\n                );\n\n                let orderStatusReq: OrderStatus = {\n                  id: \"0\",\n                  username: loanReq.username,\n                  id_order: loanReq.id,\n                  d_status: loanReq.d_ordine,           \n                  status: \"prestito\",\n                  note: loanReq.username + \" concede prestito a \" + loanRes.username,\n                  b_sto: false\n                }\n\n                let orderStatusRes: OrderStatus = {\n                  id: \"0\",\n                  username: loanRes.username,\n                  id_order: loanRes.id,\n                  d_status: loanRes.d_ordine,           \n                  status: \"prestito\",\n                  note: loanRes.username + \" riceve prestito da \" + loanReq.username,\n                  b_sto: false\n                }\n\n                this.ordersService.setOrderStatusPromise(orderStatusReq).subscribe(\n                  res3 => {\n                    if(res3[0] == \"OK\") {\n                      //this.setLoanLocally();\n                    }\n                    else {\n                      console.error(\"Error setting loanReq!\");\n                    }\n                  }\n                );\n\n                this.ordersService.setOrderStatusPromise(orderStatusRes).subscribe(\n                  res3 => {\n                    if(res3[0] == \"OK\") {\n                      //this.setLoanLocally();\n                    }\n                    else {\n                      //console.error(\"Error setting loanReq!\");\n                    }\n                  }\n                );\n              }\n              else {\n                console.error(\"Error setting loanRes!\");\n              }\n            }\n          );\n        }\n        else {\n          console.error(\"Error setting loanReq!\");\n        }\n      }\n    );\n  }\n\n  setLoanLocally(loan: Order){\n    let newLoanGridRowData = {\n      id: loan.id,\n      anno: loan.anno,\n      username: loan.username,\n      full_username_from: this.getClientByUsername(loan.username_prestito_da)!,\n      full_username_to: this.getClientByUsername(loan.username_prestito_a)!,\n      d_ordine: loan.d_ordine,\n      n_ordine: loan.n_ordine,\n      note: loan.note,\n      b_prestito: loan.b_prestito,\n      id_ordine_prestito: loan.id_ordine_prestito\n    }\n\n    this.loanGridRowData.push(newLoanGridRowData);\n    //this.orders.push(loan);\n    this.api.applyTransaction({\n      add: [{\n        id: loan.id,\n      anno: loan.anno,\n      username: loan.username,\n      full_username_from: this.getClientByUsername(loan.username_prestito_da)!,\n      full_username_to: this.getClientByUsername(loan.username_prestito_a)!,\n      d_ordine: loan.d_ordine,\n      n_ordine: loan.n_ordine,\n      note: loan.note,\n      b_prestito: loan.b_prestito,\n      id_ordine_prestito: loan.id_ordine_prestito\n      }]\n    });\n    this.orders.push(loan);\n    //this.api.ensureIndexVisible(this.orderGridRowData.length - 1);\n    //this.createOrderGridRowData();\n    this.snackbarService.onCreate();\n  }\n\n  createLoanGridRowData() {\n    console.log(this.dataCount);\n    \n    if(this.dataCount == 4) {\n      this.dataCount = 0;\n      this.loanGridRowData = [];\n      //n_ordine, d_ordine, username_from, username_to?, note, buttonLoanDetails...\n      console.log(this.loans);\n      for(var i = 0; i < this.loans.length; ++i) {\n        if(this.loans[i].status == \"prestito\" && this.loans[i].anno.toString() == this.year) {\n          //console.log(this.loans[i]);\n          let newLoanGridRowData = {\n            id: this.loans[i].id,\n            anno: this.loans[i].anno,\n            mese: this.loans[i].mese,\n            username: this.loans[i].username,\n            full_username_from: this.getClientByUsername(this.loans[i].username_prestito_da)!,\n            full_username_to: this.getClientByUsername(this.loans[i].username_prestito_a)!,\n            d_ordine: this.loans[i].d_ordine,\n            n_ordine: this.loans[i].n_ordine,\n            note: this.loans[i].note,\n            b_prestito: this.loans[i].b_prestito,\n            id_ordine_prestito: this.loans[i].id_ordine_prestito\n          }\n          this.loanGridRowData.push(newLoanGridRowData);\n        }\n      }\n      console.log(this.loanGridRowData);\n      //this.api.setRowData(this.loanGridRowData);\n    }\n  }\n\n  getClientByUsername(username: string): string | null {\n    for(var i = 0; i < this.users.length; ++i) {\n      if(this.users[i].username == username) {\n        //console.log(this.users[i].username);\n        return this.users[i].client;\n      }\n    }\n    return null;\n  }\n\n  getToClientByIdAndIdOrdinePrestito(id: string): string | null {\n    //console.log(\"id: \" + id);\n    //console.log(\"id_p: \" + id_ordine_prestito);\n    \n    for(var i = 0; i < this.loans.length; ++i) {\n      if(this.loans[i].id_ordine_prestito == id) {\n        console.log(this.loans[i]);\n        return this.getClientByUsername(this.loans[i].username);\n      }\n    }\n    return null;\n  }\n}\n","<div\n*ngIf=\"(loginService.getProfile() == '210' || loginService.getProfile() == '220')\">\n\t<nav\n\tclass=\"second-nav\">\n\t\t<h1>\n\t\t\t{{ \"Loans\" | translate }}\n\t\t</h1>\n\t\t\n\t\t<button\n\t\t*ngIf=\"this.userCode == '210'\"\n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Add loan' | translate }}\" \n\t\tcolor=\"primary\"\n\t\t(click)=\"openAddLoanDialog()\">\n\t\t\t<i class=\"material-icons\">playlist_add</i>\n\t\t</button>\n\n\t\t<button \n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Refresh' | translate }}\" \n\t\tcolor=\"basic\"\n\t\t(click)=\"getData()\">\n\t\t\t<i class=\"material-icons\">refresh</i>\n\t\t</button>\n\n\t\t<input \n\t\tmatInput \n\t\ttype=\"number\"\n\t\tplaceholder=\"{{ 'Reference year' | translate }}\" \n\t\t[(ngModel)]=\"year\" \n\t\tstyle=\"width: 50px;\" \n\t\t(change)=\"getData()\">\n\t</nav>\n\t\n\t<ag-grid-angular\n\t\tclass=\"ag-theme-material ag-grid-table\"\n\t\t[getRowId]=\"getRowId\"\n\t\t[rowData]=\"loanGridRowData\"\n\t\t[columnDefs]=\"ordersGridConfig\"\n\t\t[defaultColDef]=\"defaultColDef\"\n\t\t[gridOptions]=\"gridOptions\"\n\t\t[alwaysShowHorizontalScroll]=\"true\"\n\t\t[alwaysShowHorizontalScroll]=\"true\"\n\t\t[localeText]=\"localeText\"\n\t\t[animateRows]=\"true\"\n\t\t(gridReady)=\"onGridReady($event)\"\n\t\t(columnResized)=\"saveColumnState()\"\n\t\t(columnVisible)=\"saveColumnState()\"\n\t\t(columnPivotChanged)=\"saveColumnState()\"\n\t\t(columnRowGroupChanged)=\"saveColumnState()\"\n\t\t(columnValueChanged)=\"saveColumnState()\"\n\t\t(columnMoved)=\"saveColumnState()\"\n\t\t(columnPinned)=\"saveColumnState()\"\n\t\t(firstDataRendered)=\"onFirstDataRendered($event)\"\n\t\t><!--rimosso (gridReady)=\"onGridReady($event)\"-->\n\t</ag-grid-angular>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-logged',\n  templateUrl: './logged.component.html',\n  styleUrls: ['./logged.component.css']\n})\nexport class LoggedComponent implements OnInit {\n  //TODO: DELETEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEeeeee\n  constructor(public loginService: LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>{{ 'Session ID' | translate }}: {{ loginService.getSession() }}</p>\n<p>{{ 'Profile ID' | translate }}: {{ loginService.getProfile() }}</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginService } from '../login.service';\nimport { UsersService } from '../users.service';\nimport { User, environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login-gateway',\n  templateUrl: './login-gateway.component.html',\n  styleUrls: ['./login-gateway.component.css']\n})\nexport class LoginGatewayComponent implements OnInit {\n  id_profile: string|null = \"\";\n  id_session: string|null = \"\";\n  users: User[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private loginService: LoginService,\n    private router: Router,\n    private usersService: UsersService,\n  ) { \n    \n  }\n\n  ngOnInit(): void {\n    this.id_profile = this.route.snapshot.queryParams['id_profilo'];\n    this.id_session = this.route.snapshot.queryParams['id_session'];\n    console.log(\"profile: \" + this.id_profile + \", session: \" + this.id_session)\n\n    this.loginService.checkPromiseParams(this.id_profile!, this.id_session!).subscribe(\n      res => {\n        console.log(res)\n        if(res[0] == \"OK\") {\n          localStorage.setItem(\"id_session\", this.id_session!);\n          localStorage.setItem(\"id_profile\", this.id_profile!);\n          localStorage.setItem(\"sangue_username\", res[1]);\n          \n          this.usersService.listUsersPromise(\"210\").subscribe(\n            res1 => {\n              if(res[0] == \"OK\") {\n                this.users = res1[1];\n                environment.globalUsers = res1[1];\n\n                switch(localStorage.getItem(\"id_profile\")) {\n                  case \"200\":\n                    this.loginService.currentUser.client = \"Amministratore Farmaci\";\n                    this.loginService.currentUser.id = localStorage.getItem(\"sangue_username\")!;\n                    localStorage.setItem(\"sangue_client\", this.loginService.currentUser.client);\n                    localStorage.setItem(\"sangue_username\", this.loginService.currentUser.id);\n                  break;\n            \n                  case \"220\":\n                    this.loginService.currentUser.client = \"ASL Amministratrice\";\n                    this.loginService.currentUser.id = localStorage.getItem(\"sangue_username\")!;\n                    localStorage.setItem(\"sangue_client\", this.loginService.currentUser.client);\n                    localStorage.setItem(\"sangue_username\", this.loginService.currentUser.id);\n                    break;\n            \n                  case \"230\":\n                    this.loginService.currentUser.client = \"Fornitore\";\n                    this.loginService.currentUser.id = localStorage.getItem(\"sangue_username\")!;\n                    localStorage.setItem(\"sangue_client\", this.loginService.currentUser.client);\n                    localStorage.setItem(\"sangue_username\", this.loginService.currentUser.id);\n                    break;\n            \n                  default: \n                    for(var i = 0; i < environment.globalUsers.length; ++i) {\n                      var auxUser: User = environment.globalUsers[i];\n                      if(auxUser.id == localStorage.getItem(\"sangue_username\")) {\n                        console.log(\"auxUser.id: \" + auxUser.id);\n                        this.loginService.currentUser.id = auxUser.id;\n                        this.loginService.currentUser.username = auxUser.username;\n                        this.loginService.currentUser.client = auxUser.client;   \n                        localStorage.setItem(\"sangue_client\", this.loginService.currentUser.client);\n                        localStorage.setItem(\"sangue_username\", this.loginService.currentUser.id);\n                      }\n                    }\n                    break;\n                }\n                this.router.navigate(['home']);\n              }\n              else{\n                console.error(\"Error retrieving users!\");\n                this.router.navigate(['login']);\n              }\n            }\n          );\n        }\n        else {\n          console.error(\"Authentication failed!\");\n          this.router.navigate(['login']);\n        }\n      }\n    );\n  }\n}\n","<h1>{{'Redirecting' | translate}}...</h1>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { environment, User } from 'src/environments/environment';\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  //fields\n  username!: string | null;\n  password!: string | null;\n  id_session!: string | null;\n  id_profile!: string | null;\n  logged: boolean = false;\n  currentUser: User = {\n    id: \"\", \n    username: \"\", \n    client: \"\"\n  };\n  users: User[] = [];\n\n  //constructor\n  constructor(\n    private http: HttpClient, \n    public router: Router,\n    private usersService: UsersService\n  ){ }\n\n  //methods\n  getSession(){\n    return localStorage.getItem(\"id_session\");\n  }\n\n  getProfile(){\n    return localStorage.getItem(\"id_profile\");\n  }\n\n  getUserCode(){\n    return localStorage.getItem('id_profile');\n  }\n\n  getUsername(){\n    return localStorage.getItem('sangue_username');\n  }\n\n  getUserType(){\n    let userType;\n    switch(localStorage.getItem('id_profile')){\n      case \"200\":\n        userType = \"admin\";\n        break;\n      case \"210\":\n        userType = \"A.S.L. Customer\";\n        break;\n      case \"220\":\n        userType = \"A.S.L. Novara\";\n        break;\n      case \"230\":\n        userType = \"Provider\";\n        break;\n      default:\n        userType = \"none\";\n        break;\n    }\n    return userType;\n  }\n\n  isLogged(){\n    this.check();\n    return this.logged;\n  }\n\n  isLoggedPromise() {\n    this.checkPromise().subscribe(\n      res => {\n        if(res[0] == \"KO\"){\n          this.router.navigate(['login']);\n          localStorage.removeItem(\"sangue_username\");\n        }\n        else {\n          \n        }\n      }\n    )\n  }\n\n  check(){\n    this.http.post<String[]>(\n      environment.basePath + 'session.php',\n      {\n        request: \"check\",\n        id_session: localStorage.getItem(\"id_session\")\n      }\n    ).subscribe(res  => {\n      if(res[0] == \"KO\"){\n        console.log(\"CHECK: NOT logged!\");\n        localStorage.removeItem(\"id_session\");\n        localStorage.removeItem(\"id_profile\");\n        localStorage.removeItem(\"sangue_username\");\n        localStorage.removeItem(\"sangue_client\");\n        this.logged = false;\n      }\n      else{\n        console.log(\"CHECK: logged with sessionID \" + localStorage.getItem(\"id_session\"));\n        this.logged = true;\n      }\n    })\n  }\n\n  checkPromise(): Observable<any> {\n    return this.http.post<String[]>(\n      environment.basePath + 'session.php',\n      {\n        request: \"check\",\n        id_session: localStorage.getItem(\"id_session\")\n      }\n    )\n  }\n\n  checkPromiseParams(id_profile: string, id_session: string): Observable<any> {\n    return this.http.post<String[]>(\n      environment.basePath + 'session.php',\n      {\n        request: \"check\",\n        id_session: id_session,\n        //id_profile: id_profile\n      }\n    )\n  }\n  \n  login(username: string, password: string){\n    this.http.post<String[]>(\n      environment.basePath + 'session.php', {\n      request: 'login',\n      sangue_username: username,\n      sangue_password: password\n    }).subscribe(res => {\n      if(res[0] == \"KO\"){\n        console.log(\"Login KO!\");\n        console.error(res[1].toString());\n        this.logged = false;\n      }\n      else{\n        console.log(\"Logged successfully!\");\n        localStorage.setItem(\"id_session\", res[1].toString());\n        localStorage.setItem(\"id_profile\", res[2].toString());\n        localStorage.setItem(\"sangue_username\", username);\n        this.logged = true;\n      }\n    });\n  }\n\n\n\n  loginPromise(username: string, password: string): Observable<any> {\n    return this.http.post<String[]>(\n      environment.basePath + 'session.php', {\n      request: 'login',\n      sangue_username: username,\n      sangue_password: password\n    })\n  }\n\n  logout(){\n    this.http.post<String[]>(\n      environment.basePath + 'session.php', {\n      request: 'logout',\n      id_session: localStorage.getItem(\"id_session\"),\n      sangue_username: localStorage.getItem(\"sangue_username\")\n    }).subscribe(res => {\n      if(res[0] == \"OK\"){\n        localStorage.removeItem(\"id_session\");\n        localStorage.removeItem(\"id_profile\");\n        localStorage.removeItem(\"sangue_username\");\n        localStorage.removeItem(\"sangue_client\")\n        console.log(\"Successfully logged out\");\n        this.logged = false;\n        //this.router.navigate(['/']);\n        document.location.href = environment.logoutPath;\n      }\n      else{\n        console.error(\"Error logging out!\");\n      }\n    })\n  }\n\n  logoutPromise(): Observable<any> {\n    return this.http.post<String[]>(\n      environment.basePath + 'session.php', {\n      request: 'logout',\n      id_session: localStorage.getItem(\"id_session\"),\n      sangue_username: localStorage.getItem(\"sangue_username\")\n    });\n  }\n\n  getCurrentUser(users: User[]) {\n    for(var i = 0; i < users.length; ++i) {\n      \n      if(users[i].id == localStorage.getItem(\"sangue_username\")) {\n        console.log(users[i].client);\n        this.currentUser.id = users[i].id;\n        this.currentUser.username = users[i].username;\n        this.currentUser.client = users[i].client;   \n        console.log(this.currentUser.client);\n        return;\n      }\n    }\n    this.currentUser.id = localStorage.getItem(\"sangue_username\")!;\n  }\n\n  getCurrentUserSync() {\n    switch(this.getUserCode()) {\n      case \"200\":\n        this.currentUser.client = \"Amministratore Farmaci\";\n        this.currentUser.username = \"sangueadmin\";\n      break;\n\n      case \"220\":\n        this.currentUser.client = \"ASL Amministratrice\";\n        this.currentUser.username = \"sangueaslno\";\n        break;\n\n      case \"230\":\n        this.currentUser.client = \"Fornitore\";\n        this.currentUser.username = \"sanguefornitore\";\n        break;\n\n      default: \n        if(this.users.length == 0) {   \n          this.usersService.listUsersPromise(\"210\").subscribe(\n            res => {\n              if(res[0] == \"OK\") {\n                this.users = res[1];\n                environment.globalUsers = res[1];\n                \n                for(var i = 0; i < this.users.length; ++i) {\n                  if(this.users[i].id == localStorage.getItem(\"sangue_username\")) {\n                    console.log(this.users[i].client);\n                    this.currentUser.id = this.users[i].id;\n                    this.currentUser.username = this.users[i].username;\n                    this.currentUser.client = this.users[i].client;   \n                  }\n                }\n\n                console.log(\"client: \" + this.currentUser.client);\n              }\n              else {\n                console.error(\"Error retrieving users\");\n              }\n            }\n          );\n        }\n        else {\n          for(var i = 0; i < this.users.length; ++i) {\n            if(this.users[i].id == localStorage.getItem(\"sangue_username\")) {\n              console.log(this.users[i].client);\n              this.currentUser.id = this.users[i].id;\n              this.currentUser.username = this.users[i].username;\n              this.currentUser.client = this.users[i].client;   \n            }\n          }\n          console.log(\"client: \" + this.currentUser.client);\n        }\n      break;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment, User } from 'src/environments/environment';\nimport { LoginService } from '../login.service';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  ngOnInit(): void {\n    this.check();\n    this.amILogged();\n  }\n\n  //fields\n  username = '';\n  password = '';\n  id_session!: string | null;\n  id_profile!: string | null;\n  logged: boolean = false;\n  private loginService: LoginService;\n  router: Router;\n  isBadLogin: boolean = false;\n  users: User[] = [];\n\n  //constructor\n  constructor(\n    loginService: LoginService, \n    router: Router,\n    private usersService: UsersService,\n  ) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n\n  //methods\n  getSession(){\n    return this.loginService.getSession();\n  }\n\n  getProfile(){\n    return this.loginService.getProfile();\n  }\n\n  isLogged(){\n    //was \"isLogged()\"\n    return this.loginService.isLoggedPromise();\n  }\n\n  check(){\n    //was \"check()\"\n    if(this.loginService.logged){\n      this.router.navigate(['home']);\n      return;\n    }\n\n    this.loginService.checkPromise().subscribe(\n      res => {\n        if(res[0] == \"KO\"){\n          localStorage.removeItem(\"id_session\");\n          localStorage.removeItem(\"id_profile\");\n          localStorage.removeItem(\"sangue_username\");\n          localStorage.removeItem(\"sangue_client\");\n          this.logged = false;\n          this.router.navigate(['login']);\n        }\n      }\n    )\n  }\n\n  amILogged() {\n    if(localStorage.getItem('id_session') != null) {\n      this.router.navigate(['home']);\n    }\n  }\n  \n  login(username: string, password: string){\n    this.loginService.loginPromise(username, password).subscribe(\n      res => {\n        if(res[0] == \"KO\") {\n          this.isBadLogin = true;\n          this.username = \"\";\n          this.password = \"\";\n        }\n        else {\n          this.isBadLogin = false;\n          localStorage.setItem(\"id_session\", res[1].toString());\n          localStorage.setItem(\"id_profile\", res[2].toString());\n          localStorage.setItem(\"sangue_username\", username);\n          this.loginService.logged = true;\n          this.getUsersGlobally();\n          \n          this.router.navigate(['home']);\n          //this.loginService.getCurrentUser();\n        }\n      }\n    );\n  }\n\n  getUsersGlobally() {\n    this.usersService.listUsersPromise('210').subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          console.log(res[1]);\n          this.users = res[1];\n          environment.globalUsers = res[1];\n          this.getCurrentUser(this.users);\n        }\n        else {\n          console.error(\"Error retrieving users globally!\");\n        }\n      }\n    );\n  }\n\n  getCurrentUser(users: User[]) {\n    for(var i = 0; i < users.length; ++i) {\n      \n      if(users[i].id == localStorage.getItem(\"sangue_username\")) {\n        console.log(users[i].client);\n        this.loginService.currentUser.id = users[i].id;\n        this.loginService.currentUser.username = users[i].username;\n        this.loginService.currentUser.client = users[i].client;\n        localStorage.setItem(\"sangue_client\", this.loginService.currentUser.client);   \n        environment.currentUser = this.loginService.currentUser;\n        console.log(this.loginService.currentUser.client);\n        return;\n      }\n    }\n    this.loginService.currentUser.id = localStorage.getItem(\"sangue_username\")!;\n  }\n\n\n\n  logout(){\n    this.loginService.logout();\n    //this.router.navigate(['https://servizi.regione.piemonte.it/catalogo/sistema-informativo-regionale-portale-medici-pediatri']);\n    document.location.href = environment.logoutPath;\n  }\n\n  onClick(){\n    console.log();\n  }\n}\n","<div \nlayout=\"row\" \nlayout-align=\"center\" \nalign=\"center\"\nstyle=\"margin: 10%;\">\n<mat-card\nstyle=\"width: fit-content;\">\n\t<h1>Login</h1>\n\t<p>\n\t\t<mat-form-field>\n\t\t\t<input \n\t\t\ttype=\"text\" \n\t\t\tplaceholder=\"Username\" \n\t\t\t[(ngModel)]=\"username\" \n\t\t\t(click)=\"onClick()\" \n\t\t\t(keyup.enter)=\"login(username, password)\"\n\t\t\tmatInput>\n\t\t</mat-form-field>\n\t</p>\n\t\n\t<p>\n\t\t<mat-form-field>\n\t\t\t<input \n\t\t\ttype=\"password\" \n\t\t\tplaceholder=\"Password\" \n\t\t\t[(ngModel)]=\"password\" \n\t\t\t(keyup.enter)=\"login(username, password)\"\n\t\t\tmatInput>\n\t\t</mat-form-field>\n\t</p>\n\n\t<p *ngIf=\"isBadLogin\" style=\"color: red;\">\n\t\t{{ 'Incorrect username and\\/or password' | translate }}!\n\t</p>\n\n\t<button \n\tmat-fab\n\tcolor=\"primary\" \n\tmatTooltip=\"{{ 'Login' | translate }}\"\n\t(click)=\"login(username, password)\">\n\t\t<i class=\"material-icons\">login</i>\n\t</button>\n</mat-card>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SendToSupplierDialogComponent } from '../send-to-supplier-dialog/send-to-supplier-dialog.component';\n\n@Component({\n  selector: 'app-mark-as-received-dialog',\n  templateUrl: './mark-as-received-dialog.component.html',\n  styleUrls: ['./mark-as-received-dialog.component.css']\n})\nexport class MarkAsReceivedDialogComponent implements OnInit {\n  orderId!: string;\n  isSubmitted: boolean = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { orderId: string, isValidated: boolean},\n    private dialogRef: MatDialogRef<SendToSupplierDialogComponent>\n  ) { \n    this.orderId = this.data.orderId \n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    //this.dialogRef.close({isSubmitted: this.isSubmitted});\n  }\n\n  onOK() {\n    this.dialogRef.close({isSubmitted: this.isSubmitted});\n  }\n\n  onCancel() {\n    this.dialogRef.close({isCancelled: true});\n  }\n}\n","<div\n*ngIf=\"!isSubmitted\">\n    <h2 align=\"center\">{{ 'Mark order' | translate }} {{ orderId }} {{ 'as received' | translate }}?</h2>\n    <div mat-dialog-actions align=\"center\">\n        <button mat-raised-button (click)=\"onSubmit()\" color=\"warn\">{{ 'Submit' | translate }}</button>\n        <button mat-raised-button matDialogClose=\"true\" (click)=\"onCancel()\" color=\"primary\">{{ 'Cancel' | translate }}</button>\n    </div>\n</div>\n<div\n*ngIf=\"isSubmitted\">\n    <h2 align=\"center\">{{ 'Order' | translate }} {{ orderId }} {{ 'marked as received' | translate }}!</h2>\n    <h3 align=\"center\">{{ 'You can now edit the received quantity of each product you ordered' | translate}}.</h3>\n    <div mat-dialog-actions align=\"center\">\n        <button mat-raised-button matDialogClose=\"true\" (click)=\"onOK()\" color=\"primary\">{{ 'Ok' | translate }}</button>\n    </div>\n</div>","import { Component,QueryList, OnInit, ViewChildren, ViewContainerRef } from '@angular/core';\nimport { ICellEditorAngularComp } from 'ag-grid-angular';\nimport { ICellEditorParams } from 'ag-grid-community';\n\n\n\n@Component({\n  selector: 'app-mat-input',\n  templateUrl: './mat-input.component.html',\n  styleUrls: ['./mat-input.component.css']\n})\nexport class MatInputComponent implements ICellEditorAngularComp {\n  private params!: ICellEditorParams;\n\n  public des!: string;\n  \n  @ViewChildren(\"input\", { read: ViewContainerRef })\n  public inputs!: QueryList<any>;\n  private focusedInput = 0;\n\n  agInit(params: ICellEditorParams): void {\n      this.params = params;\n\n      // simple implementation - we assume a full name consists of a first and last name only\n      this.des = this.params.value;\n//      this.lastName = this.params.value.split(\" \")[1];\n  }\n\n  // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\n  ngAfterViewInit() {\n      this.focusOnInputNextTick(this.inputs.first);\n  }\n\n  private focusOnInputNextTick(input: ViewContainerRef) {\n      window.setTimeout(() => {\n          input.element.nativeElement.focus();\n      }, 0);\n  }\n\n  getValue() {\n      return `${this.des}`;\n      //return `${this.des} ${this.lastName}`;\n  }\n\n  isPopup(): boolean {\n      return true;\n  }\n\n  /*\n   * A little over complicated for what it is, but the idea is to illustrate how you might tab between multiple inputs\n   * say for example in full row editing\n   */\n  onKeyDown(event: any): void {\n      const key = event.key;\n      if (key == 'Tab') {\n          // tab\n          this.preventDefaultAndPropagation(event);\n\n          // either move one input along, or cycle back to 0\n          this.focusedInput = this.focusedInput === this.inputs.length - 1 ? 0 : this.focusedInput + 1;\n\n          const focusedInput = this.focusedInput;\n          const inputToFocusOn = this.inputs.find((item: any, index: number) => {\n              return index === focusedInput;\n          });\n\n          this.focusOnInputNextTick(inputToFocusOn);\n      } else if (key == 'Enter') {\n          // Enter\n          // perform some validation on Enter - in this example we assume all inputs are mandatory\n          // in a proper application you'd probably want to inform the user that an input is blank\n          this.inputs.forEach(input => {\n              if (!input.element.nativeElement.value) {\n                  this.preventDefaultAndPropagation(event);\n                  this.focusOnInputNextTick(input);\n              }\n          });\n      }\n  }\n\n  private preventDefaultAndPropagation(event: any) {\n      event.preventDefault();\n      event.stopPropagation();\n  }\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { OrderDdtService } from '../order-ddt.service';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { SnackbarService } from '../snackbar.service';\nimport { environment, translations } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-order-ddt-upload-dialog',\n  templateUrl: './order-ddt-upload-dialog.component.html',\n  styleUrls: ['./order-ddt-upload-dialog.component.css']\n})\nexport class OrderDdtUploadDialogComponent implements OnInit {\n  progress: number = 0;\n  file: any;\n  public filename: string = \"\";\n  onlineFilename: string = \"\";\n  errors: string = \"\";\n  fileButton!: HTMLButtonElement;\n  fileInput!: HTMLInputElement;\n  selectedFile: File | null = null;\n  remoteFileSize: number = 0;\n  //dialogSelfRef: MatDialogRef;\n\n  fileExists: boolean = false;      //there already is a file online\n  isFileLoaded: boolean = false;    //success in uploading the file client-side \n  isFileUploaded: boolean = false;  //success in uploading the file on the server\n  loading: boolean = false;\n\n  filebase64: string = \"\";\n  maxFileSize: number = 20 * 1024 * 1024; //max file size is 20 MB\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      orderID: string,\n      orderNo: string,\n    },\n    private orderDdtService: OrderDdtService,\n    private snackbarService: SnackbarService,\n    private dialogRef: MatDialogRef<MatDialog>\n  ) {\n  }\n\n  ngOnInit(): void {\n    //this.connectListeners();\n    this.doesFileExist(this.data.orderID);\n  }\n\n  isPDF(file: File | null): boolean {\n    if(file == null)\n      return false;\n    return file?.type === \"application/pdf\" || file?.name.toLowerCase().endsWith(\".pdf\");\n  }\n\n  async onFileSelected(event: any): Promise<void> {\n    const fileInput = event.target;\n    if (fileInput.files.length > 0) {\n      this.selectedFile = fileInput.files[0];\n      if(this.selectedFile && this.selectedFile.size > this.maxFileSize) {\n        this.errors = \"The file you tried to upload exceeds the size limit by \" + (this.selectedFile.size - this.maxFileSize) + \" B.\";\n        return;\n      }\n\n      if(this.selectedFile && this.isPDF(this.selectedFile)) {\n        this.errors = \"\";\n        //encode in filebase64\n        try {\n          const base64String = await this.toBase64(this.selectedFile!);\n          \n          this.filename = this.selectedFile!.name;\n          this.filebase64 = base64String;\n\n          //console.log(\"Base64 Encoded File:\", this.filebase64);\n        } catch (error) {\n          console.error(\"Error encoding file:\", error);\n        }\n        return;\n      }\n      else {\n        this.selectedFile = null;\n        this.errors = \"File extension not supported: only PDF files are allowed.\\n\";\n      }\n    } else {\n      this.selectedFile = null;\n    }\n  }\n\n  toBase64(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        //remove \"type:application/pdf;base64,\" to correctly encode string\n        const base64String = (reader.result as string).split(\",\")[1];\n        //console.log(\"toBase64: \" + base64String);\n        resolve(base64String);\n      };\n\n      reader.onerror = (error) => {\n        reject(error);\n      };\n\n      reader.readAsDataURL(file);\n    })\n  }\n\n  uploadFile(orderID: string, filename: string, filebase64: string): void {\n    //console.log(\"orderID: \" + orderID + \", filename: \"+ filename + \", filebase64: \" + filebase64);\n    this.snackbarService.openSnackbar(environment.currentLanguage == \"it\" ? translations.it.FileUploadStarted : translations.en.FileUploadStarted);\n    this.orderDdtService.setOrderDdtPromise(orderID, filename, filebase64).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.onlineFilename = filename;\n          this.remoteFileSize = atob(filebase64).length;\n          this.isFileLoaded = false;\n          this.filebase64 = \"\";\n          this.selectedFile = null;\n          this.snackbarService.openSnackbar((environment.currentLanguage == \"it\" ? translations.it.FileUploadSuccessful : translations.en.FileUploadSuccessful) + \"\\n(\" + this.onlineFilename + \", \" + this.remoteFileSize + \" B)\");\n          //console.log(res);\n          this.dialogRef.close();\n        }\n        else {\n          console.error(\"Error uploading file \" + filename + \"!\");\n        }\n      }\n    );\n  }\n\n  doesFileExist(orderID: string) {\n    this.loading = true;\n    this.orderDdtService.getOrderDdtPromise(orderID).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          if(res[1].length > 0) {\n            //console.log(res[1][res[1].length - 1]);\n            this.remoteFileSize = this.getFileSize(res[1][res[1].length - 1].filebase64);\n            this.fileExists = true;\n            this.onlineFilename = res[1][res[1].length - 1].filename;\n            this.loading = false;\n          }\n          else {\n            this.fileExists = false;\n            this.loading = false;\n          }\n        }\n        else {\n          console.error(\"Error checking orderDdt file existence!\");\n        }\n      }\n    )\n  }\n\n  getFileSize(base64String: string): number {\n    if(base64String != \"\")\n      return atob(base64String).length;\n    return -1;\n  }\n/*\n  getNormalizedFileSizeString(size: number): string {\n    let multiplier = \"\";\n    let b = 1;\n    let kb = 1024;\n    let mb = 1024 * 1024;\n    let gb = 1024 * 1024 * 1024;\n    if(size < kb){\n\n    }\n    if(size)\n\n    let result = -1;\n    switch(multiplier) {\n      case \"b\":\n        result = size;\n        break;\n      case \"kb\":\n        result = Math.ceil(size/kb);\n        break;\n      case \"mb\":\n        result = Math.ceil(size/mb);\n        break;\n      case\"gb\":\n        result = Math.ceil(size/gb);\n        break;\n      default:\n        break;\n    }\n    return result + \" \"+ unit.toUpperCase();\n  }*/\n}","\n<h2>{{ 'File upload for order' | translate }} no.{{data.orderNo}}</h2>\n<!--p>Uploading progress: {{this.progress}}%</p-->\n\n<input type=\"file\" (change)=\"onFileSelected($event)\" #fileInput style=\"display: none;\" />\n<p *ngIf=\"loading\">{{ 'Loading' | translate}}...</p>\n<p *ngIf=\"fileExists\" style=\"color: green;\">{{ 'Current file' | translate }}: {{onlineFilename}} ({{remoteFileSize}} B)</p>\n<p *ngIf=\"!fileExists && !loading\" style=\"color: red;\">{{ 'No files associated to this order' | translate }}.</p>\n<p *ngIf=\"errors\" style=\"color: red;\">{{errors}}</p>\n<p *ngIf=\"selectedFile && !errors\">{{ 'Ready for upload' | translate }}: <b>{{ selectedFile.name }}</b></p>\n\n<div mat-dialog-actions align=\"center\">\n    <button \n    id=\"fileButton\"\n    style=\"margin: 5px;\"\n    mat-mini-fab \n    color=\"basic\"\n    (click)=\"fileInput.click()\"\n    matTooltip=\"{{'Add file' | translate}}\">\n        <i class=\"material-icons\">add</i>\n    </button>\n    \n    <button \n    style=\"margin: 5px;\"\n    mat-mini-fab\n    matTooltip=\"{{'Upload file' | translate}}\"\n    color=\"primary\"\n    disabled=\"{{!filebase64}}\"\n    (click)=\"uploadFile(data.orderID, filename, filebase64)\">\n        <i class=\"material-icons\">file_upload</i>\n    </button>\n\n    <button \n    style=\"margin: 5px;\"\n    mat-mini-fab\n    matTooltip=\"{{'Close' | translate}}\"\n    mat-dialog-close \n    color=\"accent\">\n        <i class=\"material-icons\">close</i>\n    </button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrderDDT, environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderDdtService {\n  url = environment.basePath + 'order.php';\n  orderDDT!: OrderDDT;\n\n  constructor(\n    private http: HttpClient\n  ) { \n\n  }\n\n  getOrderDdtPromise(orderID: string): Observable<any> {\n    let path = this.url + '?request=getOrderDDT&id_session='+localStorage.getItem('id_session')+'&id_order='+orderID;\n    //console.log(path);\n\n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    )\n  }\n\n  //to be called when the dialog closes\n  setOrderDdtPromise(orderID: string, filename: string, filebase64: string): Observable<any> {\n    return this.http.post<String[]>(\n      this.url, \n      {\n        request: 'setOrderDDT',\n        id_session: localStorage.getItem(\"id_session\"),\n        id_order: orderID,\n        filename: filename,\n        filebase64: filebase64 \n      }\n    )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from '../login.service';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-order-resume',\n  templateUrl: './order-resume.component.html',\n  styleUrls: ['./order-resume.component.css']\n})\nexport class OrderResumeComponent implements OnInit {\n\n  loginService!: LoginService\n  startDate!: string;\n  endDate!: string;\n\n  range = new FormGroup({\n    start: new FormControl<Date | null>(null),\n    end: new FormControl<Date | null>(null),\n  });\n  \n  constructor(\n    loginService: LoginService,\n    private ordersService: OrdersService\n  ) { \n    this.loginService = loginService;\n    let date = new Date();\n    this.range.controls['start'].setValue(date);\n    this.startDate = this.getFormattedDate(date);\n    console.log(this.startDate);\n    this.range.controls['end'].setValue(date);\n    this.endDate = this.getFormattedDate(date);\n    console.log(this.endDate);\n  }\n\n  ngOnInit(): void {\n  }\n\n  getFormattedDate(date: Date): string {\n    let splitDate = date.toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 3);\n    \n    let day = splitDate[0];\n    let month = splitDate[1];\n    let year = splitDate[2];\n\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    return year + \"-\" + month + \"-\" + day;  \n  }\n\n  onDateChange(type: string, event: any) {\n    console.log(event);\n    switch(type) {\n      case \"start\":\n        this.range.controls['start'] = new FormControl(new Date(event.value), Validators.required);\n        this.startDate = this.getFormattedDate(new Date(event.value));        \n        break;\n      case \"end\":\n        if(event.value == null) {\n          let newDate = new Date();\n          this.range.controls['end'] = new FormControl(new Date(event.value), Validators.required);\n        }\n        else {\n          this.range.controls['end'] = new FormControl(new Date(event.value), Validators.required);\n        }\n        this.endDate = this.getFormattedDate(new Date(event.value));\n        break;\n    }\n  }\n\n  getOrderResume() {\n    this.ordersService.getOrderResumePromise(this.startDate, this.endDate).subscribe(\n      (res: any) => {\n        if(res[0] == \"OK\") {\n          //console.log(res[1]);\n          //https://vm-portalmmg.sistemapiemonte.it/collector/\n          window.open(environment.reportPath + res[1][0].filename, \"_blank\");\n        }\n        else {\n          console.error(\"Error retrieving resume!\");\n        }\n      }\n    );\n  }\n}\n","<div\n*ngIf=\"loginService.getUserCode() == '210' || loginService.getUserCode() == '220'\">\n\t<nav\n\tclass=\"second-nav\">\n\t\t<h1>\n\t\t\t{{ \"Orders resume\" | translate }}\n\t\t</h1>\n\t\t\n\t\t<button\n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Back to orders' | translate }}\" \n\t\trouterLink=\"/orders\"\n\t\tcolor=\"primary\">\n\t\t\t<i class=\"material-icons\">arrow_back</i>\n\t\t</button>\n\t</nav>\n\n\t<div \nalign=\"center\"\nclass=\"container\">\n    <p>\n\t\t<mat-form-field>\n\t\t\t<mat-date-range-input \n\t\t\t[formGroup]=\"range\" \n\t\t\t[rangePicker]=\"picker\">\n\t\t\t  <input \n\t\t\t  matStartDate \n\t\t\t  formControlName=\"start\" \n\t\t\t  placeholder=\"{{ 'Start date' | translate }}\" \n\t\t\t  (dateChange)=\"onDateChange('start', $event)\">\n\t\n\t\t\t  <input \n\t\t\t  matEndDate \n\t\t\t  formControlName=\"end\" \n\t\t\t  placeholder=\"{{ 'End date' | translate }}\" \n\t\t\t  (dateChange)=\"onDateChange('end', $event)\">\n\t\t\t</mat-date-range-input>\n\t\t\t<mat-date-range-picker #picker>\n\t\t\t  <mat-date-range-picker-actions>\n\t\t\t\t<button \n\t\t\t\tmat-mini-fab\n\t\t\t\tstyle=\"margin: 5px;\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tmatTooltip=\"{{'Submit' | translate}}\" \n\t\t\t\tmatDateRangePickerApply>\n\t\t\t\t  <i class=\"material-icons\">check</i>\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t<button \n\t\t\t\tmat-mini-fab\n\t\t\t\tstyle=\"margin: 5px;\"\n\t\t\t\tmatTooltip=\"{{'Cancel' | translate}}\" \n\t\t\t\tmatDateRangePickerCancel>\n\t\t\t\t  <i class=\"material-icons\">close</i>\n\t\t\t\t</button>\n\t\t\t  </mat-date-range-picker-actions>\n\t\t\t</mat-date-range-picker>\n\t\t  \n\t\t\t<mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">{{ 'Invalid start date' | translate }}</mat-error>\n\t\t\t<mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">{{ 'Invalid end date' | translate }}</mat-error>\n\t\t  </mat-form-field>\n\t\t  <p>\n\t\t\t<button \n\t\t\tmat-fab \n\t\t\tcolor=\"primary\"\n\t\t\tmatTooltip=\"{{'Edit' | translate}}\"\n\t\t\t(click)=\"picker.open()\">\n\t\t\t  <i class=\"material-icons\">edit</i>\n\t\t\t</button>\n\n\t\t\t<button\n\t\t\tmat-fab\n\t\t\tstyle=\"margin: 5px;background-color: #1D6F42;\"\n\t\t\t\n\t\t\t(click)=\"getOrderResume()\"\n\t\t\tmatTooltip=\"{{'Download resume' | translate}}\">\n\t\t\t\t<i class=\"material-icons\">download</i>\n\t\t\t</button>\n\t\t  </p>\n</div>    \n\n</div>\n<footer>\n\t<p \n\t*ngIf=\"loginService.getUsername() != null\"\n\talign=\"center\">\n\t\t{{ 'Logged as' | translate }} <b>{{ loginService.currentUser.client }}</b>.\n\t</p>\n\t<p \n\t*ngIf=\"loginService.getUsername() == null\"\n\talign=\"center\">\n\t\t{{ 'You\\'re not logged!' | translate }} <a [routerLink]=\"['/login']\">{{ 'Login' | translate }}</a>\n\t</p>\t\n</footer>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderablePeriodService {\n  url = environment.basePath + \"anag.php\"\n  \n  constructor(\n    private http: HttpClient,\n    private loginService: LoginService\n  ) { }\n\n  getOrderPeriodPromise(): Observable<any> {\n    let requestType = \"getOrderPeriod\";\n    let id_session = localStorage.getItem('id_session');\n    let path = this.url + '?request=' + requestType + '&id_session=' + id_session;\n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    )\n  }\n\n  setOrderPeriodPromise(min: string, max: string): Observable<any> {\n    return this.http.post<String[]>(\n      this.url, {\n        request: 'setOrderPeriod',\n        id_session: localStorage.getItem('id_session'),\n        gg_min: min,\n        gg_max: max\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment, translations } from 'src/environments/environment';\nimport { LoginService } from '../login.service';\nimport { OrderablePeriodService } from '../orderable-period.service';\nimport { SnackbarService } from '../snackbar.service';\n\n@Component({\n  selector: 'app-orderable-period',\n  templateUrl: './orderable-period.component.html',\n  styleUrls: ['./orderable-period.component.css']\n})\nexport class OrderablePeriodComponent implements OnInit {\n  date!: UntypedFormControl;\n  formattedDate = \"\";\n  formattedStartDate = \"\";\n  formattedEndDate = \"\";\n  isSubmitted = false;\n  gg_min = \"\";\n  gg_max = \"\";\n  year = \"\";\n  month = \"\";\n\n  currentStartDate!: Date;\n  currentEndDate!: Date;\n  loginService!: LoginService;\n\n\n  constructor(\n    private orderablePeriodService: OrderablePeriodService,\n    private snackbarService: SnackbarService,\n    loginService: LoginService\n  ) { \n    this.year = new Date().getFullYear().toString();\n    this.month = new Date().getMonth().toString();\n    this.loginService = loginService;\n    this.loginService.getCurrentUserSync();\n  }\n\n  ngOnInit(): void {\n    this.getDates();\n  }\n\n  range = new FormGroup({\n    start: new FormControl<Date | null>(null),\n    end: new FormControl<Date | null>(null),\n  });\n\n  setOrderPeriod(min: string, max: string) {\n    this.orderablePeriodService.setOrderPeriodPromise(min, max).subscribe(\n      res => {\n        if(res[0] == \"OK\"){\n          //console.log(\"orderPeriod set!\");\n          let newDate = new Date();\n          this.range.controls['start'].setValue(new Date(newDate.getFullYear(), newDate.getMonth(), parseInt(min)));\n          this.gg_min = min;\n          this.range.controls['end'].setValue(new Date(newDate.getFullYear(), newDate.getMonth(), parseInt(max)));\n          this.gg_max = max;\n          this.snackbarService.onUpdate();\n        }\n        else {\n          console.error(\"Error setting orderPeriod!\");\n        }\n      }\n    );\n  }\n\n  getDates() {\n    this.orderablePeriodService.getOrderPeriodPromise().subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          let newDate = new Date();\n          //console.log(newDate); \n          this.range.controls['start'].setValue(new Date(newDate.getFullYear(), newDate.getMonth(), res[1].gg_min));\n          this.range.controls['end'].setValue(new Date(newDate.getFullYear(), newDate.getMonth(), res[1].gg_max));\n        }\n        else{\n          console.error(\"Error getting orderPeriod!\");\n        }\n      }\n    );\n  }\n\n  onDateChange(type: string, event: any) {\n   let fullLocaleDate = \"\";\n    //here it's better to keep the date type as Date because it's handled well by the datepicker\n    switch(type) {\n      case \"start\":\n        this.range.controls['start'] = new FormControl(new Date(event.value), Validators.required);\n        fullLocaleDate = this.range.controls.start.value!.toLocaleString('it-IT').split(\",\", 2)[0];        \n        break;\n      case \"end\":\n        if(event.value == null) {\n          let newDate = new Date();\n          this.range.controls['end'] = new FormControl(new Date(newDate.getFullYear(), newDate.getMonth(), parseInt(this.gg_max)), Validators.required);\n        }\n        else\n          this.range.controls['end'] = new FormControl(new Date(event.value), Validators.required);\n        fullLocaleDate = this.range.controls.end.value!.toLocaleString('it-IT').split(\",\", 2)[0];\n        break;\n    }\n\n    //split where the separators \"/\" are\n    let splittedDate = fullLocaleDate.split(\"/\", 3);\n    \n    let day = splittedDate[0];\n    let month = splittedDate[1];\n    let year = splittedDate[2];\n\n    //prepare date to be saved on db\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    \n    //check day is formatted correctly\n    day = this.checkDay(parseInt(day));\n\n    this.formattedDate = year + \"-\" + month + \"-\" + day;   \n    //console.log(this.formattedDate);\n    \n    if(type == \"start\") {\n      this.formattedStartDate = this.formattedDate;\n      this.gg_min = this.formattedDate.split(\"-\")[2];\n      if(this.gg_min > this.gg_max){\n        this.gg_max = this.gg_min;\n      }\n      this.setOrderPeriod(this.gg_min, this.gg_max);\n    }\n    else if(type == \"end\" && this.formattedDate != \"1970-01-01\") {\n      this.formattedEndDate = this.formattedDate;\n      this.gg_max = this.formattedDate.split(\"-\")[2];\n      this.setOrderPeriod(this.gg_min, this.gg_max);\n    }\n  }\n\n  checkDay(day: number): string {\n    switch(this.month) {\n      case \"02\":\n        if(parseInt(this.year) % 4 == 0 && day > 29){\n          day = 29;\n        }\n        else if((day) > 28){\n          day = 28;\n        }\n        break;\n\n      case \"04\" || \"06\" || \"09\" || \"11\":\n        if(day > 30){\n          day = 30;\n        }\n        break;\n      case \"01\" || \"03\" || \"05\" || \"07\" || \"08\" || \"10\" || \"11\" || \"12\":\n        if(day > 31){\n          day = 31;\n        }\n        break;\n\n      default:\n        if(day < 1){\n          day = 1;\n        }\n        break;\n    }\n\n    if(day.toString().length == 1){\n      return \"0\" + day;\n    }\n    else \n      return day.toString();\n  }\n\n  getFormattedDate(date: Date): string {\n    let splitDate = date.toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 3);\n    \n    let day = splitDate[0];\n    let month = splitDate[1];\n    let year = splitDate[2];\n\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    return year + \"-\" + month + \"-\" + day;  \n  }\n}\n","<nav\nclass=\"second-nav\">\n  <h1>{{ 'Orderable period' | translate }}</h1>\n</nav>\n<div \nlayout=\"row\" \nlayout-align=\"center\" \nalign=\"center\" \nstyle=\"min-height: 100px; margin: 10%;\">\n    <mat-form-field>\n        <mat-date-range-input \n        [formGroup]=\"range\" \n        [rangePicker]=\"picker\">\n          <input \n          matStartDate \n          formControlName=\"start\" \n          placeholder=\"{{ 'Start date' | translate }}\" \n          (dateChange)=\"onDateChange('start', $event)\">\n\n          <input \n          matEndDate \n          formControlName=\"end\" \n          placeholder=\"{{ 'End date' | translate }}\" \n          (dateChange)=\"onDateChange('end', $event)\">\n        </mat-date-range-input>\n        <mat-date-range-picker #picker>\n          <mat-date-range-picker-actions>\n            <button \n            mat-mini-fab\n            style=\"margin: 5px;\"\n            color=\"primary\"\n            matTooltip=\"{{'Submit' | translate}}\" \n            matDateRangePickerApply>\n              <i class=\"material-icons\">check</i>\n            </button>\n            \n            <button \n            mat-mini-fab\n            style=\"margin: 5px;\"\n            matTooltip=\"{{'Cancel' | translate}}\" \n            matDateRangePickerCancel>\n              <i class=\"material-icons\">close</i>\n            </button>\n          </mat-date-range-picker-actions>\n        </mat-date-range-picker>\n      \n        <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">{{ 'Invalid start date' | translate }}</mat-error>\n        <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">{{ 'Invalid end date' | translate }}</mat-error>\n      </mat-form-field>\n      <p>\n        <button \n        mat-fab \n        color=\"primary\"\n        matTooltip=\"{{'Edit' | translate}}\"\n        (click)=\"picker.open()\">\n          <i class=\"material-icons\">edit</i>\n        </button>\n      </p>\n</div>\n<footer>\n\t<p \n\t*ngIf=\"loginService.getUsername() != null\"\n\talign=\"center\">\n\t\t{{ 'Logged as' | translate }} <b>{{ loginService.currentUser.client }}</b>.\n\t</p>\n\t<p \n\t*ngIf=\"loginService.getUsername() == null\"\n\talign=\"center\">\n\t\t{{ 'You\\'re not logged!' | translate }} <a [routerLink]=\"['/login']\">{{ 'Login' | translate }}</a>\n\t</p>\t\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CellCheckboxComponent } from '../cell-checkbox/cell-checkbox.component';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-orders-extra-checkbox',\n  templateUrl: './orders-extra-checkbox.component.html',\n  styleUrls: ['./orders-extra-checkbox.component.css']\n})\nexport class OrdersExtraCheckboxComponent extends CellCheckboxComponent implements OnInit {\n  loading = false;\n  constructor(\n    private ordersService: OrdersService,\n    snackbar: MatSnackBar\n  ) {\n    super(snackbar);\n  }\n\n  ngOnInit(): void {\n    switch(localStorage.getItem(\"id_profile\")) {\n      case '220':\n        this.isLocked = this.data.b_to_supplier;\n        break;\n      case '210':\n        this.isLocked = (this.data.status != \"inviato\" );\n        break;\n      case '230':\n        this.isLocked = true;\n        break;\n      default:\n        break;\n    }\n    /*\n    if(this.data.b_to_supplier){\n      this.isLocked = true;\n    }\n    */\n  }\n\n  override toggleCheckbox(event: any): void {\n    this.loading = true;\n    //console.log(event);\n    this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n    //console.log(\"current checkbox value: \" + this.currentValue);\n\n    let orderExtra = {\n      id: this.data.id,\n      anno: this.data.anno,\n      mese: this.data.mese,\n      username: this.data.username,\n      d_ordine: this.data.d_ordine,\n      n_ordine: this.data.n_ordine,\n      b_urgente: this.data.b_urgente,\n      b_extra: this.currentValue, \n      b_validato: this.data.b_validato,\n      d_validato: this.data.d_validato,\n      note: this.data.note,\n      status: this.data.status,\n      d_consegna_prevista: this.data.d_consegna_prevista,\n      n_ddt: this.data.n_ddt,\n      d_ddt: this.data.d_ddt,\n      note_consegna: this.data.note_consegna,\n      b_prestito: this.data.b_prestito,\n      id_ordine_prestito: this.data.id_ordine_prestito,    \n      username_prestito_a: this.data.username_prestito_a,\n      username_prestito_da: this.data.username_prestito_da\n    }\n\n    let orderStatus = {\n      id: \"0\",\n      username: localStorage.getItem('sangue_username')!,\n      id_order: this.data.id,\n      d_status: this.getFormattedDate(new Date()),\n      status: this.data.status,\n      note: this.data.b_extra ? \"segnato come extra da \" + localStorage.getItem('sangue_username') : \"segnato come non extra da\" + localStorage.getItem('sangue_username'),\n      b_sto: false\n    };\n\n    this.ordersService.setOrderPromise(orderExtra, false).subscribe(\n      res => {\n        if(res[0] == \"OK\"){\n          this.loading = false;\n          this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n            res2 => {\n              if(res2[0] == \"OK\"){\n                this.loading = false;\n                this.openSnackbar();\n                //console.log(\"OrderStatus set\");\n              }\n              else {\n                console.error(\"Error setting order!\");\n                this.loading = false;\n              }\n            }\n          );\n        }\n        else {\n          console.error(\"Error setting order!\");\n          this.loading = false;\n          this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n        }\n      }\n    );\n  }\n}\n","<mat-checkbox\n[checked]=\"checked\"\n[disabled]=\"isLocked\"\n(change)=\"toggleCheckbox($event)\">\n</mat-checkbox>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CellCheckboxComponent } from '../cell-checkbox/cell-checkbox.component';\nimport { LoginService } from '../login.service';\nimport { MarkAsReceivedDialogComponent } from '../mark-as-received-dialog/mark-as-received-dialog.component';\nimport { OrdersService } from '../orders.service';\nimport { OrdersComponent } from '../orders/orders.component';\n\n@Component({\n  selector: 'app-orders-received-checkbox',\n  templateUrl: './orders-received-checkbox.component.html',\n  styleUrls: ['./orders-received-checkbox.component.css']\n})\nexport class OrdersReceivedCheckboxComponent extends CellCheckboxComponent implements OnInit {\n  userCode!: string;\n  dialogRef: any;\n  constructor(\n    private ordersService: OrdersService,\n    private ordersComponent: OrdersComponent,\n    private loginService: LoginService,\n    private dialog: MatDialog,\n    snackbar: MatSnackBar\n  ) {\n    super(snackbar);\n    this.loginService = loginService;\n  }\n\n  ngOnInit(): void {\n    this.userCode = this.loginService.getUserCode()!;\n    this.checked = (this.data.status == \"ricevuto\");\n    this.isLocked = (this.data.status != \"inviato al cliente\");\n  }\n\n  override toggleCheckbox(event: any): void {\n    this.openMarkAsReceivedDialog();\n  }\n\n  openMarkAsReceivedDialog() {\n    const dialogConfig = new MatDialogConfig();\n    \n    dialogConfig.data = {\n      orderId: this.data.id,\n    }\n\n    dialogConfig.disableClose = true;\n\n    this.dialogRef = this.dialog.open(\n      MarkAsReceivedDialogComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: any) => {\n        \n        if(result !== undefined){\n          if(result.isSubmitted !== undefined && result.isSubmitted){\n          this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n          /*\n          let orderSent = {\n            id: this.data.id,\n            anno: this.data.anno,\n            username: this.data.username,\n            d_ordine: this.data.d_ordine,\n            n_ordine: this.data.n_ordine,\n            b_urgente: this.data.b_urgente,\n            b_extra: this.data.b_extra, \n            b_validato: this.data.b_validato,\n            d_validato: this.data.d_validato,\n            note: this.data.note\n          }\n          */\n          let orderStatus = {\n            id: \"0\",\n            username: localStorage.getItem('sangue_username')!,\n            id_order: this.data.id,\n            d_status: this.getFormattedDate(new Date()),           \n            status: \"ricevuto\",\n            note: \"ordine ricevuto da \" + localStorage.getItem('sangue_username'),\n            b_sto: false\n          }\n          \n          //non serve, basta solo un cambio di stato ed un conseguente aggiornamento della view\n          //this.ordersComponent.setOrder(orderSent, orderStatus, false);\n          this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n            res => {\n              if(res[0] == \"OK\"){\n                //update suppliesGridRowData\n                for(var i = 0; i < this.ordersComponent.orderStatusArr.length; ++i) {\n                  if(this.data.id == this.ordersComponent.orderStatusArr[i].id_order) {\n                    this.ordersComponent.orderStatusArr[i].status = \"ricevuto\";\n                    break;\n                  }\n                }\n                this.ordersComponent.createOrderGridRowData();\n              }\n              else {\n                console.error(\"Error setting orderStatus!\");\n              }\n            }\n          );\n          this.checked = true;\n          this.isLocked = true;\n        }\n        if(result.isCancelled !== undefined && result.isCancelled){\n          this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n          this.checked = false;\n        }\n      }\n      }\n    );\n  }\n}\n","<mat-checkbox\n[checked]=\"checked\"\n[disabled]=\"isLocked\"\n[(ngModel)]=\"checked\"\n(change)=\"toggleCheckbox($event)\">\n</mat-checkbox>","import { Dialog } from '@angular/cdk/dialog';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CellCheckboxComponent } from '../cell-checkbox/cell-checkbox.component';\nimport { OrdersService } from '../orders.service';\nimport { OrdersComponent } from '../orders/orders.component';\nimport { SendToSupplierDialogComponent } from '../send-to-supplier-dialog/send-to-supplier-dialog.component';\n\n\n@Component({\n  selector: 'app-orders-sent-checkbox',\n  templateUrl: './orders-sent-checkbox.component.html',\n  styleUrls: ['./orders-sent-checkbox.component.css']\n})\nexport class OrdersSentCheckboxComponent extends CellCheckboxComponent implements OnInit {\n  dialogRef: any;\n\n  constructor(\n    private ordersService: OrdersService,\n    private ordersComponent: OrdersComponent,\n    private dialog: MatDialog,\n    snackbar: MatSnackBar\n  ) {\n    super(snackbar);\n    this.dialog = dialog;\n  }\n\n  ngOnInit(): void { \n    //console.log(this.data);\n    \n    if(this.data.b_to_supplier){\n      this.isLocked = true;\n    }\n  }\n\n  override toggleCheckbox(event: any): void {\n    this.openSendToSupplierDialog();\n  }\n\n  openSendToSupplierDialog() {\n    const dialogConfig = new MatDialogConfig();\n    console.log(this.data);\n    dialogConfig.data = {\n      orderId: this.data.id,\n      isValidated: this.data.b_validato\n    }\n    if(!this.data.b_validato)\n      dialogConfig.disableClose = true;\n\n    this.dialogRef = this.dialog.open(\n      SendToSupplierDialogComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: any) => {\n        \n        if(result !== undefined && this.data.status != \"inviato al fornitore\"){\n          if(result.isSubmitted !== undefined && result.isSubmitted){\n          this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n          /*\n          let b_extra: boolean;\n          if(this.data.b_extra === undefined) {\n            b_extra = false;\n          }\n          */\n          let orderSent = {\n            id: this.data.id,\n            anno: this.data.anno,\n            mese: this.data.mese,\n            username: this.data.username,\n            d_ordine: this.data.d_ordine,\n            n_ordine: this.data.n_ordine,\n            b_urgente: this.data.b_urgente,\n            b_extra: this.data.b_extra, \n            b_validato: this.data.b_validato,\n            d_validato: this.data.d_validato,\n            note: this.data.note,d_consegna_prevista: this.data.d_consegna_prevista,\n            status: this.data.status,\n            n_ddt: this.data.n_ddt,\n            d_ddt: this.data.d_ddt,\n            note_consegna: this.data.note_consegna,\n            b_prestito: this.data.b_prestito,\n            id_ordine_prestito: this.data.id_ordine_prestito,\n            username_prestito_a: this.data.username_prestito_a,\n            username_prestito_da: this.data.username_prestito_da  \n          }\n      \n          let orderStatus = {\n            id: \"0\",\n            username: localStorage.getItem('sangue_username')!,\n            id_order: this.data.id,\n            d_status: this.getFormattedDate(new Date()),           \n            status: \"inviato al fornitore\",\n            note: \"ordine inviato al fornitore da \" + localStorage.getItem('sangue_username'),\n            b_sto: false\n          }\n          \n          //this.isLocked = true;\n\n          this.ordersComponent.setOrder(orderSent, orderStatus, false);\n          this.checked = true;\n          this.isLocked = true;\n        }\n        if(result.isCancelled !== undefined && result.isCancelled){\n          this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n          this.checked = false;\n        }\n      }\n      }\n    );\n  }\n}\n","<mat-checkbox\n[checked]=\"checked\"\n[disabled]=\"isLocked\"\n[(ngModel)]=\"currentValue\"\n(change)=\"toggleCheckbox($event)\">\n</mat-checkbox>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CellCheckboxComponent } from '../cell-checkbox/cell-checkbox.component';\nimport { OrdersService } from '../orders.service';\nimport { SendToCustomerDialogComponent } from '../send-to-customer-dialog/send-to-customer-dialog.component';\nimport { SuppliesComponent } from '../supplies/supplies.component';\n\n@Component({\n  selector: 'app-orders-to-customer-checkbox',\n  templateUrl: './orders-to-customer-checkbox.component.html',\n  styleUrls: ['./orders-to-customer-checkbox.component.css']\n})\nexport class OrdersToCustomerCheckboxComponent extends CellCheckboxComponent implements OnInit {\n  dialogRef: any;\n\n  constructor(\n    private ordersService: OrdersService,\n    private suppliesComponent: SuppliesComponent,\n    private dialog: MatDialog,\n    snackbar: MatSnackBar\n  ) {\n    super(snackbar);\n    this.dialog = dialog;\n  }\n\n  ngOnInit(): void {\n    if(this.data.status == \"inviato al cliente\" || this.data.status == \"ricevuto\"){\n      this.currentValue = true;\n    }\n    else {\n      this.currentValue = false;\n    }\n    this.isLocked = this.currentValue;\n    //console.log(\"currentValue: \" + this.currentValue);\n   }\n\n  override toggleCheckbox(event: any): void {\n    this.openSendToSupplierDialog();\n  }\n\n  openSendToSupplierDialog() {\n    const dialogConfig = new MatDialogConfig();\n    \n    dialogConfig.data = {\n      orderId: this.data.id,\n      fullUsername: this.data.full_username\n    }\n\n    this.dialogRef = this.dialog.open(\n      SendToCustomerDialogComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe((result: any) => {\n        if(result !== undefined){\n          if(result.isSubmitted !== undefined && result.isSubmitted){\n          this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n          \n          let orderSent = {           \n            id: this.data.id,\n            anno: this.data.anno,\n            mese: this.data.mese,\n            username: this.data.username,\n            d_ordine: this.data.d_ordine,\n            n_ordine: this.data.n_ordine,\n            status: this.data.status,\n            b_urgente: this.data.b_urgente,\n            b_extra: this.data.b_extra,\n            b_validato: this.data.b_validato,\n            d_validato: this.data.d_validato,\n            note: this.data.note,\n            d_consegna_prevista: this.data.d_consegna_prevista,\n            n_ddt: this.data.n_ddt,\n            d_ddt: this.data.d_ddt,\n            note_consegna: this.data.note_consegna,\n            b_prestito: this.data.b_prestito,\n            id_ordine_prestito: this.data.id_order,\n            username_prestito_da: this.data.username_prestito_da,\n            username_prestito_a: this.data.username_prestito_a,\n          }\n\n          let orderStatus = {\n            id: \"0\",\n            username: localStorage.getItem('sangue_username')!,\n            id_order: this.data.id,\n            d_status: this.getFormattedDate(new Date()),           \n            status: \"inviato al cliente\",\n            note: \"ordine inviato a \" + this.data.username + \" da \" + localStorage.getItem('sangue_username'),\n            b_sto: false\n          }\n          \n          this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n            res => {\n              if(res[0] == \"OK\"){\n                //update suppliesGridRowData\n                for(var i = 0; i < this.suppliesComponent.orderStatusArr.length; ++i) {\n                  if(this.data.id == this.suppliesComponent.orderStatusArr[i].id_order) {\n                    this.suppliesComponent.orderStatusArr[i].status = \"inviato al cliente\";\n                    this.openSnackbar();\n                    break;\n                  }\n                }\n                this.suppliesComponent.updateRow(this.data.id, this.suppliesComponent.orderStatusArr[i].status);\n              }\n              else {\n                console.error(\"Error setting orderStatus!\");\n              }\n            }\n          );\n          this.checked = true;\n          this.currentValue = true;\n        }\n        if(result.isCancelled !== undefined && result.isCancelled){\n          this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n          this.checked = false;\n        }\n      }\n    });\n  }\n}\n","<mat-checkbox\n[checked]=\"checked\"\n[disabled]=\"isLocked\"\n[(ngModel)]=\"currentValue\"\n(change)=\"toggleCheckbox($event)\">\n</mat-checkbox>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-orders-to-customer',\n  templateUrl: './orders-to-customer.component.html',\n  styleUrls: ['./orders-to-customer.component.css']\n})\nexport class OrdersToCustomerComponent implements OnInit {\n/**\n * \n * \n * \n * CANCELLAREEEEEEEEEEEEEEEEEE CLASSE INUTILEEEEEEEEEEEEEEEEEEEEEEEEEEee\n */\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>orders-to-customer works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CellCheckboxComponent } from '../cell-checkbox/cell-checkbox.component';\nimport { OrdersService } from '../orders.service';\nimport { environment, translations } from 'src/environments/environment';\nimport { localeLang } from 'src/environments/grid-configs';\n\n@Component({\n  selector: 'app-orders-urgent-checkbox',\n  templateUrl: './orders-urgent-checkbox.component.html',\n  styleUrls: ['./orders-urgent-checkbox.component.css']\n})\nexport class OrdersUrgentCheckboxComponent extends CellCheckboxComponent implements OnInit {\n  loading = false;\n  constructor(\n    private ordersService: OrdersService,\n    snackbar: MatSnackBar\n  ) {\n    super(snackbar);\n  }\n\n  ngOnInit(): void {\n    /*\n    if(this.data.status != \"inviato\" && localStorage.getItem(\"id_profile\") != '220') {\n      this.isLocked = true;\n    }\n    */\n    //console.log(this.data.note);\n    switch(localStorage.getItem(\"id_profile\")) {\n      case '220':\n        this.isLocked = (this.data.status == \"inviato al fornitore\" || this.data.status == \"inviato al cliente\" || this.data.status == \"ricevuto\");\n        break;\n      case '210':\n        this.isLocked = (this.data.status != \"inviato\");\n        break;\n      case '230':\n        this.isLocked = true;\n        break;\n      default:\n        break;\n    }\n  }\n\n  override toggleCheckbox(event: any): void {\n    this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n    //console.log(navigator.language.split(\"-\", 2)[0]);\n    if(this.currentValue == 1 && (this.data.note == \"\") || (this.data.note == null) || (this.data.note === undefined)) {\n      localeLang == 'it' ? alert(translations.it.PleaseProvideNotes) : alert(translations.en.PleaseProvideNotes);\n    }\n\n    let orderUrgent = {\n      id: this.data.id,\n      anno: this.data.anno,\n      mese: this.data.mese,\n      username: this.data.username,\n      d_ordine: this.data.d_ordine,\n      n_ordine: this.data.n_ordine,\n      b_urgente: this.currentValue,\n      b_extra: this.data.b_extra, \n      b_validato: this.data.b_validato,\n      d_validato: this.data.d_validato,\n      note: this.data.note,\n      status: this.data.status,\n      d_consegna_prevista: this.data.d_consegna_prevista,\n      n_ddt: this.data.n_ddt,\n      d_ddt: this.data.d_ddt,\n      note_consegna: this.data.note_consegna,\n      b_prestito: this.data.b_prestito,\n      id_ordine_prestito: this.data.id_ordine_prestito,\n      username_prestito_a: this.data.username_prestito_a,\n      username_prestito_da: this.data.username_prestito_da\n    };\n\n    let orderStatus = {\n      id: \"0\",\n      username: localStorage.getItem('sangue_username')!,\n      id_order: this.data.id,\n      d_status: this.getFormattedDate(new Date()),\n      status: this.data.status,\n      note: this.data.b_urgente ? \"segnato come urgente da \" + localStorage.getItem('sangue_username') : \"segnato come non urgente da\" + localStorage.getItem('sangue_username'),\n      b_sto: false\n    };\n    \n    this.ordersService.setOrderPromise(orderUrgent, false).subscribe(\n      res => {\n        if(res[0] == \"OK\"){\n          console.log(\"Order set\");\n          this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n            res2 => {\n              if(res2[0] == \"OK\"){\n                this.loading = false;\n                console.log(\"OrderStatus set\");\n                this.openSnackbar();\n              }\n              else {\n                console.error(\"Error setting order!\");\n                this.loading = false;\n              }\n            }\n          );\n        }\n        else {\n          console.error(\"Error setting order!\");\n          this.loading = false;\n          this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n        }\n      }\n    );\n  }\n}\n","<!--mat-spinner\n*ngIf=\"loading\"\n[diameter]=\"30\">\n</mat-spinner-->\n<mat-checkbox\n[checked]=\"checked\"\n[disabled]=\"isLocked\"\n(change)=\"toggleCheckbox($event)\">\n</mat-checkbox>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CellCheckboxComponent } from '../cell-checkbox/cell-checkbox.component';\nimport { LoginService } from '../login.service';\nimport { OrdersService } from '../orders.service';\nimport { OrdersComponent } from '../orders/orders.component';\n\n@Component({\n  selector: 'app-orders-validated-checkbox',\n  templateUrl: './orders-validated-checkbox.component.html',\n  styleUrls: ['./orders-validated-checkbox.component.css']\n})\nexport class OrdersValidatedCheckboxComponent extends CellCheckboxComponent implements OnInit {\n  //loginService!: LoginService\n  loading = false;\n  userCode!: string;\n  constructor(\n    private ordersService: OrdersService,\n    private ordersComponent: OrdersComponent,\n    private loginService: LoginService,\n    snackbar: MatSnackBar\n  ) {\n    super(snackbar);\n    this.loginService = loginService;\n  }\n\n  ngOnInit(): void {\n    this.userCode = this.loginService.getUserCode()!;\n    //console.log(this.data);\n    /*\n    if(this.data.b_to_supplier){\n      this.isLocked = true;\n    }\n    */\n   //ALWAYS LOCKED: you can change its value ONLY from the \"edit orderRows\" dialog\n   this.isLocked = true;\n  }\n\n  override toggleCheckbox(event: any): void {\n    this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n    console.log(\"current checkbox value: \" + this.currentValue);\n    \n    let orderValidated = {\n      id: this.data.id,\n      anno: this.data.anno,\n      mese: this.data.mese,\n      username: this.data.username,\n      d_ordine: this.data.d_ordine,\n      n_ordine: this.data.n_ordine,\n      b_urgente: this.data.b_urgente,\n      b_extra: this.data.b_extra, \n      b_validato: this.currentValue,\n      d_validato: this.data.d_validato,\n      note: this.data.note,\n      status: this.data.status,\n      d_consegna_prevista: this.data.d_consegna_prevista,\n      n_ddt: this.data.n_ddt,\n      d_ddt: this.data.d_ddt,\n      note_consegna: this.data.note_consegna,\n      b_prestito: this.data.b_prestito,\n      id_ordine_prestito: this.data.id_ordine_prestito,\n      username_prestito_a: this.data.username_prestito_a,\n      username_prestito_da: this.data.username_prestito_da\n    }\n\n    let orderStatus = {\n      id: \"0\",\n      username: localStorage.getItem('sangue_username')!,\n      id_order: this.data.id,\n      d_status: this.getFormattedDate(new Date()),\n      status: this.data.status,\n      note: this.data.b_validato ? \"segnato come extra da \" + localStorage.getItem('sangue_username') : \"segnato come non extra da\" + localStorage.getItem('sangue_username'),\n      b_sto: false\n    };\n    this.ordersService.setOrderPromise(orderValidated, false).subscribe(\n      res => {\n        if(res[0] == \"OK\"){\n          this.loading = false;\n          this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n            res2 => {\n              if(res2[0] == \"OK\"){\n                this.loading = false;\n                console.log(\"OrderStatus set\");\n                this.openSnackbar();\n              }\n              else {\n                console.error(\"Error setting order!\");\n                this.loading = false;\n              }\n            }\n          );\n        }\n        else {\n          console.error(\"Error setting order!\");\n          this.loading = false;\n          this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n        }\n      }\n    );\n  }\n}\n","<mat-checkbox\n[checked]=\"checked\"\n[disabled]=\"userCode == '210' || isLocked\"\n(change)=\"toggleCheckbox($event)\">\n</mat-checkbox>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Order } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-orders-validated-dialog',\n  templateUrl: './orders-validated-dialog.component.html',\n  styleUrls: ['./orders-validated-dialog.component.css']\n})\nexport class OrdersValidatedDialogComponent implements OnInit {\n  isSubmitted: boolean = false;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      order: Order\n    },\n    private dialogRef: MatDialogRef<OrdersValidatedDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    this.dialogRef.close({\n      order: this.data.order,\n      isValidated: this.isSubmitted\n    });\n  }\n\n  onCancel() {\n\n  }\n\n}\n","<div>\n    <h2 align=\"center\">{{ 'Do you wish to validate order' | translate }} {{data.order.n_ordine}}?</h2>\n    <h3 align=\"center\">{{ 'Once you confirm, the order cannot be edited' | translate}}.</h3>\n    <div mat-dialog-actions align=\"center\">\n        <button mat-raised-button color=\"warn\" (click)=\"onSubmit()\">{{ 'Submit' | translate }}</button>\n        <button mat-raised-button matDialogClose=\"true\" color=\"warn\" (click)=\"onCancel()\" color=\"primary\">{{ 'Cancel' | translate }}</button>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment, Order, OrderRow, OrderStatus } from 'src/environments/environment';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  \n  url = environment.basePath + 'order.php';\n  //reportUrl = environment.reportPath + 'order.php';\n  orders: any = [];\n  orderRows: any = [];\n  lastOrderId: string = \"\";\n  lastOrderRowId: string = \"\";\n\n  constructor(\n    private loginService: LoginService,\n    private http: HttpClient,\n  ) {\n\n  }\n\n  /*\n  \n        ORDERS ===========================\n\n  */\n  listOrders(year: string): any {\n    let path = this.url + '?request=listOrders&id_session=' + this.loginService.getSession() + '&year=' + year;\n    ////console.log(path);\n    \n    this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    ).subscribe(res => {\n      ////console.log(res);\n      if(res[0] == \"KO\"){\n        console.error(\"Error retrieving orders!\");\n        return null;\n      }\n      else{\n        ////console.log(res[1]);   \n        this.orders = res[1];     \n        return this.orders;\n      }\n    });\n  }\n\n  listOrdersPromise(year: string, month?: string): Observable<any> {\n    let id_session = localStorage.getItem('id_session');\n    let path = \"\";\n    \n    if(month == \"\" || month == null || month == undefined) {\n      month = undefined;\n    }\n    if(year == \"\" || year == null || year == undefined) {\n      year == undefined;\n    }\n\n    if(month == undefined) {\n      path = this.url + '?request=listOrders&id_session=' + id_session + '&year=' + year;\n    }\n    \n    if(year == undefined) {\n      path = this.url + '?request=listOrders&id_session=' + id_session;\n    }\n    \n    if(year != undefined && month != undefined) {\n      path = this.url + '?request=listOrders&id_session=' + id_session + '&year=' + year + \"&month=\" + month;\n    }\n\n    //console.log(path);\n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    )\n  }\n\n  setOrder(\n    order: Order,\n    isAdding: boolean\n  ): void {\n    if(!isAdding){\n      //SET\n      this.http.post<String[]>(\n        this.url, \n        {\n          request: 'setOrder',\n          id_session: this.loginService.getSession(),\n          id: order.id,\n          anno: order.anno,\n          mese: order.mese,\n          username: order.username,\n          d_ordine: order.d_ordine,\n          n_ordine: order.n_ordine,\n          b_urgente: order.b_urgente,\n          b_extra: order.b_extra,\n          b_validato: order.b_validato,\n          d_validato: order.d_validato,\n          note: order.note,\n          d_consegna_prevista: order.d_consegna_prevista,\n          n_ddt: order.n_ddt,\n          d_ddt: order.d_ddt,\n          note_consegna: order.note_consegna\n        }\n      ).subscribe(res => {\n        if(res[0] == \"KO\"){\n          console.error(\"setOrders() error: \" + res[1].toString());\n        }\n        else{\n          //console.log(\"Result: \" + res[0]);\n          //console.log(\"Order with ID \" + res[1] + \" successfully set!\");\n          this.lastOrderId = res[1].toString();\n        }\n      });\n    }\n    else{\n      //ADD\n      this.http.post<String[]>(\n        this.url, \n        {\n          request: 'setOrder',\n          id_session: this.loginService.getSession(),\n          id: '-1',\n          anno: order.anno,\n          mese: order.mese,\n          username: order.username,\n          d_ordine: order.d_ordine,\n          n_ordine: order.n_ordine,\n          b_urgente: order.b_urgente,\n          b_extra: order.b_extra,\n          b_validato: order.b_validato,\n          d_validato: order.d_validato,\n          note: order.note,\n          d_consegna_prevista: order.d_consegna_prevista,\n          n_ddt: order.n_ddt,\n          d_ddt: order.d_ddt,\n          note_consegna: order.note_consegna\n        }\n      ).subscribe(res => {\n        if(res[0] == \"KO\"){\n          console.error(\"setOrders() error: \" + res[1].toString());\n        }\n        else{\n          //console.log(\"Result: \" + res[0]);\n          //console.log(\"Order with ID \" + res[1] + \" successfully added!\");\n          this.lastOrderId = res[1].toString();\n        }\n      });\n    }\n  }\n\n  setOrderPromise(\n    order: Order,\n    isAdding: boolean\n  ): Observable<any> {\n    if(!isAdding){\n      //SET\n      return this.http.post<String[]>(\n        this.url, \n        {\n          request: 'setOrder',\n          id_session: this.loginService.getSession(),\n          id: order.id,\n          anno: order.anno,\n          mese: order.mese,\n          username: order.username,\n          d_ordine: order.d_ordine,\n          n_ordine: order.n_ordine,\n          b_urgente: order.b_urgente,\n          b_extra: order.b_extra,\n          b_validato: order.b_validato,\n          d_validato: order.d_validato,\n          note: order.note,\n          d_consegna_prevista: order.d_consegna_prevista,\n          n_ddt: order.n_ddt,\n          d_ddt: order.d_ddt,\n          note_consegna: order.note_consegna,\n          b_prestito: order.b_prestito,\n          id_ordine_prestito: order.id_ordine_prestito,\n          username_prestito_da: order.username_prestito_da,\n          username_prestito_a: order.username_prestito_a\n        }\n      )\n    }\n    else{\n      //console.log(\"isAdding: \" + isAdding);\n      //console.log(order);\n      \n      return this.http.post<String[]>(\n        this.url, \n        {\n          request: 'setOrder',\n          id_session: this.loginService.getSession(),\n          id: '-1',\n          anno: order.anno,\n          mese: order.mese,\n          username: order.username,\n          d_ordine: order.d_ordine,\n          n_ordine: order.n_ordine,\n          b_urgente: order.b_urgente,\n          b_extra: order.b_extra,\n          b_validato: order.b_validato,\n          d_validato: order.d_validato,\n          note: order.note,\n          d_consegna_prevista: order.d_consegna_prevista,\n          n_ddt: order.n_ddt,\n          d_ddt: order.d_ddt,\n          note_consegna: order.note_consegna,\n          b_prestito: order.b_prestito,\n          id_ordine_prestito: order.id_ordine_prestito,\n          username_prestito_da: order.username_prestito_da,\n          username_prestito_a: order.username_prestito_a\n        }\n      )\n    }\n  }\n\n  rmOrder(id: string): void {\n    this.http.post<String[]>(\n      this.url, \n      {\n        request: 'rmOrder',\n        id_session: this.loginService.getSession(),\n        id: id\n      }\n    ).subscribe(res => {\n      if(res[0] == \"KO\"){\n        console.error(\"setOrderRows() error: \" + res[1].toString());\n      }\n      else{\n        //console.log(\"Result: \" + res[0]);\n        //console.log(\"OrderRow with ID \" + res[1] + \" successfully removed!\");\n        this.lastOrderRowId = res[1].toString();\n      }\n    });\n  }\n\n  rmOrderPromise(id: string): Observable<any> {\n    return this.http.post<String[]>(\n      this.url, \n      {\n        request: 'rmOrder',\n        id_session: this.loginService.getSession(),\n        id: id\n      }\n    );\n  }\n\n  /*\n  \n        ORDERROWS ===========================\n\n  */\n  listOrderRows(id_order: string): any {\n    let path = this.url + '?request=listOrderRows&id_session=' + this.loginService.getSession() + '&id_order=' + id_order;\n    this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    ).subscribe(res => {\n      if(res[0] == \"KO\"){\n        console.error(\"Error retrieving orders!\");\n        return null;\n      }\n      else{   \n        this.orderRows = res[1];\n        //console.log(\"orderRowssssssssssssssssssssssssssssssssssssssssssssss\");\n        \n        //console.log(res[1]);\n        return this.orderRows;\n      }\n    });\n  }\n\n  listOrderRowsPromise(id_order: string): Observable<any> {\n    let path = this.url + '?request=listOrderRows&id_session=' + this.loginService.getSession() + '&id_order=' + id_order;\n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    )\n  }\n\n  setOrderRow(\n    orderRow: OrderRow,\n    isAdding: boolean\n  ): void {\n    if(!isAdding){\n      //SET\n      this.http.post<String[]>(\n        this.url, \n        {\n          request: 'setOrder',\n          id_session: this.loginService.getSession(),\n          id: orderRow.id,\n          id_ordine: orderRow.id_ordine,\n          username: orderRow.username,\n          n_riga: orderRow.n_riga,\n          id_prd: orderRow.id_prd,\n          qta: orderRow.qta,\n          qta_validata: orderRow.qta_validata,\n          qta_ricevuta: orderRow.qta_ricevuta,\n          note: orderRow.note\n        }\n      ).subscribe(res => {\n        if(res[0] == \"KO\"){\n          console.error(\"setOrderRows() error: \" + res[1].toString());\n        }\n        else{\n          //console.log(\"Result: \" + res[0]);\n          //console.log(\"OrderRow with ID \" + res[1] + \"successfully set!\");\n          this.lastOrderRowId = res[1].toString();\n        }\n      });\n    }\n    else{\n      //ADD\n      this.http.post<String[]>(\n        this.url, \n        {\n          request: 'setOrder',\n          id_session: this.loginService.getSession(),\n          id: '-1',\n          id_ordine: orderRow.id_ordine,\n          username: orderRow.username,\n          n_riga: orderRow.n_riga,\n          id_prd: orderRow.id_prd,\n          qta: orderRow.qta,\n          qta_validata: orderRow.qta_validata,\n          note: orderRow.note\n        }\n      ).subscribe(res => {\n        if(res[0] == \"KO\"){\n          console.error(\"setOrderRows() error: \" + res[1].toString());\n        }\n        else{\n          //console.log(\"Result: \" + res[0]);\n          //console.log(\"OrderRow with ID \" + res[1] + \"successfully added!\");\n          this.lastOrderRowId = res[1].toString();\n        }\n      });\n    }\n  }\n\n  setOrderRowPromise(\n    orderRow: OrderRow,\n    isAdding: boolean\n  ): Observable<any> {    \n    if(!isAdding){\n      //SET\n      return this.http.post<String[]>(\n        this.url, \n        {\n          request: 'setOrderRow',\n          id_session: this.loginService.getSession(),\n          id: orderRow.id,\n          id_ordine: orderRow.id_ordine,\n          username: orderRow.username,\n          motivazione: orderRow.motivazione,\n          n_riga: orderRow.n_riga,\n          id_prd: orderRow.id_prd,\n          qta: orderRow.qta,\n          qta_validata: orderRow.qta_validata,\n          qta_ricevuta: orderRow.qta_ricevuta,\n          note: orderRow.note\n        }\n      )\n    }\n    else{\n      //ADD\n      return this.http.post<String[]>(\n        this.url, \n        {\n          request: 'setOrderRow',\n          id_session: this.loginService.getSession(),\n          id: '-1',\n          id_ordine: orderRow.id_ordine,\n          username: orderRow.username,\n          n_riga: orderRow.n_riga,\n          id_prd: orderRow.id_prd,\n          qta: orderRow.qta,\n          motivazione: orderRow.motivazione,\n          qta_validata: orderRow.qta_validata,\n          qta_ricevuta: orderRow.qta_ricevuta,\n          note: orderRow.note\n        }\n      )\n    }\n  }\n\n  rmOrderRow(id: string): void {\n    this.http.post<String[]>(\n      this.url, \n      {\n        request: 'rmOrderRow',\n        id_session: this.loginService.getSession(),\n        id: id\n      }\n    ).subscribe(res => {\n      if(res[0] == \"KO\"){\n        console.error(\"setOrderRows() error: \" + res[1].toString());\n      }\n      else{\n        //console.log(\"Result: \" + res[0]);\n        //console.log(\"OrderRow with ID \" + res[1] + \"successfully removed!\");\n        this.lastOrderRowId = res[1].toString();\n      }\n    });\n  }\n\n  /**\n   * \n   * ORDER STATUS MANAGEMENT\n   * \n   */\n  getOrderStatusPromise(id_order: string) {\n    let request = 'getOrderStatus';\n    let id_session = localStorage.getItem('id_session');\n    let path = this.url + '?request='+ request + '&id_session=' + id_session + '&id_order=' + id_order;\n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    );\n  }\n\n  setOrderStatusPromise(orderStatus: OrderStatus) {\n    //console.log(\"Setting order status for order \" + orderStatus.id_order);\n    \n    return this.http.post<String[]>(\n      this.url, \n      {\n        request: 'setOrderStatus',\n        id_session: localStorage.getItem('id_session'),\n        username: orderStatus.username,\n        id_order: orderStatus.id_order,\n        d_status: orderStatus.d_status,\n        status: orderStatus.status,\n        note: orderStatus.note\n      }\n    )\n  }\n\n  /**\n   * \n   * ORDER PDF MANAGEMENT\n   * \n   */\n  getOrderPdfPromise(id_order: string) {\n    let request = 'getOrderPDF';\n    let id_session = localStorage.getItem('id_session');\n    let path = this.url + '?request='+ request + '&id_session=' + id_session + '&id_order=' + id_order;\n    //console.log(path)\n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    );\n  }\n\n  /**\n   * \n   * GLOBAL ORDERS RETRIEVAL\n   * \n   */\n  getOrdersGlobally() {\n    let year = new Date().getFullYear().toString();\n    this.listOrdersPromise(year).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          //console.log(res[1]);\n          environment.globalOrders = res[1];\n        }\n        else {\n          console.error(\"Error retrieving global orders!\");\n        }\n      }\n    );\n  }\n\n  /**\n   * \n   * ORDER RESUME XLS\n   * \n   */\n  getOrderResumePromise(startDate: string, endDate: string) {\n    let request = 'getOrderResume';\n    let id_session = localStorage.getItem('id_session');\n    let d_inizio = startDate;\n    let d_fine = endDate;\n    let path = this.url + '?request='+ request + '&id_session=' + id_session + '&d_inizio=' + d_inizio + '&d_fine=' + d_fine;\n    //console.log(path)\n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    );\n  }\n\n  /**\n   * \n   * SUPPLY RESUME\n   * \n   */\n  getSupplyResumePromise(orderID: string) {\n    let request = 'getOrderXlsx';\n    let id_session = localStorage.getItem('id_session');\n    let path = this.url + '?request='+ request + '&id_session=' + id_session + '&id_order=' + orderID;\n    //console.log(path)\n    return this.http.get<any[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    );\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { CellClickedEvent, CellValueChangedEvent, ColumnApi, GetRowIdFunc, GetRowIdParams, GridApi, ColumnMovedEvent, ColumnPinnedEvent, ColumnPivotChangedEvent, ColumnResizedEvent, ColumnRowGroupChangedEvent, ColumnValueChangedEvent, ColumnVisibleEvent, GridReadyEvent, SortChangedEvent} from 'ag-grid-community';\nimport { environment, Forecast, Order, OrderGridRowData, OrderRow, OrderStatus } from 'src/environments/environment';\nimport { AG_GRID_LOCALE_EN, AG_GRID_LOCALE_IT, defaultColDef, gridConfigOrders210, gridConfigOrders210Locked, gridConfigOrders220, gridConfigOrders220Locked } from 'src/environments/grid-configs';\nimport { AddOrderDialogComponent } from '../add-order-dialog/add-order-dialog.component';\nimport { DatepickerProductsDialogComponent } from '../datepicker-products-dialog/datepicker-products-dialog.component';\nimport { ForecastService } from '../forecast.service';\nimport { LoginService } from '../login.service';\nimport { OrderablePeriodService } from '../orderable-period.service';\nimport { OrdersService } from '../orders.service';\nimport { PharmaRegistryService } from '../pharma-registry.service';\nimport { SnackbarService } from '../snackbar.service';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  \n  order: Order = {\n    id: \"\",\n    anno: 0,\n    mese: 0,\n    username: \"\",\n    d_ordine: \"\", \n    n_ordine: 0,\n    b_urgente: false,\n    b_extra: false,\n    b_validato: false,\n    d_validato: \"\",\n    note: \"\",\n    status: \"\",\n    d_consegna_prevista: \"\",\n    n_ddt: \"\",\n    d_ddt: \"\",\n    note_consegna: \"\",\n    b_prestito: false,\n    id_ordine_prestito: \"\",\n    username_prestito_a: \"\",\n    username_prestito_da: \"\"\n  }\n\n  orders: any = [];\n  orderGridRowData: OrderGridRowData[] = [];\n  orderRows: any = [];\n  users: any = [];\n  products: any = [];\n  forecasts: Forecast[] = [];\n  orderStatusArr: any[] = [];\n\n  day: number = parseInt(new Date().toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 2)[0]);\n  gg_min!: number;\n  gg_max!: number;\n  isDateLocked!: boolean;\n\n  year: string = new Date().getFullYear().toString();\n  month: string = (new Date().getMonth() + 1).toString();\n  dialogRef: any;\n  dialog: any;\n\n  //agGrid config\n  ordersGridConfig!: any;\n  defaultColDef: any = defaultColDef;\n  gridOptions: any;\n\n  //agGrid API handles\n  @ViewChild(AgGridAngular) agGrid!: AgGridAngular;\n  gridApi!: GridApi;\n  api: any;\n  columnApi!: ColumnApi;\n  columnState: any;\n  defaultColumnState: any;\n\n  //spinner boolean\n  loading: boolean = true;\n  visibleIndex: number = 0;\n  \n  //public domLayout: DomLayoutType = 'autoHeight';\n\n  public getRowId: GetRowIdFunc = (params: GetRowIdParams) => {\n    return params.data.id;\n  };\n\n  localeText = (environment.currentLanguage == 'it' ? AG_GRID_LOCALE_IT : AG_GRID_LOCALE_EN);\n\n  //loading animation\n  //loadingCellRenderer: LoadingCellRendererComponent;\n  //loadingCellRendererParams: ILoadingCellRendererParams;\n\n  constructor(\n    public loginService: LoginService,\n    private ordersService: OrdersService,\n    private usersService: UsersService,\n    private pharmaRegistryService: PharmaRegistryService,\n    dialog: MatDialog,\n    private router: Router,\n    private orderablePeriodService: OrderablePeriodService,\n    private forecastService: ForecastService,\n    private snackbarService: SnackbarService\n  ) {    \n    this.dialog = dialog;\n    this.loading = true;\n    this.loginService.getCurrentUserSync();\n    \n    if(environment.globalUsers.length == 0) {\n      //get users and populate globalUsers\n      this.usersService.getUsersGlobally();\n    }\n    if(environment.globalProducts.length == 0) {\n      this.pharmaRegistryService.getProductsGlobally();\n    }    \n    if(environment.globalForecasts.length == 0) {\n      this.forecastService.getForecastsGlobally(this.year);\n    }\n\n    //gridOptions\n    this.gridOptions = {\n      onCellClicked: (event: CellClickedEvent) => {\n        //console.log(event.column.getColId() == \"d_ddt\" && loginService.getUserCode() == \"210\" && event.data.status == \"ricevuto\");\n        if(!event.node.data.isRowLocked) {\n          if(event.column.getColId() == \"d_ordine\") {\n              this.openEditDateDialog(event);\n          }\n          //validation date not editable\n          /*\n          if(event.column.getColId() == \"d_validato\" && loginService.getUserCode() == \"220\") {\n            this.openEditDateDialog(event);\n          }\n          */\n        }\n        if(event.column.getColId() == \"d_ddt\" && loginService.getUserCode() == \"210\" && event.data.status == \"ricevuto\") {\n          console.log(event.column.getColId() == \"d_ddt\" && loginService.getUserCode() == \"210\" && event.data.status == \"ricevuto\");\n          this.openEditDateDialog(event);\n        }\n      },\n      onCellValueChanged: (event: CellValueChangedEvent) => {                \n        console.log(\"Changed from \" + event.oldValue + \" to \" + event.newValue);\n        //if row is not locked and an update is received, perform update\n        //TODO: se imposto una data di validazione, deve essere MAGGIORE o UGUALE alla data dell'ordine\n        console.log(\"isRowLocked: \" + event.node.data.isRowLocked);\n        console.log(\"isDateLocked: \" + this.isDateLocked);\n        \n        if(!event.node.data.isRowLocked && !this.isDateLocked){\n          console.log(\"the order was not locked, so I modify it!\");\n          \n          this.order.id = event.data.id;\n          this.order.anno = event.data.anno;\n          this.order.username = event.data.username;\n          this.order.d_ordine = event.data.d_ordine;\n          this.order.n_ordine = event.data.n_ordine;\n          this.order.b_urgente = event.data.b_urgente;\n          this.order.b_extra = event.data.b_extra;\n          this.order.b_validato = event.data.b_validato;\n          this.order.d_validato = event.data.d_validato;\n          this.order.n_ddt = event.data.n_ddt;\n          this.order.d_ddt = event.data.d_ddt;\n          this.order.d_consegna_prevista = event.data.d_consegna_prevista;\n          this.order.note = event.data.note;   \n          this.order.note_consegna = event.data.note_consegna\n          \n          //not adding but editing\n          let isAdding = false;\n          let orderStatus = {\n            id: \"0\",\n            username: localStorage.getItem('sangue_username')!,\n            id_order: event.data.id,\n            d_status: this.getFormattedDate(new Date()),\n            status: event.column.getColId() == 'd_validato' || event.column.getColId() == 'b_validato' ? \"confermato\" : \"inviato\",\n            note: event.column.getColId() == 'd_validato' || event.column.getColId() == 'b_validato' ? \"confermato da \" + localStorage.getItem('sangue_username')! : \"inviato\",\n            b_sto: false\n          }\n\n          this.setOrder(this.order, orderStatus, isAdding);\n          //this.api.setFocusedCell(event.rowIndex, event.column.getColId(), \"top\");\n        }\n      }\n    }\n    setTimeout(() => {\n      console.log(\"refreshing...\");\n      this.periodicRefresh()\n    }, 60000);\n  }\n\n  periodicRefresh() {\n    setInterval(() => {\n      console.log(\"refreshing...\")\n      this.listOrders(this.year, this.month);\n    }, 60000);\n  }\n\n  refresh() {\n    console.log(\"refreshing...\");\n    this.listOrders(this.year, this.month);\n    //this.getAllData();\n  }\n\n  onGridReady = (params: { api: any; columnApi: any; }) => {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n    //console.log(this.columnApi);\n    this.listForecasts(this.year);\n    this.listProducts();\n    this.autoSizeColumns(false);\n  }\n\n  autoSizeColumns(skipHeader: boolean) {\n    const allColumnIds: string[] = [];\n    this.columnApi.getColumns()!.forEach((column: { getId: () => string; }) => {\n      allColumnIds.push(column.getId());\n    });\n    this.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n  }\n\n  onFirstDataRendered = (event: any) => {\n    this.retrieveColumnState();\n  }\n  \n  retrieveColumnState() {\n    const localColumnState = localStorage.getItem(\"ordersColumnState\");\n    //console.log(\"Column state:\");\n    //console.log(localColumnState);\n    if(localColumnState != null) {\n      console.log(JSON.parse(localColumnState));\n      this.columnApi.applyColumnState({state: JSON.parse(localColumnState), applyOrder: true});\n    }\n  }\n\n  saveColumnState() {\n    const allState = this.columnApi.getColumnState();\n    const localColumnState = allState.map(\n      (state) => ({\n        colId: state.colId,\n        sort: state.sort,\n        sortIndex: state.sortIndex,\n        aggFunc: state.aggFunc,\n        flex: state.flex,\n        pinned: state.pinned,\n        pivot: state.pivot,\n        pivotIndex: state.pivotIndex,\n        rowGroup: state.rowGroup,\n        rowGroupIndex: state.rowGroupIndex,\n        width: state.width\n      })\n    );\n    localStorage.setItem(\"ordersColumnState\", JSON.stringify(localColumnState));\n  }\n\n  ngOnInit(): void {\n    this.loginService.checkPromise().subscribe(\n      res => {\n        if(res[0] == \"KO\"){\n          localStorage.removeItem(\"id_session\");\n          this.router.navigate(['login']);\n        }\n      }\n    );    \n    this.getAllData();\n  }\n\n  logAPI(){\n    console.log(this.api);\n  }\n\n  checkMonth() {\n    if(parseInt(this.month) < 1) {\n      this.month = \"1\";\n    }\n    if(parseInt(this.month) > 12) {\n      this.month = \"12\";\n    }\n  }\n\n  /*\n  \n        ORDERS ===========================\n\n  */  \n  listOrders(year: string, month?: string) {\n    this.loading = true;\n    this.ordersService.listOrdersPromise(year, month).subscribe(\n      res => {\n        if(res[0] != \"KO\") {\n          this.orders = res[1];\n          console.log(res[1]);\n          //this.listUsersAndSetLock('210');\n          this.getAllOrderStatusRec(this.orders, 0);\n        }\n        else {\n          this.loginService.logoutPromise().subscribe(\n            res => {\n              this.router.navigate([\"\"]);\n            }\n          )\n        }\n      }\n    );\n  }\n\n  listOrdersAndForecasts(year: string, month?: string) {\n    this.listOrders(year, month);\n    this.listForecasts(year);\n  }\n\n  getFullUsernameById(id: string): string {\n    for(var i = 0; i < this.users.length; ++i) {\n      if(this.users[i].username == id) {\n        return this.users[i].client;\n      }\n    }\n    return \"\";\n  }\n\n  addOrderAndOrderRows(newOrder: Order, newOrderRows: OrderRow[]) {\n    this.ordersService.setOrderPromise(newOrder, true).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          console.log(\"ordersComponent->server response:\");\n          console.log(res);\n          newOrder.id = res[1][0];\n          newOrder.n_ordine = res[1][1];\n          \n          //set order status\n          let orderStatus = {\n            id: \"0\",\n            username: localStorage.getItem('sangue_username')!,\n            id_order: newOrder.id,\n            d_status: newOrder.d_ordine,           \n            status: newOrder.b_validato ? \"confermato\" : \"inviato\",          //order has just been created\n            note: \"ordine appena creato da \" + localStorage.getItem('sangue_username'),\n            b_sto: false\n          }\n          \n          //set orderId and username for all orderRows before submitting\n          for(var i = 0; i < newOrderRows.length; ++i) {\n            newOrderRows[i].id_ordine = res[1][0];\n            newOrderRows[i].username = newOrder.username;\n          }\n\n          //save status on db and locally\n          this.setOrderStatus(orderStatus);\n          this.orderStatusArr.push(orderStatus);\n\n          //then save all orderRows on db\n          this.setOrderRowRec(newOrderRows, 0, newOrder, orderStatus);\n\n          //update grid -> moved at the end of setOrderRowRec\n          //this.setOrderLocally(newOrder, orderStatus, true);\n        }\n      }\n    );\n  }\n\n  setOrderRowRec(newOrderRows: OrderRow[], index: number, newOrder: Order, orderStatus: OrderStatus) {\n    if(index >= newOrderRows.length) {\n      //console.log(\"Exiting setOrderRowRec()\");\n      //update grid\n      this.setOrderLocally(newOrder, orderStatus, true);\n      //this.snackbarService.onCreate();\n      return;\n    }\n    else {\n      this.ordersService.setOrderRowPromise(newOrderRows[index], true).subscribe(\n        res => {\n          if(res[0] == \"OK\") {\n            //console.log(\"You saved the following orderRow:\");\n            //console.log(newOrderRows[index]);\n            this.setOrderRowRec(newOrderRows, index + 1, newOrder, orderStatus);\n          }\n          else {\n            console.error(\"Error saving orderRow!\");\n          }\n        }\n      );\n    }\n  }\n\n  validateOrderRowsRec(orderRows: OrderRow[], index: number) {\n    if(index >= orderRows.length){\n      //console.log(\"Exiting validateOrderRowsRec()\");\n      this.snackbarService.onValidate();\n      return;\n    }\n    else {\n      if(orderRows[index].qta_validata == 0){\n        orderRows[index].qta_validata = orderRows[index].qta;\n      }\n      this.ordersService.setOrderRowPromise(orderRows[index], false).subscribe(\n        res => {\n          if(res[0] == \"OK\") {\n            this.validateOrderRowsRec(orderRows, index + 1);\n          }\n          else {\n            console.error(\"Error validating orderRow!\");\n          }\n        }\n      );\n    }\n  }\n\n  confirmQtaRicevutaOrderRowsRec(orderRows: OrderRow[], index: number) {\n    if(index >= orderRows.length){\n      this.snackbarService.onUpdate();\n      return;\n    }\n    else {\n      console.log(\"orderID: \" + orderRows[index].id_ordine)\n      \n      if(orderRows[index].qta_ricevuta == -1){\n        orderRows[index].qta_ricevuta == orderRows[index].qta_validata;\n      }\n      this.ordersService.setOrderRowPromise(orderRows[index], false).subscribe(\n        res => {\n          if(res[0] == \"OK\") {\n            this.confirmQtaRicevutaOrderRowsRec(orderRows, index + 1);\n          }\n          else {\n            console.error(\"Error confirming received quantity on orderRow!\");\n          }\n        }\n      );\n    }\n  }\n\n  rmOrderAndOrderRows(orderId: string, orderRows: OrderRow[]) {\n    this.ordersService.rmOrderPromise(orderId).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.rmOrderLocally(orderId);\n          for(var i = 0; i < orderRows.length; ++i){\n            this.rmOrderRow(orderRows[i].id);\n          }\n        }\n      }\n    );\n  }\n\n  rmOrder(orderId: string) {\n    this.ordersService.rmOrderPromise(orderId).subscribe(\n      res => {\n        if (res[0] == \"OK\") {\n          this.rmOrderLocally(orderId);\n        }\n        else {\n          console.error(\"Error remiving order with ID: \" + orderId);\n        }\n      }\n    );\n  }\n\n  getOrderGridRowDataById(id: string): OrderGridRowData | null {\n    for(var i = 0; i < this.orderGridRowData.length; ++i) {\n      if(this.orderGridRowData[i].id == id){\n        return this.orderGridRowData[i];\n      }\n    }\n    console.error(\"ID \" + id + \" not found!\");\n    return null;\n  }\n\n  rmOrderLocally(id: string) {\n    let visible = 0;\n    for(let i = 0; i < this.orders.length; ++i) {\n      if(id == this.orders[i].id){\n        this.orders.splice(i, 1);\n        if(this.orders.length == 0) {\n          //no-op\n        }\n        else {\n          //if it was the last index, make the current last index visible\n          if(i == this.orders.length){\n            visible = this.orders.length - 1;\n          }\n          //if it was not the last index, make the current i index visible\n          else{\n            visible = i;\n          }\n        }\n        //this.createOrderGridRowData();\n        //this.updateGrid();\n        this.removeRow(this.getOrderGridRowDataById(id)!);\n        //this.api.ensureIndexVisible(visible);\n        this.snackbarService.onDelete();\n        return;\n      }\n    }\n    console.error(\"Order ID \" + id + \" not found: order not deleted!\");\n  }\n\n  removeRow(order: OrderGridRowData) {\n    const toBeRemoved: any = [];\n    const rowNodes: any = [];\n    this.api.forEachNodeAfterFilterAndSort(function (rowNode: { data: any; }) {\n      if (rowNode.data.id != order.id) {\n        return;\n      }\n      \n      const data = rowNode.data;\n      data.anno = order.anno;\n      data.username = order.username;\n      data.full_username = order.full_username;\n      data.d_ordine = order.d_ordine;\n      data.n_ordine = order.n_ordine;\n      data.b_urgente = order.b_urgente;\n      data.b_extra = order.b_extra;\n      data.b_validato = order.b_validato;\n      data.b_to_supplier = order.b_to_supplier;\n      data.d_validato = order.d_validato;\n      data.status = order.status;\n      data.note = order.note;\n      data.n_ddt = order.n_ddt;\n      data.d_ddt = order.d_ddt;\n      data.d_consegna_prevista = order.d_consegna_prevista;\n      data.note_consegna = order.note_consegna;\n      data.isRowLocked = order.isRowLocked;\n\n      toBeRemoved.push(data);\n      rowNodes.push(rowNode);\n    });\n\n    const res = this.api.applyTransaction({ remove: toBeRemoved})!;\n    //this.api.redrawRows(rowNodes);\n    console.log(res);\n  }\n\n  rmOrderRow(id: string){\n    this.ordersService.rmOrderRow(id);\n  }\n\n  setOrder(order: Order, orderStatus: OrderStatus, isAdding: boolean) {\n    console.log(\"Order:\");\n    console.log(order);\n    console.log(\"month: \" + order.mese);\n\n    this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n      res => {\n        if(res[0] == \"KO\"){\n          console.error(\"Error setting order status for order \" + order.id);\n        }\n        else{\n          order.status = orderStatus.status;\n          this.ordersService.setOrderPromise(order, isAdding).subscribe(\n            res2 => {\n              if(res2 == \"KO\"){\n                console.error(\"Error setting order with id \" + order.id);\n              }\n              else{  \n                if(isAdding) {\n                  order.n_ordine = res2[1][1];\n                }\n                this.setOrderLocally(order, orderStatus, isAdding);\n              }\n            }\n          );\n        }\n      }\n    );\n  }\n\n  setOrderLocally(order: Order, orderStatus: OrderStatus, isAdding: boolean) {    \n    if(!isAdding) {\n      for(let i = 0; i < this.orderGridRowData.length; ++i) {\n        if(order.id == this.orderGridRowData[i].id) {\n          //questa parte è inutile...\n          /*\n          this.orders[i].anno = order.anno;\n          this.orders[i].username = order.username;\n          this.orders[i].d_ordine = order.d_ordine;\n          this.orders[i].b_urgente = order.b_urgente;\n          this.orders[i].b_extra = order.b_extra;\n          this.orders[i].b_validato = order.b_validato;\n          this.orders[i].d_validato = order.d_validato;\n          this.orders[i].note = order.note;\n          this.orders[i].n_ddt = order.n_ddt;\n          this.orders[i].d_ddt = order.d_ddt;\n          this.orders[i].d_consegna_prevista = order.d_consegna_prevista;\n          this.orders[i].note_consegna = order.note_consegna;\n          this.orderStatusArr[i].status = orderStatus.status;\n          */\n          let isLockedCondition: boolean;\n          if(this.loginService.getUserCode() == \"210\") {\n            isLockedCondition = orderStatus.status != \"inviato\";\n          }\n          if(this.loginService.getUserCode() == \"220\") {\n            isLockedCondition = !(orderStatus.status == \"inviato\" || orderStatus.status == \"confermato\");\n          }\n          console.log(\"i: \" + i);\n          console.log(this.orderGridRowData[i]);\n          this.orderGridRowData[i].id = order.id;\n          this.orderGridRowData[i].anno = order.anno;\n          this.orderGridRowData[i].username = order.username;\n          this.orderGridRowData[i].full_username = this.getFullUsernameById(order.username); //per permettere di filtrare sullo username (client)\n          this.orderGridRowData[i].d_ordine = order.d_ordine;\n          this.orderGridRowData[i].n_ordine = order.n_ordine;\n          this.orderGridRowData[i].b_urgente = order.b_urgente;\n          this.orderGridRowData[i].b_extra = order.b_extra;\n          this.orderGridRowData[i].b_validato = order.b_validato;\n          this.orderGridRowData[i].b_to_supplier = (orderStatus.status == \"inviato al fornitore\");\n          this.orderGridRowData[i].d_validato = order.d_validato;\n          this.orderGridRowData[i].status = orderStatus.status;\n          this.orderGridRowData[i].note = order.note;\n          this.orderGridRowData[i].n_ddt = order.n_ddt;\n          this.orderGridRowData[i].d_ddt = order.d_ddt;\n          this.orderGridRowData[i].d_consegna_prevista = order.d_consegna_prevista;\n          this.orderGridRowData[i].note_consegna = order.note_consegna;\n          this.orderGridRowData[i].isRowLocked = isLockedCondition!; \n          \n          this.updateRow(this.orderGridRowData[i]);\n          //this.api.ensureIndexVisible(i);\n          this.snackbarService.onUpdate();\n          return;\n        }\n      }\n    }\n    else {  \n      //if the id is not present, append the new element\n      let newOrderGridRowData = {\n        id: order.id,\n        anno: order.anno,\n        mese: order.mese,\n        username: order.username,\n        full_username: this.getFullUsernameById(order.username), //per permettere di filtrare sullo username (client)\n        d_ordine: order.d_ordine,\n        n_ordine: order.n_ordine,\n        b_urgente: order.b_urgente,\n        b_extra: order.b_extra,\n        b_validato: order.b_validato,\n        b_to_supplier: (orderStatus.status == \"inviato al fornitore\"),\n        d_validato: order.d_validato,\n        status: orderStatus.status,\n        note: order.note,\n        d_consegna_prevista: order.d_consegna_prevista,\n        n_ddt: order.n_ddt,\n        d_ddt: order.d_ddt,\n        note_consegna: order.note_consegna,  \n        isRowLocked: false,\n      }\n\n      this.orderGridRowData.push(newOrderGridRowData);\n      \n      this.api.applyTransaction({\n        add: [{\n          id: order.id,\n          anno: order.anno,\n          mese: order.mese,\n          username: order.username,\n          full_username: this.getFullUsernameById(order.username),\n          d_ordine: order.d_ordine,\n          n_ordine: order.n_ordine,\n          b_urgente: order.b_urgente,\n          b_extra: order.b_extra,\n          b_validato: order.b_validato,\n          b_to_supplier: false,\n          d_validato: order.d_validato,\n          status: newOrderGridRowData.status,\n          note: order.note,\n          d_consegna_prevista: order.d_consegna_prevista,\n          n_ddt: order.n_ddt,\n          d_ddt: order.d_ddt,\n          note_consegna: order.note_consegna,\n          isRowLocked: false\n        }]\n      });\n      //this.api.ensureIndexVisible(this.orderGridRowData.length - 1);\n      //this.createOrderGridRowData();\n      this.snackbarService.onCreate();\n    }\n  }\n\n  updateRow(order: OrderGridRowData) {\n    const toBeUpdated: any = [];\n    const rowNodes: any = [];\n    var isSentToSupplier: boolean = false;\n    this.api.forEachNodeAfterFilterAndSort(function (rowNode: { data: any; }) {\n      if (rowNode.data.id != order.id) {\n        return;\n      }\n      \n      const data = rowNode.data;\n      data.anno = order.anno;\n      data.mese = order.mese;\n      data.username = order.username;\n      data.full_username = order.full_username;\n      data.d_ordine = order.d_ordine;\n      data.n_ordine = order.n_ordine;\n      data.b_urgente = order.b_urgente;\n      data.b_extra = order.b_extra;\n      data.b_validato = order.b_validato;\n      data.b_to_supplier = order.b_to_supplier;\n      isSentToSupplier = order.b_to_supplier;\n      data.d_validato = order.d_validato;\n      data.status = order.status;\n      data.note = order.note;\n      data.n_ddt = order.n_ddt;\n      data.d_ddt = order.d_ddt;\n      data.d_consegna_prevista = order.d_consegna_prevista;\n      data.note_consegna = order.note_consegna;\n      data.isRowLocked = order.isRowLocked;\n\n      toBeUpdated.push(data);\n      rowNodes.push(rowNode);\n    });\n\n    const res = this.api.applyTransaction({ update: toBeUpdated})!;\n    if(isSentToSupplier)\n      this.api.redrawRows(rowNodes);//necessary to update checkboxes to \"disabled\"\n    //console.log(res);\n  }\n\n  createOrderGridRowData() {\n    this.orderGridRowData = [];\n    for(var i = 0; i < this.orders.length; ++i) {\n      if(this.orders[i].status != \"prestito\") {\n        var lock: boolean = false;\n\n        //lock cells ONLY if customer!\n        if(this.loginService.getUserCode() == \"210\"){\n          //locked row conditions:\n          //if date is locked, everything is locked\n          if(this.isDateLocked == true){\n            lock = true;\n          }\n          //if d_validato is set and != epoch, and if d_validato >= d_ordine the lock has been set\n          if(\n            (\n              this.orders[i].d_validato != \"0000-00-00\" \n              && this.orders[i].d_validato != \"1970-01-01\" \n              && this.orders[i].d_validato >= this.orders[i].d_ordine\n            )\n            || this.orderStatusArr[i].status == \"inviato al fornitore\") {\n\n            lock = true;\n          }\n        }\n\n        let toSupplierCondition = false;\n\n        switch(this.orderStatusArr[i].status){\n          case \"inviato\":\n            toSupplierCondition = false;\n            break;\n          case \"confermato\":\n            toSupplierCondition = false;\n            break;\n          default:\n            toSupplierCondition = true;\n            lock = true;\n          break;\n        }\n\n        \n        var newOrderGridRowData = {\n          id: this.orders[i].id,\n          anno: this.orders[i].anno,\n          mese: this.orders[i].mese,\n          username: this.orders[i].username,\n          full_username: this.getFullUsernameById(this.orders[i].username), //per permettere di filtrare sullo username (client)\n          d_ordine: this.orders[i].d_ordine,\n          n_ordine: this.orders[i].n_ordine,\n          b_urgente: this.orders[i].b_urgente,\n          b_extra: this.orders[i].b_extra,// === undefined || this.orders[i].b_extra == null || this.orders[i].b_extra == false ? false : true,\n          b_validato: this.orders[i].b_validato,\n          b_to_supplier: toSupplierCondition,\n          d_validato: this.orders[i].d_validato,\n          status: this.orderStatusArr[i].status,\n          note: this.orders[i].note,\n          d_consegna_prevista: this.orders[i].d_consegna_prevista,\n          n_ddt: this.orders[i].n_ddt == \"\" ? \"0\" : this.orders[i].n_ddt,\n          d_ddt: this.orders[i].d_ddt == \"\" ? \"0000-00-00\" : this.orders[i].d_ddt,\n          note_consegna: this.orders[i].note_consegna,  \n          isRowLocked: lock\n        };\n        this.orderGridRowData.push(newOrderGridRowData);    \n        this.visibleIndex = i;  \n      }\n    }\n    //console.log(this.orders);\n    //console.log(this.orderGridRowData);\n    this.loading = false;\n    //console.log(this.columnApi.getColumnState());\n    //this.getColState();\n  }\n  \n  /*\n  \n        ORDERROWS ===========================\n\n  */\n  listOrderRows(orderId: string) {\n    //console.log(\"listOrders: orderId: \" + orderId);\n    this.ordersService.listOrderRowsPromise(orderId).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          console.log(res[1][0]);\n        }\n      }\n    );\n  }\n  \n  openAddOrderDialog(isExtra: boolean) {\n    const dialogConfig = new MatDialogConfig();\n    \n    dialogConfig.data = {\n      users: this.users,\n      products: this.products,\n      forecasts: this.forecasts,\n      gg_min: this.gg_min,\n      gg_max: this.gg_max,\n      isExtra: isExtra,\n      year: this.year,\n      month: this.month\n    }\n\n    dialogConfig.width = \"95%\";\n    dialogConfig.maxHeight = \"500px\";\n        \n    this.dialogRef = this.dialog.open(\n      AddOrderDialogComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: { newOrder: Order, newOrderRows: OrderRow[], isSubmitted: boolean }) => {\n        if(result !== undefined && result.isSubmitted){\n          let newOrder = result.newOrder;\n          console.log(\"ordersComponent->newOrder\");\n          console.log(newOrder);\n          this.addOrderAndOrderRows(result.newOrder, result.newOrderRows);\n        }\n      }\n    );\n  }\n\n  openEditDateDialog(event: CellClickedEvent) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n\n    console.log(this.gg_min);\n    console.log(this.gg_max);\n    \n\n    switch(event.colDef.field){\n      case \"d_ordine\":\n        dialogConfig.data = {\n          date: event.data.d_ordine,\n          isOrderDate: true,\n          gg_min: this.gg_min,\n          gg_max: this.gg_max\n        }\n        break;\n\n      case \"d_validato\":\n        dialogConfig.data = {\n          date: event.data.d_validato,\n          isValidationDate: true\n        }\n        break;\n      case \"d_ddt\":\n        dialogConfig.data = {\n          date: event.data.d_ddt,\n          isDDTDate: true\n        }\n        break;\n    }\n\n    this.dialogRef = this.dialog.open(\n      DatepickerProductsDialogComponent, //TODO: generic datepicker dialog\n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe( \n      (result: {\n        date: string, \n        isOrderDate: boolean, \n        isValidationDate: boolean,\n        isDDTDate: boolean, \n        isSubmitted: boolean\n      }) => {\n      if(result !== undefined && result.isSubmitted){\n        this.order.id = event.data.id;\n        this.order.anno = event.data.anno;\n        this.order.username = event.data.username;\n        this.order.d_ordine = event.data.d_ordine;\n        this.order.n_ordine = event.data.n_ordine;\n        this.order.b_urgente = event.data.b_urgente;\n        this.order.b_extra = event.data.b_extra;\n        this.order.b_validato = event.data.b_validato;\n        this.order.d_validato = event.data.d_validato;\n        this.order.note = event.data.note;   \n        this.order.n_ddt = event.data.n_ddt;\n        this.order.d_ddt = event.data.d_ddt;\n        this.order.d_consegna_prevista = event.data.d_consegna_prevista;\n        this.order.note_consegna = event.data.note_consegna;\n\n        let orderStatus = {\n          id: \"0\",\n          username: localStorage.getItem('sangue_username')!,\n          id_order: event.data.id,\n          d_status: this.getFormattedDate(new Date()),\n          status: \"\",\n          note: \"\",\n          b_sto: false\n        }\n\n        //when setting order date, just set order date\n        if(result.isOrderDate){\n          this.order.d_ordine = result.date;\n          orderStatus.status = event.data.status; //keep existing status\n          orderStatus.note = \"Data ordine modificata da \" + localStorage.getItem('sangue_username');\n          //console.log(\"setting: \" + this.order.d_ordine);\n          this.setOrder(this.order, orderStatus, false);\n        }\n\n        //when setting a validation date, automatically validate order\n        else if(result.isValidationDate) {\n          this.order.d_validato = result.date;\n          this.order.b_validato = true;\n          orderStatus.status = \"confermato\"; //confirm status\n          orderStatus.note = \"Ordine confermato da \" + localStorage.getItem('sangue_username');\n          //console.log(\"setting: \" + this.order.d_validato);\n          this.setOrder(this.order, orderStatus, false);\n        }\n\n        else if(result.isDDTDate){\n          this.order.d_ddt = result.date;\n          orderStatus.status = \"inviato\"; //confirm status\n          orderStatus.note = \"Data DDT impostata da \" + localStorage.getItem('sangue_username');\n          //console.log(\"setting: \" + this.order.d_ddt);\n          this.setOrder(this.order, orderStatus, false);\n        }\n      }\n    });\n  }\n\n  /*\n  \n        USERS ===========================\n\n  */\n  listUsersAndSetLock(userlevel: string) {\n    this.usersService.listUsersPromise(userlevel).subscribe(\n      res => {\n        if(res[0] == \"KO\") {\n          console.error(\"Error retrieving users!\");\n          this.router.navigate(['login']);\n        }\n        else {\n          this.users = res[1];\n          this.setLock();\n        }\n      }\n    );\n  }\n\n  /*\n  \n        PRODUCTS ===========================\n\n  */\n  listProducts() {\n    this.pharmaRegistryService.listProductsPromise().subscribe(\n      res => {\n        if(res[0] == \"KO\") {\n          this.router.navigate(['login']);\n        }\n        else {\n          this.products = res[1];\n        }\n      }\n    );\n  }\n\n  /*\n  \n        GRID UPDATES ===========================\n\n  */\n  updateGrid(visibleIndex?: number) {\n    this.api.setRowData(this.orderGridRowData);\n    if(visibleIndex !== undefined) {\n      this.api.ensureIndexVisible(visibleIndex, \"top\");\n    }\n  }\n\n  makeRowVisible(index: number, position: string) {\n    console.log(\"index: \" + index);\n    \n    this.api.ensureIndexVisible(index, position);\n  }\n\n  /*\n\n        ORDER PERIOD ===========================\n\n  */\n  setLock() {\n    this.orderablePeriodService.getOrderPeriodPromise().subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.gg_min = parseInt(res[1].gg_min);\n          this.gg_max = parseInt(res[1].gg_max);\n          \n          //lock cells according to the date\n          if(this.gg_min < this.day && this.day > this.gg_max){\n            this.isDateLocked = true;\n          }\n          else {\n            this.isDateLocked = false;\n          }\n\n          //now set grid config\n          if(this.loginService.getUserCode() == '210') {\n            this.isDateLocked ? this.ordersGridConfig = gridConfigOrders210Locked : this.ordersGridConfig = gridConfigOrders210;\n          } \n          if(this.loginService.getUserCode() == '220') {\n            this.isDateLocked ? this.ordersGridConfig = gridConfigOrders220Locked : this.ordersGridConfig = gridConfigOrders220;\n          }\n          this.createOrderGridRowData();\n        }\n        else {\n          console.error(\"Error in getOrderPeriodPromise()\");\n        }\n      }\n    );\n  }\n\n  /*\n\n        FORECAST ===========================\n\n  */\n  listForecasts(year: string) {\n    this.forecastService.listForecastsPromise(year).subscribe(\n      res => {\n        //console.log(res);\n        if(res[0] == \"OK\") {\n          this.forecasts = res[1];\n          environment.globalForecasts = res[1];\n          //this.forecastService.getForecastsGlobally(year);\n          //console.log(this.forecasts);\n        }\n        else {\n          console.error(\"Error retrieving forecasts!\");\n        }\n      }\n    );\n  }\n\n  /**\n   * \n   * ORDER STATUS MANAGEMENT\n   * \n   */\n  \n  getOrderStatus(orderId: string) {\n    this.ordersService.getOrderStatusPromise(orderId).subscribe(\n      res => {        \n        if(res[0] == \"OK\"){\n          console.log(\"WS response:\");\n          console.log(res);\n        }\n        else{\n          console.error(\"Error retrieving orderStatus for order \" + orderId);\n          console.error(res);\n        }\n      }\n    );\n  }\n\n  setOrderStatus(orderStatus: OrderStatus) {\n    this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n      res => {\n        if(res[0] == \"OK\"){\n          console.log(\"status set:\" + res[0]);\n        }\n        else {\n          console.error(\"Error setting status for order with id \" + orderStatus.id_order);\n        }\n      }\n    );\n  }\n\n  //big function to be called at the very beginning, to retrieve everything we need\n  getAllData() {\n    //listOrders, then\n    this.ordersService.listOrdersPromise(this.year, this.month).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.orders = res[1];\n          this.getAllOrderStatusRec(this.orders, 0); \n        }\n        else {\n          console.error(\"Error retrieving orders!\");\n        }\n      }\n    );\n    //getAllOrderStatus, then\n    //setLock\n  }\n\n  getAllOrderStatusRec(orders: Order[], i: number) {\n    //uscita\n    if(i >= orders.length) {\n      console.log(this.orderStatusArr);\n      this.listUsersAndSetLock('210');\n      return;\n    }\n    this.ordersService.getOrderStatusPromise(orders[i].id).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          //console.log(res[1][res[1].length - 1]);\n\n          //if first call, orderStatusArr must be emptied\n          if(i == 0) {\n            this.orderStatusArr = []\n          }\n          //check if all orders have a status\n          if(res[1][res[1].length -1] === undefined) {\n            let orderStatus = {\n              id: \"0\",\n              username: localStorage.getItem('sangue_username')!,\n              id_order: orders[i].id,\n              d_status: orders[i].d_ordine,\n              status: \"inviato\",\n              note: \"\",\n              b_sto: 0\n            }\n            this.orderStatusArr.push(orderStatus);\n          }\n          else{\n            this.orderStatusArr.push(res[1][res[1].length - 1]);\n          }\n          this.getAllOrderStatusRec(orders, ++i);\n        }\n        else {\n          console.error(\"Error retrieving orderStatus for order \" + orders[i].id);\n        }\n      }\n    );\n  }\n\n  getStatusByOrderId(orderId: string): string {\n    for(var i = 0; i < this.orderStatusArr.length; ++i) {\n      if(this.orderStatusArr[i].id_order == orderId) {\n        return this.orderStatusArr[i].status;\n      }\n    }\n    return \"\";\n  }\n\n  getFormattedDate(date: Date): string {\n    let splitDate = date.toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 3);\n    \n    let day = splitDate[0];\n    let month = splitDate[1];\n    let year = splitDate[2];\n\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    return year + \"-\" + month + \"-\" + day;  \n  }\n\n  getColState() {\n    this.columnState = this.columnApi.getColumnState();\n    //this.defaultColumnState = this.columnApi.getColumnState();\n    console.log(this.columnState);\n  }\n  \n  resetColState() {\n    //console.log(\"resetColState\");\n    //console.log(this.defaultColumnState);\n    this.columnApi.applyColumnState({state: this.defaultColumnState});\n  }\n}\n  \n","<div\n*ngIf=\"loginService.getUserCode() == '210' || loginService.getUserCode() == '220'\">\n\t<nav\n\tclass=\"second-nav\">\n\t\t<h1>\n\t\t\t{{ \"Orders\" | translate }}\n\t\t</h1>\n\t\t\n\t\t<button\n\t\t*ngIf=\"(!loading && !isDateLocked) || loginService.getUserCode() == '220'\"\n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Add order' | translate }}\" \n\t\tcolor=\"primary\"\n\t\t(click)=\"openAddOrderDialog(false)\">\n\t\t\t<i class=\"material-icons\">playlist_add</i>\n\t\t</button>\n\n\t\t<button \n\t\t*ngIf=\"isDateLocked && loginService.getUserCode() != '220'\"\n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Add extra order' | translate }}\"\n\t\tcolor=\"accent\"\n\t\t(click)=\"openAddOrderDialog(true)\">\n\t\t\t<i class=\"material-icons\">playlist_add</i>\n\t\t</button>\n\n\t\t<button\n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Orders resume' | translate }}\"\n\t\tclass=\"resume\"\n\t\tstyle=\"background-color: #1D6F42;\"\n\t\trouterLink=\"/orders/resume\">\n\t\t\t<i class=\"material-icons\">grid_on</i>\n\t\t</button>\n\n\t\t<button \n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Refresh' | translate }}\" \n\t\tcolor=\"basic\"\n\t\t(click)=\"refresh()\">\n\t\t\t<i class=\"material-icons\">refresh</i>\n\t\t</button>\n\t\t\n\t\t<p\n\t\tstyle=\"margin: 5px;\">\n\t\t\t{{ 'Reference year' | translate }}:\n\t\t</p>\n\t\t<input \n\t\tmatInput \n\t\ttype=\"number\"\n\t\tplaceholder=\"{{ 'Reference year' | translate }}\" \n\t\t[(ngModel)]=\"year\" \n\t\tstyle=\"width: 50px;\" \n\t\t(change)=\"listOrders(year, month)\">\n\n\t\t<p\n\t\tstyle=\"margin: 5px;\">\n\t\t\t{{ 'Reference month' | translate }}:\n\t\t</p>\n\t\t<input \n\t\tmatInput \n\t\ttype=\"number\"\n\t\tplaceholder=\"{{ 'Reference month' | translate }}\" \n\t\t[(ngModel)]=\"month\" \n\t\tstyle=\"width: 50px;\" \n\t\t(change)=\"listOrders(year, month)\"\n\t\t(keyup)=\"checkMonth()\">\n\t</nav>\n\n\n\t<ag-grid-angular\n\t\tclass=\"ag-theme-material ag-grid-table\"\n\t\t[rowData]=\"orderGridRowData\"\n\t\t[columnDefs]=\"ordersGridConfig\"\n\t\t[defaultColDef]=\"defaultColDef\"\n\t\t[alwaysShowHorizontalScroll]=\"true\"\n\t\t[gridOptions]=\"gridOptions\"\n\t\t[localeText]=\"localeText\"\n\t\t(columnResized)=\"saveColumnState()\"\n\t\t(columnVisible)=\"saveColumnState()\"\n\t\t(columnPivotChanged)=\"saveColumnState()\"\n\t\t(columnRowGroupChanged)=\"saveColumnState()\"\n\t\t(columnValueChanged)=\"saveColumnState()\"\n\t\t(columnMoved)=\"saveColumnState()\"\n\t\t(columnPinned)=\"saveColumnState()\"\n\t\t(gridReady)=\"onGridReady($event)\"\n\t\t(firstDataRendered)=\"onFirstDataRendered($event)\"\n\t\t[getRowId]=\"getRowId\"\n\t\t[animateRows]=\"true\">\n\t\t<!--rimosso (gridReady)=\"onGridReady($event)\"-->\n\t</ag-grid-angular>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>\n    404\n</h1>\n<h3>\n    {{ 'Oops! We did not find what you were looking for' | translate }}...\n</h3>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Product } from 'src/environments/environment';\nimport { CellCheckboxComponent } from '../cell-checkbox/cell-checkbox.component';\nimport { PharmaRegistryComponent } from '../pharma-registry/pharma-registry.component';\n\n@Component({\n  selector: 'app-pharma-registry-active-checkbox',\n  templateUrl: './pharma-registry-active-checkbox.component.html',\n  styleUrls: ['./pharma-registry-active-checkbox.component.css']\n})\nexport class PharmaRegistryActiveCheckboxComponent extends CellCheckboxComponent implements OnInit {\n\n  constructor(\n    private pharmaRegistry: PharmaRegistryComponent,\n    snackbar: MatSnackBar\n  ) {\n    super(snackbar);\n  }\n\n  ngOnInit(): void {\n  }\n\n  override toggleCheckbox(event: any): void {\n    this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n    //console.log(\"current checkbox value: \" + this.currentValue);\n    \n    let newProduct: Product = {\n      id: this.data.id,\n      cod: this.data.cod,\n      des: this.data.des,\n      unita: this.data.unita,\n      confezionamento: this.data.confezionamento,\n      multiplo_confezionamento: this.data.multiplo_confezionamento,\n      multiplo_imballo: this.data.multiplo_imballo,\n      attivo: this.currentValue,\n      extra: this.data.extra,\n      min_ord: this.data.min_ord,\n      valido_da: this.data.valido_da,\n      valido_a: this.data.valido_a,\n      ord: this.data.ord\n    }\n\n    this.pharmaRegistry.setProduct(newProduct, false);\n  }\n}\n","<mat-checkbox\n[checked]=\"checked\"\n(change)=\"toggleCheckbox($event)\">\n</mat-checkbox>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Product } from 'src/environments/environment';\nimport { CellCheckboxComponent } from '../cell-checkbox/cell-checkbox.component';\nimport { PharmaRegistryComponent } from '../pharma-registry/pharma-registry.component';\n\n@Component({\n  selector: 'app-pharma-registry-extra-checkbox',\n  templateUrl: './pharma-registry-extra-checkbox.component.html',\n  styleUrls: ['./pharma-registry-extra-checkbox.component.css']\n})\nexport class PharmaRegistryExtraCheckboxComponent extends CellCheckboxComponent implements OnInit {\n\n  constructor(\n    private pharmaRegistry: PharmaRegistryComponent,\n    snackbar: MatSnackBar\n  ) {\n    super(snackbar);\n  }\n\n  ngOnInit(): void {\n  }\n\n  override toggleCheckbox(event: any): void {\n    this.currentValue == 1 ? this.currentValue = 0 : this.currentValue = 1;\n    //console.log(\"current checkbox value: \" + this.currentValue);\n\n    let newProduct: Product = {\n      id: this.data.id,\n      cod: this.data.cod,\n      des: this.data.des,\n      unita: this.data.unita,\n      confezionamento: this.data.confezionamento,\n      multiplo_confezionamento: this.data.multiplo_confezionamento,\n      multiplo_imballo: this.data.multiplo_imballo,\n      attivo: this.data.attivo,\n      extra: this.currentValue,\n      min_ord: this.data.min_ord,\n      valido_da: this.data.valido_da,\n      valido_a: this.data.valido_a,\n      ord: this.data.ord\n    }\n    \n    this.pharmaRegistry.setProduct(newProduct, false);\n  }\n}\n","<mat-checkbox\n[checked]=\"checked\"\n(change)=\"toggleCheckbox($event)\">\n</mat-checkbox>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment, Product } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PharmaRegistryService {\n  url = environment.basePath + 'anag.php'\n  products: any = [];\n\n  constructor(\n    private http: HttpClient, \n  ) { }\n\n  getProducts(): any[] {\n    let path = this.url + '?request=listProducts&id_session='+localStorage.getItem('id_session');\n    \n    this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    ).subscribe(res => {\n      console.log(res);\n      if(res[0] == \"KO\"){\n        \n        return null;\n      }\n      else{\n        console.log(res[1]);\n        this.products = res[1];\n        return res[1]; \n      }\n    });\n    return [];\n  }\n\n  listProductsPromise(): Observable<any> {\n    let path = this.url + '?request=listProducts&id_session='+localStorage.getItem('id_session');\n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    )\n  }\n\n  getProductsGlobally() {\n    this.listProductsPromise().subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          environment.globalProducts = res[1];\n          //console.log(environment.globalProducts);\n        }\n        else{\n          console.error(\"Error retrieving users!\");\n        }\n      }\n    );\n  }\n\n  setProduct(\n    id: string, \n    cod: string, \n    des: string, \n    unita: number, \n    confezionamento: string, \n    multiplo_confezionamento: number, \n    multiplo_imballo: number,\n    attivo: boolean,\n    extra: boolean,\n    min_ord: number,\n    valido_da: string,\n    valido_a: string,\n    isAdding: boolean\n  ): void{\n    if(!isAdding && parseInt(id) < 1){\n      console.error(\"Invalid ID!\");\n      id = \"\";\n      return;\n    }\n\n    if(id == \"\" || cod == \"\" || des == \"\"){\n      console.error(\"Empty core parameters are invalid.\");\n      return;\n    }\n\n    this.http.post<String[]>(\n      this.url, {\n        request: 'setProduct',\n        id_session: localStorage.getItem('id_session'),\n        id: id,\n        cod: cod,\n        des: des,\n        unita: unita,\n        confezionamento: confezionamento,\n        multiplo_confezionamento: multiplo_confezionamento,\n        multiplo_imballo: multiplo_imballo,\n        attivo: attivo,\n        extra: extra,\n        min_ord: min_ord,\n        valido_da: valido_da,\n        valido_a: valido_a\n      }\n    ).subscribe(res => {\n      console.log(\"WS response: \" + res);\n      if(res[0] == \"KO\"){\n        console.error(res[1].toString());\n      }\n      else{\n        console.log(\"Result: \" + res[0]);\n        console.log(\"Product with ID \" + res[1] + \"successfully set!\");\n      }\n    });\n  }\n\n  setProductPromise(product: Product): Observable<any> {\n    //product.id == -1 for ADDING\n    return this.http.post<String[]>(\n      this.url, \n      {\n        request: 'setProduct',\n        id_session: localStorage.getItem('id_session'),\n        id: product.id,\n        cod: product.cod,\n        des: product.des,\n        ord: product.ord,\n        unita: product.unita,\n        confezionamento: product.confezionamento,\n        multiplo_confezionamento: product.multiplo_confezionamento,\n        multiplo_imballo: product.multiplo_imballo,\n        attivo: product.attivo,\n        extra: product.extra,\n        min_ord: product.min_ord,\n        valido_da: product.valido_da,\n        valido_a: product.valido_a\n      }\n    );\n  }\n\n  addProduct(\n    cod: string, \n    des: string,\n    unita: number, \n    confezionamento: string, \n    multiplo_confezionamento: number, \n    multiplo_imballo: number,\n    attivo: boolean,\n    extra: boolean,\n    min_ord: number,\n    valido_da: string,\n    valido_a: string,  \n  ): void{\n    let id = \"-1\";\n    let isAdding = true;\n    this.setProduct(\n      id, \n      cod, \n      des, \n      unita, \n      confezionamento, \n      multiplo_confezionamento, \n      multiplo_imballo, \n      attivo, \n      extra, \n      min_ord, \n      valido_da, \n      valido_a, \n      isAdding\n    );\n  }\n\n  rmProduct(id: string): void{\n    if(id == \"\" || parseInt(id) < 1){\n      console.error(\"Invalid ID!\");\n      return;\n    }\n\n    this.http.post<String[]>(\n      this.url, \n      {\n        request: 'rmProduct',\n        id_session: localStorage.getItem('id_session'),\n        id: id\n      }\n    ).subscribe(res => {\n      console.log(\"WS response: \" + res);\n      if(res[0] == \"KO\"){\n        console.error(res[1].toString());\n      }\n      else{\n        console.log(\"rmProduct result: \" + res[0]);\n        console.log(\"Removing product with ID \" + res[1]);\n        console.log(\"Product with ID \" + res[1] + \"successfully removed!\");\n      }\n    });\n  }\n\n  rmProductPromise(id: string): Observable<any> {\n    return this.http.post<String[]>(\n      this.url, \n      {\n        request: 'rmProduct',\n        id_session: localStorage.getItem('id_session'),\n        id: id\n      }\n    );\n  }\n}\n","import { Component, Injectable, OnInit, ViewChild } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { environment, Product } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { CellClickedEvent, CellValueChangedEvent, GetRowIdFunc, GetRowIdParams, GridApi, RowDataUpdatedEvent } from 'ag-grid-community';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\nimport { AddProductComponent } from '../add-product/add-product.component';\nimport { AreYouSureProductComponent } from '../are-you-sure-product/are-you-sure-product.component';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { DatepickerProductsDialogComponent } from '../datepicker-products-dialog/datepicker-products-dialog.component';\nimport { AG_GRID_LOCALE_EN, AG_GRID_LOCALE_IT, defaultColDef, pharmaRegistryGridConfig } from 'src/environments/grid-configs';\nimport { Router } from '@angular/router';\nimport { PharmaRegistryService } from '../pharma-registry.service';\nimport { SnackbarService } from '../snackbar.service';\n\n@Component({\n  selector: 'app-pharma-registry',\n  templateUrl: './pharma-registry.component.html',\n  styleUrls: ['./pharma-registry.component.css']\n})\n@Injectable({providedIn: 'root'})\nexport class PharmaRegistryComponent implements OnInit {\n  //auxiliary product\n  product: Product = {\n    id: \"\",\n    cod: \"\",\n    des: \"\",\n    ord: \"\",\n    unita: 0,\n    confezionamento: \"\",\n    multiplo_confezionamento: 0,\n    multiplo_imballo: 0,\n    attivo: false,\n    extra: false,\n    min_ord: 0,\n    valido_da: \"\",\n    valido_a: \"\"\n  };\n  id: string = \"\";\n  products: Product[] = [];\n  url = environment.basePath + 'anag.php';\n\n  //sample param for dialog\n  dialogData: string = \"\";\n\n  //agGrid configuration\n  pharmaRegistryGridConfig: any;\n  gridOptions: any;\n  defaultColDef: any;\n\n  //agGrid API handles\n  @ViewChild(AgGridAngular) agGrid!: AgGridAngular;\n  gridApi!: GridApi;\n  api: any;\n  columnApi: any;\n\n  //dialog reference\n  dialogRef: any;\n\n  isLoading: boolean = false;\n  selectedRow: any;\n\n  public getRowId: GetRowIdFunc = (params: GetRowIdParams) => {\n    return params.data.id;\n  };\n\n  localeText = (environment.currentLanguage == 'it' ? AG_GRID_LOCALE_IT : AG_GRID_LOCALE_EN);\n\n  /*\n  \n    CONSTRUCTOR\n\n  */\n  constructor(\n    public loginService: LoginService, \n    private http: HttpClient,\n    private dialog: MatDialog,\n    private router: Router,\n    private pharmaRegistryService: PharmaRegistryService,\n    private snackbarService: SnackbarService\n  )\n  { \n\n    //columnDef\n    this.pharmaRegistryGridConfig = pharmaRegistryGridConfig;\n\n    this.loginService.getCurrentUserSync();\n    \n    //gridOptions\n    this.gridOptions = {\n      onCellClicked: (event: CellClickedEvent) => {\n        if(event.column.getColId() == \"valido_a\" || event.column.getColId() == \"valido_da\") {\n          this.openEditDateDialog(event);\n        }\n        if(event.column.getColId() == \"action\") {\n          this.selectedRow = this.api.getSelectedRows();\n        }\n      },\n\n      onCellValueChanged: (event: CellValueChangedEvent) => {\n        this.product.id = event.data.id;\n        this.product.cod = event.data.cod;\n        this.product.des = event.data.des;\n        this.product.ord = event.data.ord;\n        this.product.unita = event.data.unita;\n        this.product.confezionamento = event.data.confezionamento;\n        this.product.multiplo_confezionamento = event.data.multiplo_confezionamento;\n        this.product.multiplo_imballo = event.data.multiplo_imballo;\n        this.product.attivo = event.data.attivo;\n        this.product.extra = event.data.extra;\n        this.product.min_ord = event.data.min_ord;     \n\n        //salvo le date in formato italiano sulle variabili locali\n        this.product.valido_da = new Date(event.data.valido_da).toLocaleString('it-IT', {timeZone: 'UTC'}).substring(0, 10);\n        this.product.valido_a = new Date(event.data.valido_a).toLocaleString('it-IT', {timeZone: 'UTC'}).substring(0, 10);\n        \n        this.setProduct(this.product, false); //edit product from grid\n      },\n\n      onRowDataUpdated: (event: RowDataUpdatedEvent) => {\n        //console.log(event);\n      }\n    }\n\n    //defaultColDef\n    this.defaultColDef = defaultColDef;\n\n    this.listProducts();\n  }\n\n  onGridReady = (params: { api: any; columnApi: any; }) => {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n    //this.api.setDomLayout('autoHeight');\n  }\n\n  autoSizeColumns(skipHeader: boolean) {\n    const allColumnIds: string[] = [];\n    this.columnApi.getColumns()!.forEach((column: { getId: () => string; }) => {\n      allColumnIds.push(column.getId());\n    });\n    this.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n  }\n\n  onFirstDataRendered = (event: any) => {\n    this.autoSizeColumns(false);\n    this.retrieveColumnState();\n  }\n  \n  retrieveColumnState() {\n    let localColumnState = localStorage.getItem(\"pharmaRegistryColumnState\");\n    console.log(\"Column state:\");\n    console.log(localColumnState);\n    if(localColumnState != null) {\n      console.log(JSON.parse(localColumnState));\n      this.columnApi.applyColumnState({state: JSON.parse(localColumnState), applyOrder: true});\n    }\n  }\n\n  saveColumnState() {\n    const allState = this.columnApi.getColumnState();\n    const localColumnState = allState.map((state: any) => ({\n      colId: state.colId,\n      sort: state.sort,\n      sortIndex: state.sortIndex,\n      aggFunc: state.aggFunc,\n      flex: state.flex,\n      pinned: state.pinned,\n      pivot: state.pivot,\n      pivotIndex: state.pivotIndex,\n      rowGroup: state.rowGroup,\n      rowGroupIndex: state.rowGroupIndex,\n      width: state.width\n    }));\n    var i = 0;\n    localColumnState.forEach((state: any) => {\n      console.log(state.colId + \": \" + state.sortIndex);\n      state.sortIndex = ++i;\n    });\n\n    localColumnState.forEach((state: any) => {\n      console.log(state.colId + \": \" + state.sortIndex);\n    });\n    console.log(localColumnState)\n    localStorage.setItem(\"pharmaRegistryColumnState\", JSON.stringify(localColumnState));\n  }\n\n  ngOnInit(): void {\n    this.loginService.checkPromise().subscribe(\n      res => {\n        if(res[0] == \"KO\"){\n          localStorage.removeItem(\"id_session\");\n          localStorage.removeItem(\"sangue_username\");\n          this.loginService.logged = false;\n          this.router.navigate(['login']);\n        }\n      }\n    );\n/*\n    setTimeout(\n      () => {\n        this.api = this.agGrid.api;\n      }, 300);\n*/\n  }\n\n  setId(id: string) {\n    this.id = id;\n  }\n\n  listProducts(): void{\n    this.isLoading = true;\n    this.pharmaRegistryService.listProductsPromise().subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.products = res[1];\n          this.isLoading = false;\n        }\n        else{\n          console.error(\"Error retrieving products!\");\n        }\n      }\n    );\n  }\n\n  logAPI(){\n    console.log(this.api);\n  }\n\n  //if adding, product.id == -1\n  setProduct(product: Product, isAdding: boolean): void{\n    //console.log(product.id == \"-1\" ? \"adding\" : \"setting\");\n    \n    //console.log(product);\n    \n    this.pharmaRegistryService.setProductPromise(product).subscribe(\n      res => {\n        if(res[0] == \"OK\"){\n          if(isAdding){\n            console.log(\"aaaaaaa\");\n            \n            let newProduct = product;\n            newProduct.id = res[1];\n            this.addLocally(newProduct);\n            this.snackbarService.onCreate();\n          }\n          else{\n            this.setLocally(product);\n            this.snackbarService.onUpdate();\n          }\n        }\n        else {\n          console.error(\"Error setting product!\");\n        }\n      }\n    );\n  }\n\n  addLocally(product: Product){\n    this.products.push(product);\n    this.api.applyTransaction({\n      add: [{\n        id: product.id,\n        cod: product.cod,\n        des: product.des,\n        ord: product.ord,\n        unita: product.unita,\n        confezionamento: product.confezionamento,\n        multiplo_confezionamento: product.multiplo_confezionamento,\n        multiplo_imballo: product.multiplo_imballo,\n        attivo: product.attivo,\n        extra: product.extra,\n        min_ord: product.min_ord,\n        valido_da: product.valido_da,\n        valido_a: product.valido_a\n      }]\n    });\n    /*\n    this.agGrid.api.updateRowData({\n      add: [{\n        id: product.id,\n        cod: product.cod,\n        des: product.des,\n        ord: product.ord,\n        unita: product.unita,\n        confezionamento: product.confezionamento,\n        multiplo_confezionamento: product.multiplo_confezionamento,\n        multiplo_imballo: product.multiplo_imballo,\n        attivo: product.attivo,\n        extra: product.extra,\n        min_ord: product.min_ord,\n        valido_da: product.valido_da,\n        valido_a: product.valido_a\n      }]\n    });\n    */\n    //console.log(this.products);\n    //console.log(this.products);\n    //this.updateGrid();\n    this.api.ensureIndexVisible(this.products.length - 1);\n  }\n\n  rmProduct(id: string): void{\n    this.pharmaRegistryService.rmProductPromise(id).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.rmLocally(res[1]);\n          this.snackbarService.onDelete();\n        }\n        else {\n          console.error(\"Error removing product with ID = \" + id);\n        }\n      }\n    );\n  }\n\n  rmLocally(id: string){\n    let visible = 0;\n    for(let i = 0; i < this.products.length; ++i){\n      if(id == this.products[i].id){\n        this.products.splice(i, 1);\n        if(this.products.length == 0){\n          //no-op\n        }\n        else{\n          //if it was the last index, make the current last index visible\n          if(i == this.products.length){\n            visible = this.products.length - 1;\n          }\n          //if it was not the last index, make the current i index visible\n          else{\n            visible = i;\n          }\n        }\n        this.updateGrid();\n        /*\n        this.api.applyTransaction({\n          remove: this.selectedRow\n        });\n        */\n        this.selectedRow = null;\n\n        this.api.ensureIndexVisible(visible);\n        return;\n      }\n    }\n  }\n\n  openAddProductDialog(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n\n    dialogConfig.data = {\n      cod: this.product.cod, \n      des: this.product.des,\n      ord: this.product.ord,\n      unita: this.product.unita,\n      confezionamento: this.product.confezionamento,\n      multiplo_confezionamento: this.product.multiplo_confezionamento,\n      multiplo_imballo: this.product.multiplo_imballo,\n      attivo: this.product.attivo,\n      extra: this.product.extra,\n      min_ord: this.product.min_ord,\n      valido_da: this.product.valido_da,\n      valido_a: this.product.valido_a\n    }\n\n    this.dialogRef = this.dialog.open(\n      AddProductComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: {newProduct: Product, isSubmitted: boolean}) => {\n      if(result !== undefined && result.isSubmitted){\n        let newProduct = result.newProduct;\n        newProduct.id = \"-1\";\n        this.setProduct(newProduct, true);\n        //this.updateGrid();\n      }});\n  }\n\n  openAreYouSureDialog(){\n    this.dialogRef = this.dialog.open(\n      AreYouSureProductComponent,\n      {\n        data:{\n          id: this.id\n        }\n      },\n    );\n    this.dialogRef.afterClosed().subscribe((result: { id: string; isSubmitted: boolean }) =>{\n      if(result !== undefined && result.isSubmitted){        \n        this.rmProduct(result.id);\n        this.updateGrid();\n      }\n    });\n  }\n\n  openEditDateDialog(event: CellClickedEvent) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n\n    switch(event.column.getColId()){\n      case \"valido_da\":\n        dialogConfig.data = {\n          date: event.data.valido_da,\n          isValidoDa: true,\n          isValidoA: false\n        }\n        break;\n\n      case \"valido_a\":\n        dialogConfig.data = {\n          date: event.data.valido_a,\n          isValidoDa: false,\n          isValidoA: true\n        }\n        break;\n    }\n\n    this.dialogRef = this.dialog.open(\n      DatepickerProductsDialogComponent, \n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe(\n      (result: {\n        date: string,\n        isValidoDa: boolean,\n        isValidoA: boolean,\n        isSubmitted: boolean\n      }) => {\n\n      if(result !== undefined && result.isSubmitted){\n        //console.log(result);\n        \n        let editedProduct = {\n          id: event.data.id,\n          cod: event.data.cod,\n          des: event.data.des,\n          ord: event.data.ord,\n          unita: event.data.unita,\n          confezionamento: event.data.confezionamento,\n          multiplo_confezionamento: event.data.multiplo_confezionamento,\n          multiplo_imballo: event.data.multiplo_imballo,\n          attivo: event.data.attivo,\n          extra: event.data.extra,\n          min_ord: event.data.min_ord,\n          valido_da: \"\",\n          valido_a: \"\"\n        };\n\n        if(result.isValidoDa){\n          editedProduct.valido_da = result.date;\n          editedProduct.valido_a = event.data.valido_a;\n          this.setProduct(editedProduct, false);\n        }\n        else if(result.isValidoA) {\n          editedProduct.valido_da = event.data.valido_da;\n          editedProduct.valido_a = result.date;\n          this.setProduct(editedProduct, false);\n        }\n        this.updateGrid();\n      }\n    });\n  }\n\n  setLocally(product: Product){\n    for(let i = 0; i < this.products.length; ++i){\n      if(product.id == this.products[i].id){\n        this.products[i].cod = product.cod;\n        this.products[i].des = product.des;\n        this.products[i].ord = product.ord;\n        this.products[i].unita = product.unita;\n        this.products[i].confezionamento = product.confezionamento;\n        this.products[i].multiplo_confezionamento = product.multiplo_confezionamento;\n        this.products[i].multiplo_imballo = product.multiplo_imballo;\n        this.products[i].attivo = product.attivo;\n        this.products[i].extra = product.extra;\n        this.products[i].min_ord = product.min_ord;\n        this.products[i].valido_da = product.valido_da;\n        this.products[i].valido_a = product.valido_a;\n        //this.updateGrid();\n        this.api.applyTransaction({\n          set: [{\n            id: product.id,\n            cod: product.cod,\n            des: product.des,\n            ord: product.ord,\n            unita: product.unita,\n            confezionamento: product.confezionamento,\n            multiplo_confezionamento: product.multiplo_confezionamento,\n            multiplo_imballo: product.multiplo_imballo,\n            attivo: product.attivo,\n            extra: product.extra,\n            min_ord: product.min_ord,\n            valido_da: product.valido_da,\n            valido_a: product.valido_a\n          }]\n        });\n        this.api.ensureIndexVisible(i);\n        return;\n      }\n    }\n  }\n\n  updateGrid(){\n    //console.log(this.api);\n    this.api.setRowData(this.products);\n  }\n}\n\n\n","<div *ngIf=\"loginService.getProfile() == '200'\">\n\t<nav\n\tclass=\"second-nav\">\n\t\t<h1>\n\t\t\t{{ 'Pharmaceutical registry' | translate }}\n\t\t</h1>\n\t\t\n\t\t<button\n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Add product' | translate }}\" \n\t\tcolor=\"primary\"\n\t\t(click)=\"openAddProductDialog()\">\n\t\t\t<i class=\"material-icons\">playlist_add</i>\n\t\t</button>\n\t</nav>\n\n\t<ag-grid-angular \n\t\tclass=\"ag-theme-material ag-grid-table\"\n\t\t[rowData]=\"this.products\"\n\t\t[columnDefs]=\"pharmaRegistryGridConfig\"\n\t\t[defaultColDef]=\"defaultColDef\"\n\t\t[alwaysShowHorizontalScroll]=\"true\"\n\t\t[gridOptions]=\"gridOptions\"\n\t\t[localeText]=\"localeText\"\n\t\t(columnResized)=\"saveColumnState()\"\n\t\t(columnMoved)=\"saveColumnState()\"\n\t\t(columnVisible)=\"saveColumnState()\"\n\t\t(columnPivotChanged)=\"saveColumnState()\"\n\t\t(columnRowGroupChanged)=\"saveColumnState()\"\n\t\t(columnValueChanged)=\"saveColumnState()\"\n\t\t(columnPinned)=\"saveColumnState()\"\n\t\t(gridReady)=\"onGridReady($event)\"\n\t\t(firstDataRendered)=\"onFirstDataRendered($event)\"\n\t\t[getRowId]=\"getRowId\"\n\t\t[animateRows]=\"true\">\n\t\t<!--rimosso (gridReady)=\"onGridReady($event)\"-->\n\t</ag-grid-angular>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SendToSupplierDialogComponent } from '../send-to-supplier-dialog/send-to-supplier-dialog.component';\n\n@Component({\n  selector: 'app-send-to-customer-dialog',\n  templateUrl: './send-to-customer-dialog.component.html',\n  styleUrls: ['./send-to-customer-dialog.component.css']\n})\nexport class SendToCustomerDialogComponent implements OnInit {\n  orderId!: string;\n  fullUsername!: string;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { orderId: string, fullUsername: string },\n    private dialogRef: MatDialogRef<SendToSupplierDialogComponent>\n  ) {\n    this.orderId = data.orderId;\n    this.fullUsername = data.fullUsername;\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.dialogRef.close({isSubmitted: true});\n  }\n\n  onCancel() {\n    this.dialogRef.close({isCancelled: true});\n  }\n}\n","<h2 align=\"center\">{{ 'Send order' | translate }} {{ orderId }} {{ 'to customer' | translate }} {{data.fullUsername}}?</h2>\n<h3 align=\"center\">{{ 'Once you confirm, this action cannot be undone' | translate}}.</h3>\n<div mat-dialog-actions align=\"center\">\n    <button mat-raised-button (click)=\"onSubmit()\" color=\"warn\">{{ 'Submit' | translate }}</button>\n    <button mat-raised-button matDialogClose=\"true\" (click)=\"onCancel()\" color=\"primary\">{{ 'Cancel' | translate }}</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-send-to-supplier-dialog',\n  templateUrl: './send-to-supplier-dialog.component.html',\n  styleUrls: ['./send-to-supplier-dialog.component.css']\n})\nexport class SendToSupplierDialogComponent implements OnInit {\n\n  orderId!: string;\n  isValidated!: boolean;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { orderId: string, isValidated: boolean},\n    private dialogRef: MatDialogRef<SendToSupplierDialogComponent>\n  ) {\n    this.orderId = data.orderId;\n    this.isValidated = data.isValidated;\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.dialogRef.close({isSubmitted: true});\n  }\n\n  onCancel() {\n    this.dialogRef.close({isCancelled: true});\n  }\n}\n","<div\n*ngIf=\"isValidated\">\n    <h2 align=\"center\">{{ 'Send order' | translate }} {{ orderId }} {{ 'to supplier' | translate }}?</h2>\n    <!--h3 align=\"center\">{{ 'Once you confirm, the order cannot be edited' | translate}}.</h3-->\n    <div mat-dialog-actions align=\"center\">\n        <button mat-raised-button (click)=\"onSubmit()\" color=\"warn\">{{ 'Submit' | translate }}</button>\n        <button mat-raised-button matDialogClose=\"true\" (click)=\"onCancel()\" color=\"primary\">{{ 'Cancel' | translate }}</button>\n    </div>\n</div>\n<div\n*ngIf=\"!isValidated\">\n    <h2 align=\"center\">{{ 'Order with ID' | translate }} {{ orderId }} {{ 'has not been validated' | translate }}!</h2>\n    <h3 align=\"center\">{{ 'You cannot send an order to the supplier if it has not been validated' | translate}}.</h3>\n    <div mat-dialog-actions align=\"center\">\n        <button mat-raised-button matDialogClose=\"true\" (click)=\"onCancel()\" color=\"primary\">{{ 'Close' | translate }}</button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment, translations } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n\n  constructor(private snackbar: MatSnackBar) { }\n\n  //custom message\n  openSnackbar(message: string) {\n    this.snackbar.open(message)\n  }\n\n  //general create message\n  onCreate() {\n    this.snackbar.open(environment.currentLanguage == \"it\" ? translations.it.CreateSuccessful : translations.en.CreateSuccessful);\n  }\n\n  //general update message\n  onUpdate() {\n    this.snackbar.open(environment.currentLanguage == \"it\" ? translations.it.UpdateSuccessful : translations.en.UpdateSuccessful);\n  }\n\n  //general delete message\n  onDelete() {\n    this.snackbar.open(environment.currentLanguage == \"it\" ? translations.it.DeleteSuccessful : translations.en.DeleteSuccessful);\n  }\n\n  //general validation message\n  onValidate() {\n    this.snackbar.open(environment.currentLanguage == \"it\" ? translations.it.ValidateSuccessful : translations.en.ValidateSuccessful)\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { CellClickedEvent, CellValueChangedEvent, GetRowIdFunc, GetRowIdParams, GridApi } from 'ag-grid-community';\nimport { environment, Forecast, Order, OrderStatus, Product, SupplyGridRowData, User } from 'src/environments/environment';\nimport { AG_GRID_LOCALE_EN, AG_GRID_LOCALE_IT, defaultColDef, gridConfigSupplies } from 'src/environments/grid-configs';\nimport { DatepickerProductsDialogComponent } from '../datepicker-products-dialog/datepicker-products-dialog.component';\nimport { ForecastService } from '../forecast.service';\nimport { LoginService } from '../login.service';\nimport { OrdersService } from '../orders.service';\nimport { PharmaRegistryService } from '../pharma-registry.service';\nimport { SnackbarService } from '../snackbar.service';\nimport { UsersService } from '../users.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-supplies',\n  templateUrl: './supplies.component.html',\n  styleUrls: ['./supplies.component.css']\n})\nexport class SuppliesComponent implements OnInit {\n\n  year: string = new Date().getFullYear().toString();\n  dialogRef: any;\n  dialog: any;\n\n  users: User[] = [];\n  products: Product[] = [];\n  orders: Order[] = [];\n  orderStatusArr: any[] = [];\n  forecasts: Forecast[] = [];\n  supplyGridRowData: SupplyGridRowData[] = [];\n\n  suppliesGridConfig: any;\n\n  //agGrid config\n  ordersGridConfig!: any;\n  defaultColDef: any = defaultColDef;\n  gridOptions: any;\n\n  //agGrid API handles\n  @ViewChild(AgGridAngular) agGrid!: AgGridAngular;\n  gridApi!: GridApi;\n  api: any;\n  columnApi: any;\n\n  //spinner boolean\n  //isLoading = true;//qui mostra lo spinner senza caricare nulla\n  isLoading = false;\n\n  public getRowId: GetRowIdFunc = (params: GetRowIdParams) => {\n    return params.data.id;\n  };\n\n  localeText = (environment.currentLanguage == 'it' ? AG_GRID_LOCALE_IT : AG_GRID_LOCALE_EN);\n\n  loginService!: LoginService\n  constructor(\n    private ordersService: OrdersService,\n    private pharmaRegistryService: PharmaRegistryService,\n    private usersService: UsersService,\n    private snackbarService: SnackbarService,\n    private router: Router,\n    loginService: LoginService,\n    dialog: MatDialog,\n  ) { \n    this.loginService = loginService;\n    this.dialog = dialog;\n\n    this.loginService.getCurrentUserSync();\n\n    if(environment.globalUsers.length == 0) {\n      this.usersService.getUsersGlobally();\n    }\n\n    if(environment.globalProducts.length == 0) {\n      this.pharmaRegistryService.getProductsGlobally();\n    }    \n\n    this.suppliesGridConfig = gridConfigSupplies;\n\n    this.gridOptions = {\n      onCellClicked: (event: CellClickedEvent) => {\n        if(event.column.getColId() == \"d_consegna_prevista\" && (event.data.status == \"inviato al fornitore\" || event.data.status == \"inviato al cliente\")) {\n          this.openEditDateDialog(event);\n        }\n      },\n      onCellValueChanged: (event: CellValueChangedEvent) => {          \n        console.log(event);      \n        console.log(\"Changed from \" + event.oldValue + \" to \" + event.newValue);\n        var order: Order = {\n          id: event.data.id,\n          anno: event.data.anno,\n          mese: event.data.mese,\n          username: event.data.username,\n          d_ordine: event.data.d_ordine,\n          n_ordine: event.data.n_ordine,\n          b_urgente: event.data.b_urgente,\n          b_extra: event.data.b_extra,\n          b_validato: event.data.b_validato,\n          d_validato: event.data.d_validato,\n          note: event.data.note,\n          status: event.data.status,\n          d_consegna_prevista: event.data.d_consegna_prevista,\n          n_ddt: event.data.n_ddt,\n          d_ddt: event.data.d_ddt,\n          note_consegna: event.data.note_consegna,\n          b_prestito: event.data.b_prestito,\n          id_ordine_prestito: event.data.id_ordine_prestito,\n          username_prestito_a: event.data.username_prestito_a,\n          username_prestito_da: event.data.username_prestito_da\n        }\n          \n        let orderStatus = {\n          id: \"0\",\n          username: localStorage.getItem('sangue_username')!,\n          id_order: event.data.id,\n          d_status: this.getFormattedDate(new Date()),\n          status: event.data.status,\n          note: \"Fornitura modificata da \" + localStorage.getItem('sangue_username'),\n          b_sto: false\n        }\n        //console.log(\"order value changed\");\n        //console.log(order);\n        //console.log(\"status\")\n        //console.log(orderStatus);\n        this.setOrder(order, orderStatus);\n      }\n    }\n  }\n\n  onFirstDataRendered = (event: any) => {\n    //this.retrieveColumnState(); //moved to onGridReady\n  }\n  \n  retrieveColumnState() {\n    const localColumnState = localStorage.getItem(\"suppliesColumnState\");\n    if(localColumnState != null) {\n      console.log(JSON.parse(localColumnState));\n      this.columnApi.applyColumnState({state: JSON.parse(localColumnState), applyOrder: true});\n    }\n  }\n\n  saveColumnState() {\n    const allState = this.columnApi.getColumnState();\n    const localColumnState = allState.map(\n      (state: any) => ({\n          colId: state.colId,\n          sort: state.sort,\n          sortIndex: state.sortIndex,\n          aggFunc: state.aggFunc,\n          flex: state.flex,\n          pinned: state.pinned,\n          pivot: state.pivot,\n          pivotIndex: state.pivotIndex,\n          rowGroup: state.rowGroup,\n          rowGroupIndex: state.rowGroupIndex,\n          width: state.width\n        }));\n    //console.log(\"saving: \");\n    //console.log(localColumnState[0].colId);\n    localStorage.setItem(\"suppliesColumnState\", JSON.stringify(localColumnState));\n  }\n\n  ngOnInit(): void {\n    this.loginService.checkPromise().subscribe(\n      res => {\n        if(res[0] == \"KO\"){\n          localStorage.removeItem(\"id_session\");\n          this.router.navigate(['login']);\n        }\n      }\n    );\n  }\n\n  autoSizeColumns(skipHeader: boolean) {\n    const allColumnIds: string[] = [];\n    this.columnApi.getColumns()!.forEach((column: { getId: () => string; }) => {\n      allColumnIds.push(column.getId());\n    });\n    this.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n  }\n\n  onGridReady = (params: { api: any; columnApi: any; }) => {\n    this.api = params.api;\n    this.columnApi = params.columnApi;\n    this.getAllData();\n    this.listProducts();\n    this.listOrders(this.year);\n    this.autoSizeColumns(false);\n    this.retrieveColumnState();\n  }\n\n  getAllData() {\n    this.ordersService.listOrdersPromise(this.year).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.orders = res[1];\n          this.orderStatusArr = [];\n          this.getAllOrderStatusRec(this.orders, 0);\n        }\n        else {\n          console.error(\"Error retrieving orders!\");\n        }\n      }\n    );\n  }\n\n  getAllOrderStatusRec(orders: Order[], i: number) {\n    if(i >= orders.length) {\n      this.listUsers();\n      return;\n    }\n    this.ordersService.getOrderStatusPromise(orders[i].id).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.orderStatusArr.push(res[1][res[1].length - 1]);\n          this.getAllOrderStatusRec(orders, i + 1);\n        }\n        else {\n          console.error(\"Error retrieving orderStatus for order \" + orders[i].id);\n        }\n      }\n    );\n  }\n\n  listOrders(year: string) {\n    this.ordersService.listOrdersPromise(year).subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.orders = res[1];\n        }\n        else {\n          console.error(\"Error retrieving orders!\");\n        }\n      }\n    );\n  }\n\n  listProducts() {\n    this.pharmaRegistryService.listProductsPromise().subscribe(\n      res => {\n        if(res[0] == \"OK\"){\n          this.products = res[1];\n        }\n        else {\n          console.error(\"Error retrieving products!\");\n        }\n      }\n    );\n  }\n\n  listUsers() {\n    //this.isLoading = true;//qui continua a scaricare dati\n    this.usersService.listUsersPromise('210').subscribe(\n      res => {\n        this.isLoading = true;//QUI FUNZIONAAAAAAAAAAAAAAAAAAAAAA\n        if(res[0] == \"OK\") {\n          this.users = res[1];\n          this.createSupplyGridRowData();\n        }\n        else {\n          console.error(\"Error retrieving users!\");\n        }\n      }\n    );\n  }\n\n  createSupplyGridRowData() {\n    this.supplyGridRowData = [];\n    for(var i = 0; i < this.orders.length; ++i) {\n      //aggiungo solo gli ordini con stato \"inviato al fornitore\" o \"inviato al cliente\"\n      var lock: boolean = false;\n      let toCustomerCondition = false;\n\n      switch(this.orderStatusArr[i].status){\n        case \"inviato\":\n          toCustomerCondition = false;\n          break;\n        case \"confermato\":\n          toCustomerCondition = false;\n          break;\n        case \"inviato al fornitore\":\n          toCustomerCondition = false;\n          break;\n        case \"inviato cliente\":\n          toCustomerCondition = true;\n          break;\n        default:\n          toCustomerCondition = true;\n          lock = true;\n        break;\n      }\n\n      //console.log(\"n: \" + this.orders[i].n_ordine+ \", toCustomerCondition: \" + toCustomerCondition)\n\n      var newSupplyGridRowData = {\n        id: this.orders[i].id,\n        anno: this.orders[i].anno,\n        mese: this.orders[i].mese,\n        username: this.orders[i].username,\n        full_username: this.getFullUsernameById(this.orders[i].username), //per permettere di filtrare sullo username (client)\n        d_ordine: this.orders[i].d_ordine,\n        n_ordine: this.orders[i].n_ordine,\n        b_urgente: this.orders[i].b_urgente,\n        b_extra: this.orders[i].b_extra,\n        b_validato: this.orders[i].b_validato,\n        //prossimo campo non presente in orderGridRowData... sistemare\n        b_to_customer: toCustomerCondition,\n        d_validato: this.orders[i].d_validato,\n        status: this.orderStatusArr[i].status,\n        note: this.orders[i].note,\n        d_consegna_prevista: this.orders[i].d_consegna_prevista,\n        n_ddt: this.orders[i].n_ddt,\n        d_ddt: this.orders[i].d_ddt,\n        note_consegna: this.orders[i].note_consegna,\n        isRowLocked: lock\n      };\n      this.supplyGridRowData.push(newSupplyGridRowData);\n    }\n    //console.log(this.supplyGridRowData);\n    this.isLoading = false;\n  }\n\n  getFullUsernameById(id: string): string {\n    for(var i = 0; i < this.users.length; ++i) {\n      if(this.users[i].username == id) {\n        return this.users[i].client;\n      }\n    }\n    return \"\";\n  }\n\n  getFormattedDate(date: Date): string {\n    let splitDate = date.toLocaleString('it-IT').split(\",\", 2)[0].split(\"/\", 3);\n    \n    let day = splitDate[0];\n    let month = splitDate[1];\n    let year = splitDate[2];\n\n    if(day.length == 1){\n      day = \"0\" + day;\n    }\n    if(month.length == 1){\n      month = \"0\" + month;\n    }\n    return year + \"-\" + month + \"-\" + day;  \n  }\n\n  getSupplyGridRowDataById(id: string): SupplyGridRowData | null {\n    for(var i = 0; i < this.supplyGridRowData.length; ++i) {\n      if(this.supplyGridRowData[i].id == id){\n        return this.supplyGridRowData[i];\n      }\n    }\n    console.error(\"ID \" + id + \" not found!\");\n    return null;\n  }\n\n  updateRow(id: string, status: string) {\n    const toBeUpdated: any = [];\n    const rowNodes: any = [];\n    const supply = this.getSupplyGridRowDataById(id)!;\n    this.api.forEachNodeAfterFilterAndSort(function (rowNode: { data: any; }) {\n      if (rowNode.data.id != supply.id) {\n        return;\n      }\n      const data = rowNode.data;\n      data.b_to_customer = true;\n      data.status = status;\n      data.isRowLocked = true;\n      \n      toBeUpdated.push(data);\n      rowNodes.push(rowNode);\n    });\n\n    const res = this.api.applyTransaction({ update: toBeUpdated})!;\n    this.snackbarService.onUpdate();\n  }\n\n  openEditDateDialog(event: CellClickedEvent) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n\n    dialogConfig.data = {\n      date: event.value,\n      isEstimatedDeliveryDate: true,\n    }\n\n    this.dialogRef = this.dialog.open(\n      DatepickerProductsDialogComponent, //TODO: generic datepicker dialog\n      dialogConfig\n    );\n\n    this.dialogRef.afterClosed().subscribe( (result: {date: string, isEstimatedDeliveryDate: boolean, isSubmitted: boolean}) => {\n      if(result !== undefined && result.isSubmitted){\n        let order = {\n          id: event.data.id,\n          anno: event.data.anno,\n          mese: event.data.mese,\n          username: event.data.username,\n          d_ordine: event.data.d_ordine,\n          n_ordine: event.data.n_ordine,\n          b_urgente: event.data.b_urgente,\n          b_extra: event.data.b_extra,\n          b_validato: event.data.b_validato,\n          d_validato: event.data.d_validato,\n          note: event.data.note,\n          status: event.data.status,\n          d_consegna_prevista: result.date, //here the date gets updated\n          n_ddt: event.data.n_ddt,\n          d_ddt: event.data.d_ddt,\n          note_consegna: event.data.note_consegna,\n          b_prestito: event.data.b_prestito,\n          id_ordine_prestito: event.data.id_ordine_prestito,\n          username_prestito_a: event.data.username_prestito_a,\n          username_prestito_da: event.data.username_prestito_da\n        }\n\n        let orderStatus = {\n          id: \"0\",\n          username: localStorage.getItem('sangue_username')!,\n          id_order: event.data.id,\n          d_status: this.getFormattedDate(new Date()),\n          status: \"\",\n          note: \"\",\n          b_sto: false\n        }\n\n        //when setting order date, just set order date\n        if(result.isEstimatedDeliveryDate){\n          order.d_consegna_prevista = result.date;\n          orderStatus.status = event.data.status; //keep existing status\n          orderStatus.note = \"Data di consegna prevista impostata a \" + order.d_consegna_prevista + \" da \" + localStorage.getItem('sangue_username');\n          this.setOrder(order, orderStatus);\n          //console.log(order)\n          //console.log(orderStatus)\n          //this.setOrderLocally(order, orderStatus);\n        }\n      }\n    });\n  }\n  \n  setOrder(order: Order, orderStatus: OrderStatus) {\n    this.ordersService.setOrderStatusPromise(orderStatus).subscribe(\n      res => {\n        if(res[0] == \"KO\"){\n          console.error(\"Error setting order status for order \" + order.id);\n        }\n        else{\n          this.ordersService.setOrderPromise(order, false).subscribe(\n            res2 => {\n              if(res2 == \"KO\"){\n                console.error(\"Error setting order with id \" + order.id);\n              }\n              else{  \n                this.setOrderLocally(order, orderStatus);\n              }\n            }\n          );\n        }\n      }\n    );\n  }\n\n  setOrderLocally(order: Order, orderStatus: OrderStatus) {    \n    console.log(\"status\")\n    console.log(orderStatus)\n    for(let i = 0; i < this.orders.length; ++i) {\n      if(order.id == this.orders[i].id) {\n        this.orders[i].anno = order.anno;\n        this.orders[i].mese = order.mese;\n        this.orders[i].username = order.username;\n        this.orders[i].d_ordine = order.d_ordine;\n        this.orders[i].n_ordine = order.n_ordine;\n        this.orders[i].status = order.status;\n        this.orders[i].b_urgente = order.b_urgente;\n        this.orders[i].b_extra = order.b_extra;\n        this.orders[i].b_validato = order.b_validato;\n        this.orders[i].d_validato = order.d_validato;\n        this.orders[i].note = order.note;\n        this.orders[i].d_consegna_prevista = order.d_consegna_prevista;\n        this.orders[i].n_ddt = order.n_ddt;\n        this.orders[i].d_ddt = order.d_ddt;\n        this.orders[i].note_consegna = order.note_consegna;\n        this.orders[i].b_prestito = order.b_prestito;\n        this.orders[i].id_ordine_prestito = order.id_ordine_prestito;\n        this.orders[i].username_prestito_da = order.username_prestito_da;\n        this.orders[i].username_prestito_a = order.username_prestito_a;\n\n        this.orderStatusArr[i].status = orderStatus.status;\n\n        let isLockedCondition: boolean = false;\n        /*\n        if(this.loginService.getUserCode() == \"210\") {\n          isLockedCondition = orderStatus.status != \"inviato\";\n        }\n        if(this.loginService.getUserCode() == \"220\") {\n          isLockedCondition = !(orderStatus.status == \"inviato\" || orderStatus.status == \"confermato\");\n        }\n        */\n        if(orderStatus.status == \"inviato al cliente\" || orderStatus.status == \"ricevuto\") {\n          isLockedCondition = true;\n        }\n\n        console.log(\"assigning status\")\n        console.log(orderStatus.status)\n        console.log(this.orderStatusArr[i].status)\n        this.supplyGridRowData[i].id = order.id;\n        this.supplyGridRowData[i].anno = order.anno;\n        this.supplyGridRowData[i].mese = order.mese;\n        this.supplyGridRowData[i].username = order.username;\n        this.supplyGridRowData[i].full_username = this.getFullUsernameById(order.username);\n        this.supplyGridRowData[i].d_ordine = order.d_ordine;\n        this.supplyGridRowData[i].n_ordine = order.n_ordine;\n        this.supplyGridRowData[i].b_urgente = order.b_urgente;\n        this.supplyGridRowData[i].b_extra = order.b_extra;\n        this.supplyGridRowData[i].b_validato = order.b_validato;\n        this.supplyGridRowData[i].d_validato = order.d_validato;\n        this.supplyGridRowData[i].status = orderStatus.status;\n        this.supplyGridRowData[i].note = order.note;\n        this.supplyGridRowData[i].d_consegna_prevista = order.d_consegna_prevista;\n        this.supplyGridRowData[i].n_ddt = order.n_ddt;\n        this.supplyGridRowData[i].d_ddt = order.d_ddt;\n        this.supplyGridRowData[i].note_consegna = order.note_consegna;\n        this.supplyGridRowData[i].isRowLocked = isLockedCondition!; \n\n        console.log(\"supplyGridRowData[i].status: \" + this.supplyGridRowData[i].status);\n        \n        this.updateRow(this.supplyGridRowData[i].id, this.supplyGridRowData[i].status);\n        this.snackbarService.onUpdate();\n        return;\n      }\n    }\n  }\n}","<div\n*ngIf=\"loginService.getUserCode() == '230'\">\n\t<nav\n\tclass=\"second-nav\">\n\t\t<h1>\n\t\t\t{{ \"Supplies\" | translate }}\n\t\t</h1>\n\n\t\t<button \n\t\tmat-mini-fab\n\t\tmatTooltip=\"{{ 'Refresh' | translate }}\" \n\t\tcolor=\"basic\"\n\t\t(click)=\"listOrders(year)\">\n\t\t\t<i class=\"material-icons\">refresh</i>\n\t\t</button>\n\n\t\t<input \n\t\tmatInput \n\t\ttype=\"number\"\n\t\tplaceholder=\"{{ 'Reference year' | translate }}\" \n\t\t[(ngModel)]=\"year\" \n\t\tstyle=\"width: 50px;\" \n\t\t(change)=\"listOrders(year)\">\n\t</nav>\n\n\t\t\n\t<ag-grid-angular\n\t\tclass=\"ag-theme-material ag-grid-table\"\n\t\t[rowData]=\"supplyGridRowData\"\n\t\t[columnDefs]=\"suppliesGridConfig\"\n\t\t[alwaysShowHorizontalScroll]=\"true\"\n\t\t[alwaysShowVerticalScroll]=\"false\"\n\t\t[defaultColDef]=\"defaultColDef\"\n\t\t[gridOptions]=\"gridOptions\"\n\t\t[localeText]=\"localeText\"\n\t\t(gridReady)=\"onGridReady($event)\"\n\t\t(columnResized)=\"saveColumnState()\"\n\t\t(columnVisible)=\"saveColumnState()\"\n\t\t(columnPivotChanged)=\"saveColumnState()\"\n\t\t(columnRowGroupChanged)=\"saveColumnState()\"\n\t\t(columnValueChanged)=\"saveColumnState()\"\n\t\t(columnMoved)=\"saveColumnState()\"\n\t\t(columnPinned)=\"saveColumnState()\"\n\t\t[getRowId]=\"getRowId\"\n\t\t[animateRows]=\"true\"\n\t\t(firstDataRendered)=\"onFirstDataRendered($event)\">\n\t\t<!--to see flashing cells, add [enableCellChangeFlash]=\"true\"-->\n\t</ag-grid-angular>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment, User } from 'src/environments/environment';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  url = environment.basePath + 'anag.php';\n  users: any = [];\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  listUsers(userlevel: string | null): any[] {\n    let path = this.url + '?request=listUsers&id_session='+localStorage.getItem('id_session')+'&userlevel='+userlevel;\n    \n    console.log(path);\n\n    this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    ).subscribe(res => {\n      console.log(res);\n      if(res[0] == \"KO\"){\n        console.error(\"Error retrieving products!\");\n        return null;\n      }\n      else{\n        //console.log('>>>>>users: ' + res[1]);\n        this.users = res[1];\n        console.log(this.users);\n        return res[1]; \n      }\n    });\n    return [];\n  }\n\n  listUsersPromise(userlevel: string | null): Observable<any> {\n    let path = this.url + '?request=listUsers&id_session='+localStorage.getItem('id_session')+'&userlevel='+userlevel;\n\n    return this.http.get<String[]>(\n      path,\n      { responseType: \"json\" }\n    )\n  }\n\n  getUserById(id: string, users: any) {\n    for(var i = 0; i < users.length; ++i) {\n      if(id == users[i].client) {\n        //console.log(\"Returning \" + users[i].client);\n        return users[i].client;\n      }\n    }\n  }\n\n  getUsersGlobally() {\n    this.listUsersPromise(\"210\").subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.users = res[1];\n          environment.globalUsers = res[1];\n          //console.log(environment.globalUsers);\n        }\n        else{\n          console.error(\"Error retrieving users!\");\n        }\n      }\n    );\n  }\n  \n  getCurrentUser(users: User[]) {\n    for(var i = 0; i < users.length; ++i) {\n      \n      if(users[i].id == localStorage.getItem(\"sangue_username\")) {\n        console.log(users[i].client);\n        environment.currentUser.id = users[i].id;\n        environment.currentUser.username = users[i].username;\n        environment.currentUser.client = users[i].client;   \n        return;\n      }\n    }\n    environment.currentUser.id = localStorage.getItem(\"sangue_username\")!;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VersionService {\n\n  constructor(private http: HttpClient) { }\n\n  getVersionPromise(): Observable<any>  {\n    let path = environment.basePath + 'anag.php?request=getVersion&id_session=' + localStorage.getItem(\"id_session\");\n    console.log(path);\n    return this.http.get<String[]>(\n      path,\n      {\n        responseType: \"json\"\n      }\n    )\n  }\n\n  checkVersion() {\n    this.getVersionPromise().subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          /*\n          console.log(res);\n          console.log(\"Checking version...\");\n          console.log(\"Local version: \" + localStorage.getItem(\"version\"));\n          console.log(\"Local env version: \" + environment.version);\n          */\n\n          //if env version is higher than localstorage version, update localstorage\n          if(environment.version > localStorage.getItem(\"version\")!) {\n            localStorage.setItem(\"version\", environment.version);\n          } \n\n          let localVersion = localStorage.getItem(\"version\");\n\n          //if localstorage version is null or lower, update it with remote version\n          if(localVersion == null || parseFloat(localVersion!) < parseFloat(res[1])) {\n            //console.log(\"Local version lower than server saved one!\");\n            //console.log(\"Remote version: \" + res[1]);\n            localStorage.setItem(\"version\", res[1]);\n            //console.log(\"New local version: \" + localStorage.getItem(\"version\"));\n            environment.version = res[1];\n            //console.log(\"New local env version: \" + environment.version);\n            window.location.reload();\n          }\n\n          //if localstorage version is higher than remote version, update remote version\n          if(parseFloat(localVersion!) > parseFloat(res[1])) {\n            //console.log(\"Local version higher than server saved one!\");\n            this.setVersionPromise(localVersion!).subscribe(\n              res => {\n                if(res[0] == \"OK\") {\n                  console.log(\"Version \" + environment.version + \" saved on server!\");\n                }\n                else {\n                  console.error(\"Error setting version!\");\n                }\n              }\n            );\n          }\n        }\n        else {\n          console.error(\"Error checking version!\");\n        }\n      }\n    );\n  }\n\n  setVersionPromise(version: string): Observable<any> {\n    return this.http.post<String[]>(\n      environment.basePath + 'anag.php', \n      {\n        request: 'setVersion',\n        id_session: localStorage.getItem(\"id_session\"),\n        version: version, \n      }\n    )\n  }\n}\n","import { Component, Injectable, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment, User } from 'src/environments/environment';\nimport { LoginService } from '../login.service';\nimport { OrdersService } from '../orders.service';\nimport { UsersService } from '../users.service';\nimport { VersionService } from '../version.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\n@Injectable()\nexport class WelcomeComponent implements OnInit {\n\n  users: User[] = [];\n  currentClient: string = \"\";\n\n  constructor(\n    public loginService: LoginService, \n    private usersService: UsersService,\n    private ordersService: OrdersService,\n    private versionService: VersionService,\n    private router: Router\n  ) {\n    this.getUsersGlobally();\n    this.ordersService.getOrdersGlobally();\n    this.versionService.checkVersion();\n  }\n\n  ngOnInit(): void {\n    this.loginService.checkPromise().subscribe(\n      res => {\n        if(res[0] == \"KO\"){\n          localStorage.removeItem(\"id_session\");\n          localStorage.removeItem(\"id_profile\");\n          localStorage.removeItem(\"sangue_username\");\n          localStorage.removeItem(\"sangue_client\");\n          this.loginService.logged = false;\n          this.router.navigate(['login']);\n        }\n      }\n    );\n  }\n\n  getUsersGlobally() {\n    this.usersService.listUsersPromise(\"210\").subscribe(\n      res => {\n        if(res[0] == \"OK\") {\n          this.users = res[1];\n          environment.globalUsers = res[1]\n          console.log(environment.globalUsers);\n          //this.loginService.getCurrentUser(this.users);\n          this.loginService.getCurrentUserSync();\n        }\n        else{\n          console.error(\"Error retrieving users!\");\n        }\n      }\n    );\n  }\n}\n","<nav\nclass=\"second-nav\">\n\t<h1>{{ 'Home' | translate }}</h1>\n</nav>\n<section>\t\n\t<article\n\t*ngIf=\"loginService.getUserCode() != '200' && loginService.getUserCode() != '230'\">\n\t\t<a [routerLink]=\"['/forecast']\">\n\t\t\t<mat-card>\n\t\t\t\t<mat-card-title>{{ 'Forecasts' | translate}}</mat-card-title>\n\t\t\t\t<mat-card-content>{{ 'Forecasts dashboard' | translate}}</mat-card-content>\n\t\t\t</mat-card>\n\t\t</a>\n\t</article>\n\t\n\t<article\n\t*ngIf=\"loginService.getUserCode() != '200' && loginService.getUserCode() != '230'\">\n\t\t<a [routerLink]=\"['/orders']\">\n\t\t\t<mat-card>\n\t\t\t\t<mat-card-title>{{ 'Orders' | translate}}</mat-card-title>\n\t\t\t\t<mat-card-content>{{ 'Orders dashboard' | translate}}</mat-card-content>\n\t\t\t</mat-card>\n\t\t</a>\n\t</article>\n\n\t<article\n\t*ngIf=\"loginService.getUserCode() == '210' || loginService.getUserCode() == '220'\">\n\t\t<a [routerLink]=\"['/loans']\">\n\t\t\t<mat-card>\n\t\t\t\t<mat-card-title>{{ 'Loans' | translate}}</mat-card-title>\n\t\t\t\t<mat-card-content>{{ 'Lend a product or view granted and/or received loans' | translate}}</mat-card-content>\n\t\t\t</mat-card>\n\t\t</a>\n\t</article>\n\n\t<article\n\t*ngIf=\"loginService.getUserCode() == '220'\">\n\t\t<a [routerLink]=\"['/order-period']\">\n\t\t\t<mat-card>\n\t\t\t\t<mat-card-title>{{ 'Order period' | translate}}</mat-card-title>\n\t\t\t\t<mat-card-content>{{ 'Order period management' | translate}}</mat-card-content>\n\t\t\t</mat-card>\n\t\t</a>\n\t</article>\n\n\t<article\n\t*ngIf=\"loginService.getUserCode() == '200'\">\n\t\t<a [routerLink]=\"['/pharma-registry']\">\n\t\t\t<mat-card>\n\t\t\t\t<mat-card-title>{{ 'Pharmaceutical registry' | translate}}</mat-card-title>\n\t\t\t\t<mat-card-content>{{ 'Products dashboard' | translate}}</mat-card-content>\n\t\t\t</mat-card>\n\t\t</a>\n\t</article>\n\n\t<article\n\t*ngIf=\"loginService.getUserCode() == '230'\">\n\t\t<a [routerLink]=\"['/supplies']\">\n\t\t\t<mat-card>\n\t\t\t\t<mat-card-title>{{ 'Supplies' | translate}}</mat-card-title>\n\t\t\t\t<mat-card-content>{{ 'Supplies dashboard' | translate}}</mat-card-content>\n\t\t\t</mat-card>\n\t\t</a>\n\t</article>\n\n\t<article>\n\t\t<a>\n\t\t\t<mat-card\n\t\t\t(click)=\"loginService.logout()\">\n\t\t\t\t<mat-card-title>{{ 'Logout' | translate}}</mat-card-title>\n\t\t\t\t<mat-card-content>{{ 'Disconnection' | translate}}</mat-card-content>\n\t\t\t</mat-card>\n\t\t</a>\n\t</article>\n</section>\n\n\n<footer>\n\t<p \n\t*ngIf=\"loginService.getUsername() != null\"\n\talign=\"center\">\n\t\t{{ 'Logged as' | translate }} <b>{{ loginService.currentUser.client }}</b>.\n\t</p>\n\t<p \n\t*ngIf=\"loginService.getUsername() == null\"\n\talign=\"center\">\n\t\t{{ 'You\\'re not logged!' | translate }} <a [routerLink]=\"['/login']\">{{ 'Login' | translate }}</a>\n\t</p>\t\n</footer>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { TranslateService } from \"@ngx-translate/core\";\n\nexport const environment = {\n  production: false,\n  basePath: 'https://vm-portalmmg.sistemapiemonte.it/collector/modules/ws/sangue/',\n  reportPath: 'https://vm-portalmmg.sistemapiemonte.it/collector/',\n  logoutPath: 'https://servizi.regione.piemonte.it/catalogo/sistema-informativo-regionale-portale-medici-pediatri',\n  currentLanguage: 'it',\n  globalUsers: [],\n  globalProducts: [],\n  globalForecasts: [],\n  globalOrders: [],\n  currentUser: {\n    id: \"\",\n    username: \"\",\n    client: \"\"\n  },\n  version: \"11\",\n};\n\nexport interface AreYouSureData {\n  id: string;\n}\n\nexport interface Product {\n  id: string;\n  cod: string;\n  des: string;\n  ord: string;\n  unita: number;\n  confezionamento: string;\n  multiplo_confezionamento: number;\n  multiplo_imballo: number;\n  attivo: boolean;\n  extra: boolean;\n  min_ord: number;\n  valido_da: string;\n  valido_a: string;\n}\n\nexport interface Forecast {\n  id: string;\n  anno: number;\n  username: string;\n  id_prd: string;\n  qta: number;\n  note: string;\n  qta_approvata: number;\n  costo_unitario: number;\n}\n\nexport interface ForecastGridRowData {\n  id: string;\n  anno: number;\n  username: string,\n  full_username: string;\n  id_prd: string;\n  product_name: string;\n  qta: number;\n  note: string;\n  qta_approvata: number;\n  costo_unitario: number;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  client: string;\n}\n\n//\nexport interface Order {\n  id: string;\n  anno: number;\n  mese: number;\n  username: string;\n  d_ordine: string;\n  n_ordine: number;\n  status: string;\n  b_urgente: boolean;\n  b_extra: boolean;\n  b_validato: boolean;\n  d_validato: string;\n  note: string;\n  d_consegna_prevista: string;\n  n_ddt: string;\n  d_ddt: string;\n  note_consegna: string;\n  b_prestito: boolean;\n  id_ordine_prestito: string;\n  username_prestito_da: string;\n  username_prestito_a: string;\n}\n\nexport interface OrderGridRowData {\n  mese: any;\n  id: string;\n  anno: number;\n  username: string;\n  full_username: string;\n  d_ordine: string;\n  n_ordine: number;\n  b_urgente: boolean;\n  b_extra: boolean;\n  b_validato: boolean;\n  b_to_supplier: boolean;\n  d_validato: string;\n  status: string;\n  note: string;\n  d_consegna_prevista: string;\n  n_ddt: string;\n  d_ddt: string;\n  note_consegna: string;\n  isRowLocked: boolean;\n}\n\nexport interface LoanGridRowData {\n  id: string;\n  anno: number;\n  username: string;\n  full_username_from: string;\n  full_username_to: string;\n  d_ordine: string;\n  n_ordine: number;\n  note: string;\n  b_prestito: boolean;\n  id_ordine_prestito: string;\n}\n\nexport interface OrderRow {\n  id: string;\n  id_ordine: string;          //identificativo dell'ordine di cui fa parte\n  n_riga: number;             //numero della riga?\n  id_prd: string;             //id del prodotto che fa parte della riga di quest'ordine\n  username: string;           //id dell'utente che ha piazzato l'ordine\n  qta: number;                //quante copie del prodotto sono state ordinate\n  motivazione: string;        //perchè vengono ordinate così tante copie\n  qta_validata: number;       //quante copie del prodotto vengono concesse\n  qta_ricevuta: number;       //quante copie del prodotto vengono ricevute\n  note: string;\n}\n\n/**\n * \n */\nexport interface OrderRowGridRowData {\n  id: string;\n  id_ordine: string;\n  n_riga: number;\n  id_prd: string;\n  product_name: string;\n  username: string;\n  full_username: string;\n  qta: number;\n  max_mese: number;\n  motivazione: string;\n  qta_validata: number;\n  qta_ricevuta: number;\n  note: string;\n  isQtaRicevutaSet: boolean;\n}\n\nexport interface OrderStatus {\n  id: string,\n  username: string,         //username dell'ultimo utente che ha modificato lo stato dell'ordine\n  id_order: string,         //id dell'ordine a cui si riferisce lo stato\n  d_status: string,         //data di ultima modifica dello stato dell'ordine\n  status: string,           //[inviato|confermato|inviato al fornitore|inviato al cliente|ricevuto]\n  note: string;\n  b_sto: boolean            //false = l'ordine (lo stato) è appena stato creato; true: l'ordine (lo stato) è appena stato solo modificato\n}\n\n//similar to orders\nexport interface SupplyGridRowData {\n  id: string;\n  anno: number;\n  mese: number;\n  username: string;\n  full_username: string; //per permettere di filtrare sullo username (client)\n  d_ordine: string;\n  n_ordine: number;\n  b_urgente: boolean;\n  b_extra: boolean;\n  b_validato: boolean;\n  b_to_customer: boolean;\n  d_validato: string;\n  status: string;\n  note: string;\n  d_consegna_prevista: string;\n  n_ddt: string;\n  d_ddt: string;\n  note_consegna: string;\n  isRowLocked: boolean;\n}\n\n//to handle upload and download of pdf files\nexport interface OrderDDT {\n  id: string;\n  username: string;\n  id_order: string;\n  filename: string;\n  filebase64: string;\n}\n\nexport const translations = {\n  it: {\n    ThresholdSurpassed: \"Soglia superata! Si prega di giustificare la quantità in eccesso nel box 'Motivazione'.\",\n    CreateSuccessful: \"Elemento creato con successo!\",\n    UpdateSuccessful: \"Elemento aggiornato con successo!\",\n    DeleteSuccessful: \"Elemento eliminato con successo!\",\n    ValidateSuccessful: \"Elemento validato!\",\n    UrgentOrderAlert: \"Dato che quest'ordine è urgente, si prega di avvertire il fornitore entro 24h.\",\n    PleaseProvideNotes: \"Si prega di fornire delle annotazioni valide!\",\n    FileDownloadHasStarted: \"Il download del file è iniziato.\",\n    FileUploadStarted: \"Il caricamento del file è iniziato.\",\n    FileUploadSuccessful: \"Caricamento file completato!\"\n  },\n  en: {\n    ThresholdSurpassed: \"Threshold surpassed! Please justify the exceeding quantity in the 'Reason' text box.\",\n    CreateSuccessful: \"Created successfully!\",\n    UpdateSuccessful: \"Updated successfully!\",\n    DeleteSuccessful: \"Deleted successfully!\",\n    ValidateSuccessful: \"Validated!\",\n    UrgentOrderAlert: \"Since this order is urgent, you are required to warn the supplier within 24h.\",\n    PleaseProvideNotes: \"Please provide valid notes!\",\n    FileDownloadHasStarted: \"File download has started.\",\n    FileUploadStarted: \"File upload has started\",\n    FileUploadSuccessful: \"File upload completed!\"\n  }\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { ButtonDeleteForecastComponent } from \"src/app/button-delete-forecast/button-delete-forecast.component\";\nimport { ButtonDeleteProductComponent } from \"src/app/button-delete-product/button-delete-product.component\";\nimport { ButtonEditOrderComponent } from \"src/app/button-edit-order/button-edit-order.component\";\nimport { ButtonLoanDetailsComponent } from \"src/app/button-loan-details/button-loan-details.component\";\nimport { ButtonOrderReportComponent } from \"src/app/button-order-report/button-order-report.component\";\nimport { ButtonSupplyDetailsComponent } from \"src/app/button-supply-details/button-supply-details.component\";\nimport { ButtonSupplyReportComponent } from \"src/app/button-supply-report/button-supply-report.component\";\nimport { DdtOrderActionsComponent } from \"src/app/ddt-order-actions/ddt-order-actions.component\";\nimport { DropdownProductsForecastComponent } from \"src/app/dropdown-products-forecast/dropdown-products-forecast.component\";\nimport { DropdownUsersForecastComponent } from \"src/app/dropdown-users-forecast/dropdown-users-forecast.component\";\nimport { DropdownUsersOrdersComponent } from \"src/app/dropdown-users-orders/dropdown-users-orders.component\";\nimport { OrdersExtraCheckboxComponent } from \"src/app/orders-extra-checkbox/orders-extra-checkbox.component\";\nimport { OrdersReceivedCheckboxComponent } from \"src/app/orders-received-checkbox/orders-received-checkbox.component\";\nimport { OrdersSentCheckboxComponent } from \"src/app/orders-sent-checkbox/orders-sent-checkbox.component\";\nimport { OrdersToCustomerCheckboxComponent } from \"src/app/orders-to-customer-checkbox/orders-to-customer-checkbox.component\";\nimport { OrdersUrgentCheckboxComponent } from \"src/app/orders-urgent-checkbox/orders-urgent-checkbox.component\";\nimport { OrdersValidatedCheckboxComponent } from \"src/app/orders-validated-checkbox/orders-validated-checkbox.component\";\nimport { PharmaRegistryActiveCheckboxComponent } from \"src/app/pharma-registry-active-checkbox/pharma-registry-active-checkbox.component\";\nimport { PharmaRegistryExtraCheckboxComponent } from \"src/app/pharma-registry-extra-checkbox/pharma-registry-extra-checkbox.component\";\n\n/**\n * \n * The following configs need to be used in the \n * [columnDefs] attribute of the <ag-grid-angular> tag\n * \n */\n\nexport var localeLang = 'it'//navigator.language.split(\"-\", 2)[0]\n\n//===============================================================================================================\n//Products\nexport const pharmaRegistryGridHeaders = {\n  it: {\n    ID: 'ID',\n    Code: 'Codice',\n    Description: 'Descrizione',\n    Units: 'Unità',\n    Packaging: 'Confezionamento',\n    MultiplePackaging: 'Multiplo confezionamento',\n    MultiplePacking: 'Multiplo imballo',\n    Active: 'Attivo',\n    Extra: 'Extra',\n    MinimumOrder: 'Ordine minimo',\n    ValidFrom: 'Valido da',\n    ValidThrough: 'Valido fino a',\n    Action: 'Azione',\n    Sorting: 'Ordinamento',\n    InvalidDate: 'Data non valida',\n    DateNotSet: 'Data non impostata'\n  },\n  en: {\n    ID: 'ID',\n    Code: 'Code',\n    Description: 'Description',\n    Units: 'Units',\n    Packaging: 'Packaging',\n    MultiplePackaging: 'Multiple packaging',\n    MultiplePacking: 'Multiple packing',\n    Active: 'Active',\n    Extra: 'Extra',\n    MinimumOrder: 'Minimum order',\n    ValidFrom: 'Valid from',\n    ValidThrough: 'Valido through',\n    Action: 'Action',\n    Sorting: 'Sorting',\n    InvalidDate: 'Invalid date',\n    DateNotSet: 'Date not set'\n  }\n}\n\n//AgGrid config for PharmaRegistryComponent and userlevel 200\nexport const pharmaRegistryGridConfig = [\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.Code : pharmaRegistryGridHeaders.en.Code, \n    field: 'cod', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.Sorting : pharmaRegistryGridHeaders.en.Sorting, \n    field: 'ord', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.Description : pharmaRegistryGridHeaders.en.Description, \n    field: 'des', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.Units : pharmaRegistryGridHeaders.en.Units, \n    field: 'unita', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.Packaging : pharmaRegistryGridHeaders.en.Packaging, \n    field: 'confezionamento', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.MultiplePackaging : pharmaRegistryGridHeaders.en.MultiplePackaging, \n    field: 'multiplo_confezionamento', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.MultiplePacking : pharmaRegistryGridHeaders.en.MultiplePacking, \n    field: 'multiplo_imballo', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.Active : pharmaRegistryGridHeaders.en.Active, \n    field: 'attivo', \n    editable: false,\n    cellRenderer: PharmaRegistryActiveCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.Extra : pharmaRegistryGridHeaders.en.Extra, \n    field: 'extra', \n    editable: false,\n    cellRenderer: PharmaRegistryExtraCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.MinimumOrder : pharmaRegistryGridHeaders.en.MinimumOrder, \n    field: 'min_ord', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.ValidFrom : pharmaRegistryGridHeaders.en.ValidFrom, \n    field: 'valido_da', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      let date = new Date(params.value).toLocaleDateString('it-IT');\n      if(date == \"Invalid Date\" || date == \"0000-00-00\" || date == \"1970-01-01\" || params.value == null)\n        return localeLang == 'it' ? pharmaRegistryGridHeaders.it.DateNotSet : pharmaRegistryGridHeaders.en.DateNotSet\n      return date;\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.ValidThrough : pharmaRegistryGridHeaders.en.ValidThrough, \n    field: 'valido_a', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {   \n      let date = new Date(params.value).toLocaleDateString('it-IT');\n      if(date == \"Invalid Date\" || date == \"0000-00-00\" || date == \"1970-01-01\" || params.value == null)\n        return localeLang == 'it' ? pharmaRegistryGridHeaders.it.DateNotSet : pharmaRegistryGridHeaders.en.DateNotSet\n      return date;\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? pharmaRegistryGridHeaders.it.Action : pharmaRegistryGridHeaders.en.Action, \n    cellRenderer: ButtonDeleteProductComponent,\n    autoHeight: true\n  }\n];\n\n//===============================================================================================================\n//FORECASTS\nexport const forecastGridHeaders = {\n  it: {\n    ID: \"ID\",\n    Year: \"Anno\",\n    User: \"Utente\",\n    ProductName: \"Nome prodotto\",\n    Quantity: \"Quantità\",\n    Notes: \"Note\",\n    ApprovedQuantity: \"Quantità approvata\",\n    CostPerUnit: \"Costo unitario\",\n    Action: \"Azione\",\n    Pending: \"In attesa\",\n  },\n  en: {\n    ID: \"ID\",\n    Year: \"Year\",\n    User: \"User\",\n    ProductName: \"Product name\",\n    Quantity: \"Quantity\",\n    Notes: \"Notes\",\n    ApprovedQuantity: \"Approved quantity\",\n    CostPerUnit: \"Cost per unit\",\n    Action: \"Action\",\n    Pending: \"In attesa\",\n  }\n}\n\n//AgGrid config for ForecastComponent and userlevel 210\nexport const gridConfigForecast210 = [\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.Year : forecastGridHeaders.en.Year, \n    field: 'anno', \n    editable: (params: { data: { qta_approvata: string; }; })  => {\n      return (params.data.qta_approvata == \"In attesa\" || params.data.qta_approvata == \"in attesa\" || params.data.qta_approvata == \"0\");\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.ProductName : forecastGridHeaders.en.ProductName, \n    field: 'product_name',\n    cellRenderer: DropdownProductsForecastComponent,\n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.Quantity : forecastGridHeaders.en.Quantity, \n    field: 'qta', \n    editable: (params: { data: { qta_approvata: string; }; })  => {\n      return (params.data.qta_approvata == \"In attesa\" || params.data.qta_approvata == \"in attesa\" || params.data.qta_approvata == \"0\");\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.ApprovedQuantity : forecastGridHeaders.en.ApprovedQuantity, \n    field: 'qta_approvata', \n    editable: false,\n    cellRenderer: (params: { value: string | number; }) => {\n      if(params.value == \"0\" || params.value == null || params.value == 0) {\n        return localeLang == 'it' ? forecastGridHeaders.it.Pending : forecastGridHeaders.en.Pending;\n      }\n      else {\n        return params.value;\n      }\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.Notes : forecastGridHeaders.en.Notes, \n    field: 'note', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.Action : forecastGridHeaders.en.Action, \n    cellRenderer: ButtonDeleteForecastComponent,\n    autoHeight: true\n  }\n];\n\n//AgGrid config for ForecastComponent and userlevel 220\nexport const gridConfigForecast220 = [\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.Year : forecastGridHeaders.en.Year, \n    field: 'anno', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.User : forecastGridHeaders.en.User, \n    field: 'full_username',\n    cellRenderer: DropdownUsersForecastComponent,\n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.ProductName : forecastGridHeaders.en.ProductName, \n    field: 'product_name',\n    //cellRenderer: DropdownProductsForecastComponent,\n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.Quantity : forecastGridHeaders.en.Quantity, \n    field: 'qta', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.ApprovedQuantity : forecastGridHeaders.en.ApprovedQuantity, \n    field: 'qta_approvata', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.CostPerUnit : forecastGridHeaders.en.CostPerUnit, \n    field: 'costo_unitario', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.Notes : forecastGridHeaders.en.Notes, \n    field: 'note', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? forecastGridHeaders.it.Action : forecastGridHeaders.en.Action, \n    cellRenderer: ButtonDeleteForecastComponent,\n    autoHeight: true\n  }\n];\n\n//===============================================================================================================\n//ORDERS\n//header translation for orders\nexport const orderGridHeaders = {\n  it: {\n    ID: \"ID\",\n    User: \"Utente\",\n    Year: \"Anno\",\n    OrderDate: \"Data ordine\",\n    OrderNumber: \"Numero ordine\",\n    Urgent: \"Urgente\",\n    Extra: \"Extra\",\n    Validated: \"Validato\",\n    ValidationDate: \"Data validazione\",\n    Notes: \"Note\",\n    EditOrder: \"Modifica ordine\",\n    Pending: \"In attesa\",\n    Action: \"Azione\",\n    Status: \"Stato\",\n    SentToSupplier: \"Inviato al fornitore\",\n    SentToCustomer: \"Inviato al cliente\",\n    Received: \"Ricevuto\",\n    Report: \"Report\",\n    PDF: \"PDF\",\n    EstimatedDeliveryDate: \"Data di consegna prevista\",\n    DDTActions: \"Azioni DDT\",\n    DDTDate: \"Data DDT\",\n    DDTNumber: \"n° DDT\",\n    DeliveryNotes: \"Note di consegna\",\n    UserFrom: \"Effettuato da\",\n    Recipient: \"Destinatario\",\n    LoanDate: \"Data prestito\",\n    ReferenceYear: \"Anno di riferimento\",\n    ReferenceMonth: \"Mese di riferimento\",\n    OrderReport: \"Report ordine\"\n  },\n  en: {\n    ID: \"ID\",\n    User: \"User\",\n    Year: \"Year\",\n    OrderDate: \"Order date\",\n    OrderNumber: \"Order number\",\n    Urgent: \"Urgent\",\n    Extra: \"Extra\",\n    Validated: \"Validated\",\n    ValidationDate: \"Validation date\",\n    Notes: \"Notes\",\n    EditOrder: \"Edit order\",\n    Pending: \"Pending\",\n    Action: \"Action\",\n    Status: \"Status\",\n    SentToSupplier: \"Sent to supplier\",\n    SentToCustomer: \"Sent to customer\",\n    Received: \"Received\",\n    Report: \"Report\",\n    PDF: \"PDF\",\n    EstimatedDeliveryDate: \"Estimated delivery date\",\n    DDTActions: \"DDT Actions\",\n    DDTDate: \"DDT date\",\n    DDTNumber: \"DDT no.\",\n    DeliveryNotes: \"Delivery notes\",\n    UserFrom: \"Requested by\",\n    Recipient: \"Recipient\",\n    LoanDate: \"Loan date\",\n    ReferenceYear: \"Reference year\",\n    ReferenceMonth: \"Reference month\",\n    OrderReport: \"Order report\"\n  }\n}\n\n//AgGrid config for OrdersComponent and userlevel 210\nexport const gridConfigOrders210 = [\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderNumber : orderGridHeaders.en.OrderNumber, \n    field: 'n_ordine', \n    editable: (params: { data: { isRowLocked: boolean; }; }) => {\n      return !params.data.isRowLocked;\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'full_username', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceYear : orderGridHeaders.en.ReferenceYear, \n    field: 'anno', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceMonth : orderGridHeaders.en.ReferenceMonth, \n    field: 'mese', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Status : orderGridHeaders.en.Status, \n    field: 'status', \n    editable: false,\n    cellRenderer: (params: { value: string }) => {\n      return params.value === undefined ? \"inviato\" : params.value;\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderDate : orderGridHeaders.en.OrderDate, \n    field: 'd_ordine', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      return new Date(params.value).toLocaleDateString('it-IT');\n    },\n    sort: 'desc'\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Urgent : orderGridHeaders.en.Urgent, \n    field: 'b_urgente', \n    editable: false,\n    cellRenderer: OrdersUrgentCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Extra : orderGridHeaders.en.Extra, \n    field: 'b_extra', \n    editable: false,\n    cellRenderer: OrdersExtraCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Validated : orderGridHeaders.en.Validated, \n    field: 'b_validato', \n    editable: false,\n    cellRenderer: OrdersValidatedCheckboxComponent\n  },\n  {\n    headerName: localeLang == 'it' ? orderGridHeaders.it.Received : orderGridHeaders.en.Received,\n    field: 'b_received',\n    editable: false,\n    cellRenderer: OrdersReceivedCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ValidationDate : orderGridHeaders.en.ValidationDate, \n    field: 'd_validato', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      //if date is awaiting validation\n      if(params.value == \"0000-00-00\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Notes : orderGridHeaders.en.Notes, \n    field: 'note', \n    editable: (params: { data: { isRowLocked: boolean; }; }) => {\n      return !params.data.isRowLocked;\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTActions : orderGridHeaders.en.DDTActions, \n    field: 'ddt_actions', \n    cellRenderer: DdtOrderActionsComponent,\n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTNumber : orderGridHeaders.en.DDTNumber, \n    field: 'n_ddt', \n    editable: true,\n  },\n  {  \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTDate : orderGridHeaders.en.DDTDate, \n    field: 'd_ddt',\n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      //if date is awaiting validation\n      if(params.value == \"0000-00-00\" || params.value == \"\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.EstimatedDeliveryDate : orderGridHeaders.en.EstimatedDeliveryDate, \n    field: 'd_consegna_prevista', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      //if date is awaiting validation\n      if(params.value == \"0000-00-00\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DeliveryNotes : orderGridHeaders.en.DeliveryNotes, \n    field: 'note_consegna', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Action : orderGridHeaders.en.Action, \n    cellRenderer: ButtonEditOrderComponent,\n    autoHeight: true\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.PDF : orderGridHeaders.en.PDF, \n    cellRenderer: ButtonOrderReportComponent,\n    autoHeight: true\n  }\n];\n\n//same as above but all locked\nexport const gridConfigOrders210Locked = [\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderNumber : orderGridHeaders.en.OrderNumber, \n    field: 'n_ordine', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'full_username', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceYear : orderGridHeaders.en.ReferenceYear, \n    field: 'anno', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceMonth : orderGridHeaders.en.ReferenceMonth, \n    field: 'mese', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Status : orderGridHeaders.en.Status, \n    field: 'status', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderDate : orderGridHeaders.en.OrderDate, \n    field: 'd_ordine', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      return new Date(params.value).toLocaleDateString('it-IT');\n    },\n    sort: 'desc'\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Urgent : orderGridHeaders.en.Urgent, \n    field: 'b_urgente', \n    editable: false,\n    cellRenderer: OrdersUrgentCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Extra : orderGridHeaders.en.Extra, \n    field: 'b_extra', \n    editable: false,\n    cellRenderer: OrdersExtraCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Validated : orderGridHeaders.en.Validated, \n    field: 'b_validato', \n    editable: false,\n    cellRenderer: OrdersValidatedCheckboxComponent\n  },\n  {\n    headerName: localeLang == 'it' ? orderGridHeaders.it.Received : orderGridHeaders.en.Received,\n    field: 'b_received',\n    editable: false,\n    cellRenderer: OrdersReceivedCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ValidationDate : orderGridHeaders.en.ValidationDate, \n    field: 'd_validato', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      //if date is awaiting validation\n      if(params.value == \"0000-00-00\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n      headerName: localeLang == 'it' ? orderGridHeaders.it.Notes : orderGridHeaders.en.Notes, \n      field: 'note', \n      editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTActions : orderGridHeaders.en.DDTActions, \n    field: 'ddt_actions', \n    cellRenderer: DdtOrderActionsComponent,\n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTNumber : orderGridHeaders.en.DDTNumber, \n    field: 'n_ddt', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTDate : orderGridHeaders.en.DDTDate, \n    field: 'd_ddt',\n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      //if date is awaiting validation\n      if(params.value == \"0000-00-00\" || params.value == \"\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.EstimatedDeliveryDate : orderGridHeaders.en.EstimatedDeliveryDate, \n    field: 'd_consegna_prevista', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      //if date is awaiting validation\n      if(params.value == \"0000-00-00\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DeliveryNotes : orderGridHeaders.en.DeliveryNotes, \n    field: 'note_consegna', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Action : orderGridHeaders.en.Action, \n    cellRenderer: ButtonEditOrderComponent,\n    autoHeight: true\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.PDF : orderGridHeaders.en.PDF, \n    cellRenderer: ButtonOrderReportComponent,\n    autoHeight: true\n  }\n];\n\n//AgGrid config for OrdersComponent and userlevel 220\nexport const gridConfigOrders220 = [\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderNumber : orderGridHeaders.en.OrderNumber, \n    field: 'n_ordine', \n    editable: true\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'full_username', \n    cellRenderer: DropdownUsersOrdersComponent,\n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceYear : orderGridHeaders.en.ReferenceYear, \n    field: 'anno', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceMonth : orderGridHeaders.en.ReferenceMonth, \n    field: 'mese', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Status : orderGridHeaders.en.Status, \n    field: 'status', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderDate : orderGridHeaders.en.OrderDate, \n    field: 'd_ordine', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      return new Date(params.value).toLocaleDateString('it-IT');\n    },\n    sort: 'desc'\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Urgent : orderGridHeaders.en.Urgent, \n    field: 'b_urgente', \n    editable: false,\n    cellRenderer: OrdersUrgentCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Extra : orderGridHeaders.en.Extra, \n    field: 'b_extra', \n    editable: false,\n    cellRenderer: OrdersExtraCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Validated : orderGridHeaders.en.Validated, \n    field: 'b_validato', \n    editable: false,\n    cellRenderer: OrdersValidatedCheckboxComponent\n  },\n  {\n    headerName: localeLang == 'it' ? orderGridHeaders.it.SentToSupplier : orderGridHeaders.en.SentToSupplier,\n    field: 'b_to_supplier',\n    editable: false,\n    cellRenderer: OrdersSentCheckboxComponent\n  },\n  {\n    headerName: localeLang == 'it' ? orderGridHeaders.it.Received : orderGridHeaders.en.Received,\n    field: 'b_received',\n    editable: false,\n    cellRenderer: OrdersReceivedCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ValidationDate : orderGridHeaders.en.ValidationDate, \n    field: 'd_validato', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      if(params.value == \"0000-00-00\" || params.value == \"Invalid Date\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Notes : orderGridHeaders.en.Notes, \n    field: 'note', \n    editable: true,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTActions : orderGridHeaders.en.DDTActions, \n    field: 'ddt_actions', \n    cellRenderer: DdtOrderActionsComponent,\n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTNumber : orderGridHeaders.en.DDTNumber, \n    field: 'n_ddt', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTDate : orderGridHeaders.en.DDTDate, \n    field: 'd_ddt',\n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      //if date is awaiting validation\n      if(params.value == \"0000-00-00\" || params.value == \"\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.EstimatedDeliveryDate : orderGridHeaders.en.EstimatedDeliveryDate, \n    field: 'd_consegna_prevista', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      //if date is awaiting validation\n      if(params.value == \"0000-00-00\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DeliveryNotes : orderGridHeaders.en.DeliveryNotes, \n    field: 'note_consegna', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Action : orderGridHeaders.en.Action, \n    cellRenderer: ButtonEditOrderComponent,\n    autoHeight: true\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.PDF : orderGridHeaders.en.PDF, \n    cellRenderer: ButtonOrderReportComponent,\n    autoHeight: true\n  }\n];\n\n//same as above but all locked\nexport const gridConfigOrders220Locked = [\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderNumber : orderGridHeaders.en.OrderNumber, \n    field: 'n_ordine', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'full_username', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceYear : orderGridHeaders.en.ReferenceYear, \n    field: 'anno', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceMonth : orderGridHeaders.en.ReferenceMonth, \n    field: 'mese', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Status : orderGridHeaders.en.Status, \n    field: 'status', \n    editable: false,\n    cellRenderer: (params: { value: string }) => {\n      return params.value === undefined ? \"inviato\" : params.value;\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderDate : orderGridHeaders.en.OrderDate, \n    field: 'd_ordine', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      return new Date(params.value).toLocaleDateString('it-IT');\n    },\n    sort: 'desc'\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Urgent : orderGridHeaders.en.Urgent, \n    field: 'b_urgente', \n    editable: false,\n    cellRenderer: OrdersUrgentCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Extra : orderGridHeaders.en.Extra, \n    field: 'b_extra', \n    editable: false,\n    cellRenderer: OrdersExtraCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Validated : orderGridHeaders.en.Validated, \n    field: 'b_validato', \n    editable: false,\n    cellRenderer: OrdersValidatedCheckboxComponent\n  },\n  {\n    headerName: localeLang == 'it' ? orderGridHeaders.it.SentToSupplier : orderGridHeaders.en.SentToSupplier,\n    field: 'b_to_supplier',\n    editable: false,\n    cellRenderer: OrdersSentCheckboxComponent\n  },\n  {\n    headerName: localeLang == 'it' ? orderGridHeaders.it.Received : orderGridHeaders.en.Received,\n    field: 'b_received',\n    editable: false,\n    cellRenderer: OrdersReceivedCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ValidationDate : orderGridHeaders.en.ValidationDate, \n    field: 'd_validato', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n    if(params.value == \"0000-00-00\")\n      return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n    else\n      return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Notes : orderGridHeaders.en.Notes, \n    field: 'note', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTActions : orderGridHeaders.en.DDTActions, \n    field: 'ddt_actions', \n    cellRenderer: DdtOrderActionsComponent,\n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTNumber : orderGridHeaders.en.DDTNumber, \n    field: 'n_ddt', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTDate : orderGridHeaders.en.DDTDate, \n    field: 'd_ddt',\n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      \n      //if date is awaiting validation\n      if(params.value == \"0000-00-00\" || params.value == \"\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.EstimatedDeliveryDate : orderGridHeaders.en.EstimatedDeliveryDate, \n    field: 'd_consegna_prevista', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      //if date is awaiting validation\n      \n      if(params.value == \"0000-00-00\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DeliveryNotes : orderGridHeaders.en.DeliveryNotes, \n    field: 'note_consegna', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Action : orderGridHeaders.en.Action, \n    cellRenderer: ButtonEditOrderComponent,\n    autoHeight: true\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.PDF : orderGridHeaders.en.PDF, \n    cellRenderer: ButtonOrderReportComponent,\n    autoHeight: true\n  }\n];\n\n//AgGrid config for orderRows\nexport const gridConfigOrderRows = [\n  /*\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ID : orderGridHeaders.en.ID, \n    field: 'id', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      console.log(params);\n    }\n  },\n  */\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ID : orderGridHeaders.en.ID, \n    field: 'id_ordine', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'full_username', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'n_riga', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'product_name', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'qta', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'qta_validata', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'qta_ricevuta', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'note', \n    editable: false\n  }\n];\n\n//===============================================================================================================\n//SUPPLIES\n//grid config for user 230\nexport const gridConfigSupplies = [\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderNumber : orderGridHeaders.en.OrderNumber, \n    field: 'n_ordine', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.User : orderGridHeaders.en.User, \n    field: 'full_username', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceYear : orderGridHeaders.en.ReferenceYear, \n    field: 'anno', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceMonth : orderGridHeaders.en.ReferenceMonth, \n    field: 'mese', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Year : orderGridHeaders.en.Year, \n    field: 'anno', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Status : orderGridHeaders.en.Status, \n    field: 'status', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderDate : orderGridHeaders.en.OrderDate, \n    field: 'd_ordine', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      return new Date(params.value).toLocaleDateString('it-IT');\n    },\n    sort: 'desc'\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Urgent : orderGridHeaders.en.Urgent, \n    field: 'b_urgente', \n    editable: false,\n    cellRenderer: OrdersUrgentCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Extra : orderGridHeaders.en.Extra, \n    field: 'b_extra', \n    editable: false,\n    cellRenderer: OrdersExtraCheckboxComponent\n  },\n  {\n    headerName: localeLang == 'it' ? orderGridHeaders.it.SentToCustomer : orderGridHeaders.en.SentToCustomer,\n    field: 'b_to_customer',\n    editable: false,\n    cellRenderer: OrdersToCustomerCheckboxComponent\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ValidationDate : orderGridHeaders.en.ValidationDate, \n    field: 'd_validato', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n    if(params.value == \"0000-00-00\")\n      return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n    else\n      return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Notes : orderGridHeaders.en.Notes, \n    field: 'note', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTActions : orderGridHeaders.en.DDTActions, \n    field: 'ddt_actions', \n    cellRenderer: DdtOrderActionsComponent,\n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTNumber : orderGridHeaders.en.DDTNumber, \n    field: 'n_ddt', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DDTDate : orderGridHeaders.en.DDTDate, \n    field: 'd_ddt',\n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      if(params.value == \"0000-00-00\" || params.value == \"\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.EstimatedDeliveryDate : orderGridHeaders.en.EstimatedDeliveryDate, \n    field: 'd_consegna_prevista', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      if(params.value == \"0000-00-00\" || params.value == \"\")\n        return localeLang == 'it' ? orderGridHeaders.it.Pending : orderGridHeaders.en.Pending;\n      else\n        return new Date(params.value).toLocaleDateString('it-IT');\n    }\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.DeliveryNotes : orderGridHeaders.en.DeliveryNotes, \n    field: 'note_consegna', \n    editable: true,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Action : orderGridHeaders.en.Action, \n    cellRenderer: ButtonSupplyDetailsComponent,\n    autoHeight: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.OrderReport : orderGridHeaders.en.OrderReport, \n    cellRenderer: ButtonSupplyReportComponent,\n    autoHeight: false\n  }\n];\n\n//===============================================================================================================\n//LOANS\n//grid config for user 210\nexport const gridConfigLoans210 = [\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ID : orderGridHeaders.en.ID, \n    field: 'id', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceYear : orderGridHeaders.en.ReferenceYear, \n    field: 'anno', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceMonth : orderGridHeaders.en.ReferenceMonth, \n    field: 'mese', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.UserFrom : orderGridHeaders.en.UserFrom, \n    field: 'full_username_from', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Recipient : orderGridHeaders.en.Recipient, \n    field: 'full_username_to', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.LoanDate : orderGridHeaders.en.LoanDate, \n    field: 'd_ordine', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      return new Date(params.value).toLocaleDateString('it-IT');\n    },\n    sort: 'desc'\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Notes : orderGridHeaders.en.Notes, \n    field: 'note', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Action : orderGridHeaders.en.Action, \n    cellRenderer: ButtonLoanDetailsComponent,\n    autoHeight: false,\n  }\n];\n\n//grid config for user 220\nexport const gridConfigLoans220 = [\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ID : orderGridHeaders.en.ID, \n    field: 'id', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceYear : orderGridHeaders.en.ReferenceYear, \n    field: 'anno', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.ReferenceMonth : orderGridHeaders.en.ReferenceMonth, \n    field: 'mese', \n    editable: false\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.UserFrom : orderGridHeaders.en.UserFrom, \n    field: 'full_username_from', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Recipient : orderGridHeaders.en.Recipient, \n    field: 'full_username_to', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.LoanDate : orderGridHeaders.en.LoanDate, \n    field: 'd_ordine', \n    editable: false,\n    cellRenderer: (params: { value: string | number | Date; }) => {\n      return new Date(params.value).toLocaleDateString('it-IT');\n    },\n    sort: 'desc'\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Notes : orderGridHeaders.en.Notes, \n    field: 'note', \n    editable: false,\n  },\n  { \n    headerName: localeLang == 'it' ? orderGridHeaders.it.Action : orderGridHeaders.en.Action, \n    cellRenderer: ButtonLoanDetailsComponent,\n    autoHeight: false,\n  }\n];\n/**\n * \n * The following configs need to be used in the \n * [defaultColDef] attribute of the <ag-grid-angular> tag\n * \n */\n\nexport const defaultColDef = {\n  sortable: true,\n  filter: true,\n  resizable: true\n}\n\n//===============================================================================================================\n/**\n * \n * GRID LOCALE\n * \n */\nexport const AG_GRID_LOCALE_EN = {\n  // Set Filter\n  selectAll: '(Select All)',\n  selectAllSearchResults: '(Select All Search Results)',\n  searchOoo: 'Search...',\n  blanks: '(Blanks)',\n  noMatches: 'No matches',\n\n  // Number Filter & Text Filter\n  filterOoo: 'Filter...',\n  equals: 'Equals',\n  notEqual: 'Not equal',\n  blank: 'Blank',\n  notBlank: 'Not blank',\n  empty: 'Choose One',\n\n  // Number Filter\n  lessThan: 'Less than',\n  greaterThan: 'Greater than',\n  lessThanOrEqual: 'Less than or equal',\n  greaterThanOrEqual: 'Greater than or equal',\n  inRange: 'In range',\n  inRangeStart: 'from',\n  inRangeEnd: 'to',\n\n  // Text Filter\n  contains: 'Contains',\n  notContains: 'Not contains',\n  startsWith: 'Starts with',\n  endsWith: 'Ends with',\n\n  // Date Filter\n  dateFormatOoo: 'yyyy-mm-dd',\n\n  // Filter Conditions\n  andCondition: 'AND',\n  orCondition: 'OR',\n\n  // Filter Buttons\n  applyFilter: 'Apply',\n  resetFilter: 'Reset',\n  clearFilter: 'Clear',\n  cancelFilter: 'Cancel',\n\n  // Filter Titles\n  textFilter: 'Text Filter',\n  numberFilter: 'Number Filter',\n  dateFilter: 'Date Filter',\n  setFilter: 'Set Filter',\n\n  // Side Bar\n  columns: 'Columns',\n  filters: 'Filters',\n\n  // columns tool panel\n  pivotMode: 'Pivot Mode',\n  groups: 'Row Groups',\n  rowGroupColumnsEmptyMessage: 'Drag here to set row groups',\n  values: 'Values',\n  valueColumnsEmptyMessage: 'Drag here to aggregate',\n  pivots: 'Column Labels',\n  pivotColumnsEmptyMessage: 'Drag here to set column labels',\n\n  // Header of the Default Group Column\n  group: 'Group',\n\n  // Row Drag\n  rowDragRow: 'row',\n  rowDragRows:'rows',\n\n  // Other\n  loadingOoo: 'Loading...',\n  loadingError: 'ERR',\n  noRowsToShow: 'No Rows To Show',\n  enabled: 'Enabled',\n\n  // Menu\n  pinColumn: 'Pin Column',\n  pinLeft: 'Pin Left',\n  pinRight: 'Pin Right',\n  noPin: 'No Pin',\n  valueAggregation: 'Value Aggregation',\n  noAggregation: 'None',\n  autosizeThiscolumn: 'Autosize This Column',\n  autosizeAllColumns: 'Autosize All Columns',\n  groupBy: 'Group by',\n  ungroupBy: 'Un-Group by',\n  addToValues: 'Add ${variable} to values',\n  removeFromValues: 'Remove ${variable} from values',\n  addToLabels: 'Add ${variable} to labels',\n  removeFromLabels: 'Remove ${variable} from labels',\n  resetColumns: 'Reset Columns',\n  expandAll: 'Expand All',\n  collapseAll: 'Close All',\n  copy: 'Copy',\n  ctrlC: 'Ctrl+C',\n  copyWithHeaders: 'Copy With Headers',\n  copyWithGroupHeaders: 'Copy with Group Headers',\n  paste: 'Paste',\n  ctrlV: 'Ctrl+V',\n  export: 'Export',\n  csvExport: 'CSV Export',\n  excelExport: 'Excel Export',\n\n  // Enterprise Menu Aggregation and Status Bar\n  sum: 'Sum',\n  first: 'First',\n  last: 'Last',\n  min: 'Min',\n  max: 'Max',\n  none: 'None',\n  count: 'Count',\n  avg: 'Average',\n  filteredRows: 'Filtered',\n  selectedRows: 'Selected',\n  totalRows: 'Total Rows',\n  totalAndFilteredRows: 'Rows',\n  more: 'More',\n  to: 'to',\n  of: 'of',\n  page: 'Page',\n  nextPage: 'Next Page',\n  lastPage: 'Last Page',\n  firstPage: 'First Page',\n  previousPage: 'Previous Page',\n\n  // Pivoting\n  pivotColumnGroupTotals: 'Total',\n\n  // Enterprise Menu (Charts)\n  pivotChartAndPivotMode: 'Pivot Chart & Pivot Mode',\n  pivotChart: 'Pivot Chart',\n  chartRange: 'Chart Range',\n\n  columnChart: 'Column',\n  groupedColumn: 'Grouped',\n  stackedColumn: 'Stacked',\n  normalizedColumn: '100% Stacked',\n\n  barChart: 'Bar',\n  groupedBar: 'Grouped',\n  stackedBar: 'Stacked',\n  normalizedBar: '100% Stacked',\n\n  pieChart: 'Pie',\n  pie: 'Pie',\n  doughnut: 'Doughnut',\n\n  line: 'Line',\n\n  xyChart: 'X Y (Scatter)',\n  scatter: 'Scatter',\n  bubble: 'Bubble',\n\n  areaChart: 'Area',\n  area: 'Area',\n  stackedArea: 'Stacked',\n  normalizedArea: '100% Stacked',\n\n  histogramChart: 'Histogram',\n  histogramFrequency: \"Frequency\",\n\n  combinationChart: 'Combination',\n  columnLineCombo: 'Column & Line',\n  AreaColumnCombo: 'Area & Column',\n\n  // Charts\n  pivotChartTitle: 'Pivot Chart',\n  rangeChartTitle: 'Range Chart',\n  settings: 'Settings',\n  data: 'Data',\n  format: 'Format',\n  categories: 'Categories',\n  defaultCategory: '(None)',\n  series: 'Series',\n  xyValues: 'X Y Values',\n  paired: 'Paired Mode',\n  axis: 'Axis',\n  navigator: 'Navigator',\n  color: 'Color',\n  thickness: 'Thickness',\n  xType: 'X Type',\n  automatic: 'Automatic',\n  category: 'Category',\n  number: 'Number',\n  time: 'Time',\n  autoRotate: 'Auto Rotate',\n  xRotation: 'X Rotation',\n  yRotation: 'Y Rotation',\n  ticks: 'Ticks',\n  width: 'Width',\n  height: 'Height',\n  length: 'Length',\n  padding: 'Padding',\n  spacing: 'Spacing',\n  chart: 'Chart',\n  title: 'Title',\n  titlePlaceholder: 'Chart title - double click to edit',\n  background: 'Background',\n  font: 'Font',\n  top: 'Top',\n  right: 'Right',\n  bottom: 'Bottom',\n  left: 'Left',\n  labels: 'Labels',\n  size: 'Size',\n  minSize: 'Minimum Size',\n  maxSize: 'Maximum Size',\n  legend: 'Legend',\n  position: 'Position',\n  markerSize: 'Marker Size',\n  markerStroke: 'Marker Stroke',\n  markerPadding: 'Marker Padding',\n  itemSpacing: 'Item Spacing',\n  itemPaddingX: 'Item Padding X',\n  itemPaddingY: 'Item Padding Y',\n  layoutHorizontalSpacing: 'Horizontal Spacing',\n  layoutVerticalSpacing: 'Vertical Spacing',\n  strokeWidth: 'Stroke Width',\n  lineDash: 'Line Dash',\n  offset: 'Offset',\n  offsets: 'Offsets',\n  tooltips: 'Tooltips',\n  callout: 'Callout',\n  markers: 'Markers',\n  shadow: 'Shadow',\n  blur: 'Blur',\n  xOffset: 'X Offset',\n  yOffset: 'Y Offset',\n  lineWidth: 'Line Width',\n  normal: 'Normal',\n  bold: 'Bold',\n  italic: 'Italic',\n  boldItalic: 'Bold Italic',\n  predefined: 'Predefined',\n  fillOpacity: 'Fill Opacity',\n  strokeOpacity: 'Line Opacity',\n  histogramBinCount: 'Bin count',\n  columnGroup: 'Column',\n  barGroup: 'Bar',\n  pieGroup: 'Pie',\n  lineGroup: 'Line',\n  scatterGroup: 'X Y (Scatter)',\n  areaGroup: 'Area',\n  histogramGroup: 'Histogram',\n  combinationGroup: 'Combination',\n  groupedColumnTooltip: 'Grouped',\n  stackedColumnTooltip: 'Stacked',\n  normalizedColumnTooltip: '100% Stacked',\n  groupedBarTooltip: 'Grouped',\n  stackedBarTooltip: 'Stacked',\n  normalizedBarTooltip: '100% Stacked',\n  pieTooltip: 'Pie',\n  doughnutTooltip: 'Doughnut',\n  lineTooltip: 'Line',\n  groupedAreaTooltip: 'Area',\n  stackedAreaTooltip: 'Stacked',\n  normalizedAreaTooltip: '100% Stacked',\n  scatterTooltip: 'Scatter',\n  bubbleTooltip: 'Bubble',\n  histogramTooltip: 'Histogram',\n  columnLineComboTooltip: 'Column & Line',\n  areaColumnComboTooltip: 'Area & Column',\n  customComboTooltip: 'Custom Combination',\n  noDataToChart: 'No data available to be charted.',\n  pivotChartRequiresPivotMode: 'Pivot Chart requires Pivot Mode enabled.',\n  chartSettingsToolbarTooltip: 'Menu',\n  chartLinkToolbarTooltip: 'Linked to Grid',\n  chartUnlinkToolbarTooltip: 'Unlinked from Grid',\n  chartDownloadToolbarTooltip: 'Download Chart',\n  seriesChartType: 'Series Chart Type',\n  seriesType: 'Series Type',\n  secondaryAxis: 'Secondary Axis',\n\n  // ARIA\n  ariaChecked: 'checked',\n  ariaColumn: 'Column',\n  ariaColumnGroup: 'Column Group',\n  ariaColumnList: 'Column List',\n  ariaColumnSelectAll: 'Toggle Select All Columns',\n  ariaDateFilterInput: 'Date Filter Input',\n  ariaDefaultListName: 'List',\n  ariaFilterColumnsInput: 'Filter Columns Input',\n  ariaFilterFromValue: 'Filter from value',\n  ariaFilterInput: 'Filter Input',\n  ariaFilterList: 'Filter List',\n  ariaFilterToValue: 'Filter to value',\n  ariaFilterValue: 'Filter Value',\n  ariaFilteringOperator: 'Filtering Operator',\n  ariaHidden: 'hidden',\n  ariaIndeterminate:'indeterminate',\n  ariaInputEditor: 'Input Editor',\n  ariaMenuColumn: 'Press CTRL ENTER to open column menu.',\n  ariaRowDeselect: 'Press SPACE to deselect this row',\n  ariaRowSelectAll: 'Press Space to toggle all rows selection',\n  ariaRowToggleSelection: 'Press Space to toggle row selection',\n  ariaRowSelect: 'Press SPACE to select this row',\n  ariaSearch: 'Search',\n  ariaSortableColumn: 'Press ENTER to sort',\n  ariaToggleVisibility: 'Press SPACE to toggle visibility',\n  ariaUnchecked: 'unchecked',\n  ariaVisible: 'visible',\n  ariaSearchFilterValues: 'Search filter values',\n\n  // ARIA Labels for Drop Zones\n\n  ariaRowGroupDropZonePanelLabel: 'Row Groups',\n  ariaValuesDropZonePanelLabel: 'Values',\n  ariaPivotDropZonePanelLabel: 'Column Labels',\n  ariaDropZoneColumnComponentDescription: 'Press DELETE to remove',\n  ariaDropZoneColumnValueItemDescription: 'Press ENTER to change the aggregation type',\n  ariaDropZoneColumnGroupItemDescription: 'Press ENTER to sort',\n  // used for aggregate drop zone, format: {aggregation}{ariaDropZoneColumnComponentAggFuncSeperator}{column name}\n  ariaDropZoneColumnComponentAggFuncSeperator: ' of ',\n  ariaDropZoneColumnComponentSortAscending: 'ascending',\n  ariaDropZoneColumnComponentSortDescending: 'descending',\n\n  // ARIA Labels for Dialogs\n  ariaLabelColumnMenu: 'Column Menu',\n  ariaLabelCellEditor: 'Cell Editor',\n  ariaLabelDialog: 'Dialog',\n  ariaLabelSelectField: 'Select Field',\n  ariaLabelTooltip: 'Tooltip',\n  ariaLabelContextMenu: 'Context Menu',\n  ariaLabelSubMenu: 'SubMenu',\n  ariaLabelAggregationFunction: 'Aggregation Function',\n\n  // Number Format (Status Bar, Pagination Panel)\n  thousandSeparator: ',',\n  decimalSeparator: '.'\n\n}\n\nexport const AG_GRID_LOCALE_IT = {\n  // Set Filter\n  selectAll: '(Seleziona tutti)',\n  selectAllSearchResults: '(Seleziona tutti i risultati)',\n  searchOoo: 'Cerca...',\n  blanks: '(Vuoti)',\n  noMatches: 'Nessuna corrispondenza',\n\n  // Number Filter & Text Filter\n  filterOoo: 'Filtra...',\n  equals: 'Uguale a',\n  notEqual: 'Diverso da',\n  blank: 'Vuoto',\n  notBlank: 'Non vuoto',\n  empty: 'Scegli un filtro',\n\n  // Number Filter\n  lessThan: 'Minore di',\n  greaterThan: 'Maggiore di',\n  lessThanOrEqual: 'Minore o uguale a',\n  greaterThanOrEqual: 'Maggiore o uguale a',\n  inRange: 'Nel range',\n  inRangeStart: 'da',\n  inRangeEnd: 'a',\n\n  // Text Filter\n  contains: 'Contiene',\n  notContains: 'Non contiene',\n  startsWith: 'Inizia con',\n  endsWith: 'Finisce con',\n\n  // Date Filter\n  dateFormatOoo: 'yyyy-mm-dd',\n\n  // Filter Conditions\n  andCondition: 'AND',\n  orCondition: 'OR',\n\n  // Filter Buttons\n  applyFilter: 'Applica',\n  resetFilter: 'Reimposta',\n  clearFilter: 'Pulisci',\n  cancelFilter: 'Annulla',\n\n  // Filter Titles\n  textFilter: 'Filtro testuale',\n  numberFilter: 'Filtro numerico',\n  dateFilter: 'Filtro date',\n  setFilter: 'Imposta filtro',\n\n  // Side Bar\n  columns: 'Colonne',\n  filters: 'Filtri',\n\n  // columns tool panel\n  pivotMode: 'Modalità Pivot',\n  groups: 'Gruppi di righe',\n  rowGroupColumnsEmptyMessage: 'Trascina qui per impostare un gruppo di righe',\n  values: 'Valori',\n  valueColumnsEmptyMessage: 'Trascina qui per aggregare',\n  pivots: 'Etichette colonne',\n  pivotColumnsEmptyMessage: 'Trascina qui per applicare le etichette alle colonne',\n\n  // Header of the Default Group Column\n  group: 'Gruppo',\n\n  // Row Drag\n  rowDragRow: 'riga',\n  rowDragRows:'righe',\n\n  // Other\n  loadingOoo: 'Caricamento...',\n  loadingError: 'ERR',\n  noRowsToShow: 'Nessuna riga da mostrare',\n  enabled: 'Abilitato',\n\n  // Menu\n  pinColumn: 'Fissa colonna',\n  pinLeft: 'Fissa a sinistra',\n  pinRight: 'Fissa a destra',\n  noPin: 'Non fissare',\n  valueAggregation: 'Aggregazione di valori',\n  noAggregation: 'Nessuna',\n  autosizeThiscolumn: 'Ridimensiona automaticamente la colonna',\n  autosizeAllColumns: 'Ridimensiona automaticamente tutte le colonne',\n  groupBy: 'Raggruppa per',\n  ungroupBy: 'Non raggruppare per',\n  addToValues: 'Aggiungi ${variable} ai valori',\n  removeFromValues: 'Rimuovi ${variable} dai valori',\n  addToLabels: 'Aggiungi ${variable} alle etichette',\n  removeFromLabels: 'Rimuovi ${variable} dalle etichette',\n  resetColumns: 'Reimposta colonne',\n  expandAll: 'Espandi tutto',\n  collapseAll: 'Chiudi tutto',\n  copy: 'Copia',\n  ctrlC: 'Ctrl+C',\n  copyWithHeaders: 'Copia con intestazioni',\n  copyWithGroupHeaders: 'Copia con intestazioni di gruppo',\n  paste: 'Incolla',\n  ctrlV: 'Ctrl+V',\n  export: 'Esporta',\n  csvExport: 'Esporta come CSV',\n  excelExport: 'Esporta come Excel',\n\n  // Enterprise Menu Aggregation and Status Bar\n  sum: 'Somma',\n  first: 'Primo',\n  last: 'Ultimo',\n  min: 'Min',\n  max: 'Max',\n  none: 'Nessuno',\n  count: 'Conteggio',\n  avg: 'Media',\n  filteredRows: 'Filtrate',\n  selectedRows: 'Selezionate',\n  totalRows: 'Righe totali',\n  totalAndFilteredRows: 'Righe',\n  more: 'Altro',\n  to: 'a',\n  of: 'di',\n  page: 'Pagina',\n  nextPage: 'Pagina successiva',\n  lastPage: 'Ultima pagina',\n  firstPage: 'Prima pagina',\n  previousPage: 'Pagina precedente',\n\n  // Pivoting\n  pivotColumnGroupTotals: 'Totale',\n\n  // Enterprise Menu (Charts)\n  pivotChartAndPivotMode: 'Schema Pivot e Modalità Pivot',\n  pivotChart: 'Schema Pivot',\n  chartRange: 'Schema range',\n\n  columnChart: 'Colonna',\n  groupedColumn: 'Raggruppate',\n  stackedColumn: 'Impilate',\n  normalizedColumn: 'Impilate al 100%',\n\n  barChart: 'Barra',\n  groupedBar: 'Raggruppate',\n  stackedBar: 'Impilate',\n  normalizedBar: 'Impilate al 100%',\n\n  pieChart: 'Torta',\n  pie: 'Torta',\n  doughnut: 'Ciambella',\n\n  line: 'Linea',\n\n  xyChart: 'X Y (Dispersione)',\n  scatter: 'Dispersione',\n  bubble: 'Bolla',\n\n  areaChart: 'Area',\n  area: 'Area',\n  stackedArea: 'Impilata',\n  normalizedArea: 'Impilata al 100%',\n\n  histogramChart: 'Istogramma',\n  histogramFrequency: \"Frequenza\",\n\n  combinationChart: 'Combinazione',\n  columnLineCombo: 'Colonna e Linea',\n  AreaColumnCombo: 'Area & Colonna',\n\n  // Charts\n  pivotChartTitle: 'Pivot Chart',\n  rangeChartTitle: 'Range Chart',\n  settings: 'Settings',\n  data: 'Data',\n  format: 'Format',\n  categories: 'Categories',\n  defaultCategory: '(None)',\n  series: 'Series',\n  xyValues: 'X Y Values',\n  paired: 'Paired Mode',\n  axis: 'Axis',\n  navigator: 'Navigator',\n  color: 'Color',\n  thickness: 'Thickness',\n  xType: 'X Type',\n  automatic: 'Automatic',\n  category: 'Category',\n  number: 'Number',\n  time: 'Time',\n  autoRotate: 'Auto Rotate',\n  xRotation: 'X Rotation',\n  yRotation: 'Y Rotation',\n  ticks: 'Ticks',\n  width: 'Width',\n  height: 'Height',\n  length: 'Length',\n  padding: 'Padding',\n  spacing: 'Spacing',\n  chart: 'Chart',\n  title: 'Title',\n  titlePlaceholder: 'Chart title - double click to edit',\n  background: 'Background',\n  font: 'Font',\n  top: 'Top',\n  right: 'Right',\n  bottom: 'Bottom',\n  left: 'Left',\n  labels: 'Labels',\n  size: 'Size',\n  minSize: 'Minimum Size',\n  maxSize: 'Maximum Size',\n  legend: 'Legend',\n  position: 'Position',\n  markerSize: 'Marker Size',\n  markerStroke: 'Marker Stroke',\n  markerPadding: 'Marker Padding',\n  itemSpacing: 'Item Spacing',\n  itemPaddingX: 'Item Padding X',\n  itemPaddingY: 'Item Padding Y',\n  layoutHorizontalSpacing: 'Horizontal Spacing',\n  layoutVerticalSpacing: 'Vertical Spacing',\n  strokeWidth: 'Stroke Width',\n  lineDash: 'Line Dash',\n  offset: 'Offset',\n  offsets: 'Offsets',\n  tooltips: 'Tooltips',\n  callout: 'Callout',\n  markers: 'Markers',\n  shadow: 'Shadow',\n  blur: 'Blur',\n  xOffset: 'X Offset',\n  yOffset: 'Y Offset',\n  lineWidth: 'Line Width',\n  normal: 'Normal',\n  bold: 'Bold',\n  italic: 'Italic',\n  boldItalic: 'Bold Italic',\n  predefined: 'Predefined',\n  fillOpacity: 'Fill Opacity',\n  strokeOpacity: 'Line Opacity',\n  histogramBinCount: 'Bin count',\n  columnGroup: 'Column',\n  barGroup: 'Bar',\n  pieGroup: 'Pie',\n  lineGroup: 'Line',\n  scatterGroup: 'X Y (Scatter)',\n  areaGroup: 'Area',\n  histogramGroup: 'Histogram',\n  combinationGroup: 'Combination',\n  groupedColumnTooltip: 'Grouped',\n  stackedColumnTooltip: 'Stacked',\n  normalizedColumnTooltip: '100% Stacked',\n  groupedBarTooltip: 'Grouped',\n  stackedBarTooltip: 'Stacked',\n  normalizedBarTooltip: '100% Stacked',\n  pieTooltip: 'Pie',\n  doughnutTooltip: 'Doughnut',\n  lineTooltip: 'Line',\n  groupedAreaTooltip: 'Area',\n  stackedAreaTooltip: 'Stacked',\n  normalizedAreaTooltip: '100% Stacked',\n  scatterTooltip: 'Scatter',\n  bubbleTooltip: 'Bubble',\n  histogramTooltip: 'Histogram',\n  columnLineComboTooltip: 'Column & Line',\n  areaColumnComboTooltip: 'Area & Column',\n  customComboTooltip: 'Custom Combination',\n  noDataToChart: 'No data available to be charted.',\n  pivotChartRequiresPivotMode: 'Pivot Chart requires Pivot Mode enabled.',\n  chartSettingsToolbarTooltip: 'Menu',\n  chartLinkToolbarTooltip: 'Linked to Grid',\n  chartUnlinkToolbarTooltip: 'Unlinked from Grid',\n  chartDownloadToolbarTooltip: 'Download Chart',\n  seriesChartType: 'Series Chart Type',\n  seriesType: 'Series Type',\n  secondaryAxis: 'Secondary Axis',\n\n  // ARIA\n  ariaChecked: 'checked',\n  ariaColumn: 'Column',\n  ariaColumnGroup: 'Column Group',\n  ariaColumnList: 'Column List',\n  ariaColumnSelectAll: 'Toggle Select All Columns',\n  ariaDateFilterInput: 'Date Filter Input',\n  ariaDefaultListName: 'List',\n  ariaFilterColumnsInput: 'Filter Columns Input',\n  ariaFilterFromValue: 'Filter from value',\n  ariaFilterInput: 'Filter Input',\n  ariaFilterList: 'Filter List',\n  ariaFilterToValue: 'Filter to value',\n  ariaFilterValue: 'Filter Value',\n  ariaFilteringOperator: 'Filtering Operator',\n  ariaHidden: 'hidden',\n  ariaIndeterminate:'indeterminate',\n  ariaInputEditor: 'Input Editor',\n  ariaMenuColumn: 'Press CTRL ENTER to open column menu.',\n  ariaRowDeselect: 'Press SPACE to deselect this row',\n  ariaRowSelectAll: 'Press Space to toggle all rows selection',\n  ariaRowToggleSelection: 'Press Space to toggle row selection',\n  ariaRowSelect: 'Press SPACE to select this row',\n  ariaSearch: 'Search',\n  ariaSortableColumn: 'Press ENTER to sort',\n  ariaToggleVisibility: 'Press SPACE to toggle visibility',\n  ariaUnchecked: 'unchecked',\n  ariaVisible: 'visible',\n  ariaSearchFilterValues: 'Search filter values',\n\n  // ARIA Labels for Drop Zones\n\n  ariaRowGroupDropZonePanelLabel: 'Row Groups',\n  ariaValuesDropZonePanelLabel: 'Values',\n  ariaPivotDropZonePanelLabel: 'Column Labels',\n  ariaDropZoneColumnComponentDescription: 'Press DELETE to remove',\n  ariaDropZoneColumnValueItemDescription: 'Press ENTER to change the aggregation type',\n  ariaDropZoneColumnGroupItemDescription: 'Press ENTER to sort',\n  // used for aggregate drop zone, format: {aggregation}{ariaDropZoneColumnComponentAggFuncSeperator}{column name}\n  ariaDropZoneColumnComponentAggFuncSeperator: ' of ',\n  ariaDropZoneColumnComponentSortAscending: 'ascending',\n  ariaDropZoneColumnComponentSortDescending: 'descending',\n\n  // ARIA Labels for Dialogs\n  ariaLabelColumnMenu: 'Column Menu',\n  ariaLabelCellEditor: 'Cell Editor',\n  ariaLabelDialog: 'Dialog',\n  ariaLabelSelectField: 'Select Field',\n  ariaLabelTooltip: 'Tooltip',\n  ariaLabelContextMenu: 'Context Menu',\n  ariaLabelSubMenu: 'SubMenu',\n  ariaLabelAggregationFunction: 'Aggregation Function',\n\n  // Number Format (Status Bar, Pagination Panel)\n  thousandSeparator: ',',\n  decimalSeparator: '.'\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["Validators","MAT_DIALOG_DATA","map","startWith","environment","i0","AddForecastComponent","constructor","data","loginService","dialogRef","_builder","basePath","anno","control","Date","getFullYear","required","getUserCode","userFormControl","getUsername","qta_approvata","costo_unitario","username","userNames","productFormControl","qta","note","ngOnInit","getProductNames","products","getUserNames","users","console","log","value","filteredUsers","valueChanges","pipe","_filterUsers","filteredProducts","_filterProducts","onSubmit","invalidFields","isSubmitted","close","id_prd","isBadForecast","isAmongUsers","isAmongProducts","filterValue","toLowerCase","filter","option","includes","getUserId","event","i","length","client","source","id","getUserName","push","onUserSelected","_selected","inputValue","productNames","getProductId","des","onProductSelected","selectors","decls","vars","consts","template","ctx","factory","providedIn","AddLoanDialogComponent","thisDialogRef","forecasts","date","toString","productsFormControl","localStorage","getItem","d_ordine","n_ordine","b_urgente","b_extra","b_validato","d_validato","n_ddt","d_ddt","d_consegna_prevista","note_consegna","b_prestito","id_ordine_prestito","initMonthsArray","getMonth","initYearsArray","yearsArray","yearFormControl","monthFormControl","monthsArray","onLoanDateChange","year","month","onYearValueChanged","setValue","onMonthValueChanged","parseInt","assignNewLoanValues","newLoanReq","mese","getFormattedDate","toLocaleString","split","status","username_prestito_da","username_prestito_a","newLoanRes","newLoanRowReq","id_ordine","n_riga","getProductIdByDes","motivazione","qta_validata","qta_ricevuta","newLoanRowRes","logData","selected","productId","splitDate","day","MatDialogConfig","translations","AreYouSureOrderRowComponent","EditOrderRowComponent","AddOrderDialogComponent","dialog","ordersService","isExtra","undefined","selectedYear","selectedMonth","enableSubmit","auxDate","minDate","gg_min","maxDate","gg_max","filterForecastsByUsername","pushOrderRow","newOrderRow","newOrderRows","rmOrderRowByIndex","index","splice","assignNewOrderValues","newOrder","formatDate","formattedDate","splittedDate","deleteOrderRow","toggleUrgente","toggleExtra","toggleValidato","onOrderDateChange","onValidationDateChange","onDDTDateChange","alert","currentLanguage","it","UrgentOrderAlert","en","isInputAmongUsers","productIdToDes","usernameToClient","getOrderRowById","deleteOrderRowByIndex","openEditOrderRowDialog","isAdding","dialogConfig","orderRow","currentUserForecasts","orderRows","isUrgent","editedOrderRow","open","afterClosed","subscribe","result","openAreYouSureOrderRowDialog","selectedUser","isAddRowEnabled","isSubmitEnabled","UntypedFormControl","PharmaRegistryService","DropdownProductsForecastComponent","forecastService","pharmaRegistryService","globalProducts","options","filteredOptions","formControl","_filter","agInit","params","productName","disabled","assignProductName","refresh","getProducts","loading","listProductsPromise","res","error","onOptionSelected","setForecast","features","DropdownUsersForecastComponent","http","globalUsers","userName","assignUserName","getUsers","userlevel","path","pharmaRegistryUrl","get","responseType","userId","DropdownUsersOrdersComponent","usersService","isLocked","isRowLocked","listUsers","listUsersPromise","updatedOrder","setOrder","isMotivazioneVisible","usersFormControl","productOptions","productsToOptions","selectProductAtStart","onProductSelectedByDes","checkFields","filteredProductOptions","productDesToId","multiplo_confezionamento","step","usersToOptions","userOptions","userClientToId","adjustQta","qtyValue","qtyEstimated","qtyOrdered","qtyRemaining","qtyThreshold","Math","floor","getQtaApprovataByProductId","minQty","getMinOrdByProductId","getForecastRemainderPromise","tot_preventivato","tot_ordinato","rimanenza","setQtyStepByProductId","min_ord","assignOrderRowValues","onBlur","ThresholdSurpassed","Infinity","FormBuilder","ForecastReportComponent","getUsersGlobally","getReport","getForecastPdfPromise","window","reportPath","filename","OrderDdtUploadDialogComponent","orderDdtService","snackbarService","doesFileExist","orderID","isPDF","file","type","name","endsWith","onFileSelected","fileInput","target","files","selectedFile","size","maxFileSize","errors","base64String","toBase64","filebase64","Promise","resolve","reject","reader","FileReader","onload","onerror","readAsDataURL","uploadFile","openSnackbar","FileUploadStarted","setOrderDdtPromise","onlineFilename","remoteFileSize","atob","isFileLoaded","FileUploadSuccessful","getOrderDdtPromise","getFileSize","fileExists"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}